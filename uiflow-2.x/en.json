{
    "DOCS": "Docs",
    "FORUM": "Community",
    "UPDATE_LOG": "Update Log",
    "DEVICE_FILE_MANAGER": "Device File Manager",
    "VERSION": "Version",
    "NEW": "New Project",
    "OPEN": "Open",
    "SAVE": "Save",
    "LOGIN": "Login",
    "LOGOUT": "Log Out",
    "RUN": "Run",
    "RUN_TIPS": "Run the program",
    "DOWNLOAD": "Download",
    "DOWNLOAD_TIPS": "Download the program to device",
    "RESOURCE": "Resources",
    "ALL": "All",
    "OFFICIAL": "Official",
    "NON_OFFICIAL": "Non-official",
    "SELECT_DEVICE": "Select Device",
    "CREATE_GUIDE": "Create a guide line",
    "FORGOT_PW": "Forgot password ?",
    "SETTING": "Setting",
    "LANGUAGE": "Language",
    "ADD_NEW_DEVICE": "Add a new device",
    "DEVICE_INFO": "Device Info",
    "PUBLIC_DEVICE": "Public",
    "TOKEN_DEVICE": "Token Required",
    "PRIVATE_DEVICE": "Private",
    "MY_DEVICE": "My Device",
    "OTHER": "Other Device",
    "NICKNAME": "Nickname",
    "PERMISSIONS": "Permissions",
    "DEVICE": "Device",
    "ENGINE_USED_TIPS": "GFX and LVGL cannot be used together!",
    "TERMINAL": "Terminal",
    "CONFIRM": "Confirm",
    "CANCEL": "Cancel",
    "id": "id",
    "name": "Name",
    "color": "Color",
    "borderColor": "Border Color",
    "backgroundColor": "Background Color",
    "text": "Text",
    "textOffset": "Text Offset",
    "layer": "Layer",
    "createTime": "createTime",
    "rotation": "Rotation",
    "dataSource": "Data Source",
    "interval": "Interval",
    "is_update": "Auto-update",
    "use_json": "Use Json",
    "json_key": "Json Key",
    "error_msg": "Error Msg",
    "error_msg_color": "Error Msg Color",
    "type": "type",
    "x": "X",
    "y": "Y",
    "x1": "X1",
    "y1": "Y1",
    "x2": "X2",
    "y2": "Y2",
    "x3": "X3",
    "y3": "Y3",
    "font": "Font",
    "width": "Width",
    "height": "Height",
    "radius": "Radius",
    "imagePath": "Image Name",
    "imageWidth": "Image Width",
    "imageHeight": "Image Height",
    "lineWidth": "Line Width",
    "visibility": "Visibility",
    "INIT": "Init",
    "READ": "Read/Get",
    "WRITE": "Write/Set",
    "EVENT": "Event",
    "SYSTEM": "System",
    "UI": "UI",
    "TITLE": "Title",
    "LABEL": "Label",
    "LABEL_PLUS": "Label+",
    "RECT": "Rect",
    "CIRCLE": "Circle",
    "IMAGE": "Image",
    "TRIANGLE": "Triangle",
    "LINE": "Line",
    "COMMON": "Common",
    "ADVANCED": "Advanced",
    "SCREEN": "Screen",
    "HARDWARE": "Hardware",
    "MODULE": "Module",
    "BASE": "Base",
    "SOFTWARE": "Software",
    "UNIT": "Unit",
    "HAT": "C-HAT",
    "STAMP": "Stamp",
    "VARIABLES": "Variables",
    "MATH": "Math",
    "TEXT": "Text",
    "LOOPS": "Loops",
    "LOGIC": "Logic",
    "LISTS": "Lists",
    "GRAPHIC": "Graphic",
    "EMOJI": "Emoji",
    "FUNCTIONS": "Functions",
    "MAP": "Map",
    "JSON": "JSON",
    "BYTE_ARRAY": "ByteArray",
    "TIME": "Time",
    "BLE_UART": "BLE UART",
    "MQTT": "MQTT",
    "HTTP": "HTTP",
    "UDP": "UDP",
    "UDP_SERVER": "UDP Server",
    "UDP_CLIENT": "UDP Client",
    "TCP": "TCP",
    "TCP_SERVER": "TCP Server",
    "TCP_CLIENT": "TCP Client",
    "PIN": "Pin",
    "PWM": "PWM",
    "ADC": "ADC",
    "DAC": "DAC",
    "BUTTON": "Button",
    "UART": "UART",
    "RGB": "RGB",
    "IMU": "IMU",
    "I2C": "I2C",
    "SPEAKER": "Speaker",
    "TIMER": "Timer",
    "DISPLAY": "Display",
    "TOUCH": "Touch",
    "EASY_IO": "Easy I/O",
    "ENV": "ENV",
    "ENV2": "ENV II",
    "ENV3": "ENV III",
    "PAHUB": "Pa.HUB",
    "COLOR": "COLOR",
    "TOF": "ToF",
    "EXTIO": "EXT.IO",
    "EXTIO2": "EXT.IO2",
    "EARTH": "EARTH",
    "ANGLE": "ANGLE",
    "FINGER": "FINGER",
    "IR": "IR",
    "PIR": "PIR",
    "DUAL_BUTTON": "Dual-BUTTON",
    "NCIR": "NCIR",
    "RELAY": "RELAY",
    "LIGHT": "LIGHT",
    "DLIGHT": "Dlight",
    "UNIT_BUTTON": "BUTTON",
    "NAME_ALREADY_EXISTS": "The name already exists.",
    "NAME_EXISTS_FOR_ANOTHER_TYPE": "The name is already in use for another type",
    "FILE_SIZE_ERROR": "File must be less than %1.",
    "FILE_NAME_ERROR": "Filename must be less than 30 letters.",
    "VARIABLES_DEFAULT_NAME": "item",
    "TODAY": "Today",
    "DUPLICATE_BLOCK": "Duplicate",
    "ADD_COMMENT": "Add Comment",
    "REMOVE_COMMENT": "Remove Comment",
    "EXTERNAL_INPUTS": "External Inputs",
    "INLINE_INPUTS": "Inline Inputs",
    "DELETE_BLOCK": "Delete Block",
    "DELETE_X_BLOCKS": "Delete %1 Blocks",
    "DELETE_ALL_BLOCKS": "Delete all %1 blocks?",
    "CLEAN_UP": "Clean up Blocks",
    "COLLAPSE_BLOCK": "Collapse Block",
    "COLLAPSE_ALL": "Collapse Blocks",
    "EXPAND_BLOCK": "Expand Block",
    "EXPAND_ALL": "Expand Blocks",
    "DISABLE_BLOCK": "Disable Block",
    "ENABLE_BLOCK": "Enable Block",
    "HELP": "Help",
    "UNDO": "Undo",
    "REDO": "Redo",
    "CHANGE_VALUE_TITLE": "Change value:",
    "RENAME_VARIABLE": "Rename variable...",
    "RENAME_VARIABLE_TITLE": "Rename all '%1' variables to:",
    "NEW_VARIABLE": "Create variable...",
    "NEW_STRING_VARIABLE": "Create string variable...",
    "NEW_NUMBER_VARIABLE": "Create number variable...",
    "NEW_COLOUR_VARIABLE": "Create colour variable...",
    "NEW_VARIABLE_TYPE_TITLE": "New variable type:",
    "NEW_VARIABLE_TITLE": "New variable name:",
    "VARIABLE_ALREADY_EXISTS": "A variable named '%1' already exists.",
    "VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE": "A variable named '%1' already exists for another type: '%2'.",
    "DELETE_VARIABLE_CONFIRMATION": "Delete %1 uses of the '%2' variable?",
    "CANNOT_DELETE_VARIABLE_PROCEDURE": "Can't delete the variable '%1' because it's part of the definition of the function '%2'",
    "DELETE_VARIABLE": "Delete the '%1' variable",
    "COLOUR_PICKER_HELPURL": "https://en.wikipedia.org/wiki/Color",
    "COLOUR_PICKER_TOOLTIP": "Choose a colour from the palette.",
    "COLOUR_RANDOM_HELPURL": "http://randomcolour.com",
    "COLOUR_RANDOM_TITLE": "random colour",
    "COLOUR_RANDOM_TOOLTIP": "Choose a colour at random.",
    "COLOUR_RGB_HELPURL": "http://www.december.com/html/spec/colorper.html",
    "COLOUR_RGB_TITLE": "colour with",
    "COLOUR_RGB_RED": "red",
    "COLOUR_RGB_GREEN": "green",
    "COLOUR_RGB_BLUE": "blue",
    "COLOUR_RGB_TOOLTIP": "Create a colour with the specified amount of red, green, and blue. All values must be between 0 and 100.",
    "COLOUR_BLEND_HELPURL": "http://meyerweb.com/eric/tools/color-blend/",
    "COLOUR_BLEND_TITLE": "blend",
    "COLOUR_BLEND_COLOUR1": "colour 1",
    "COLOUR_BLEND_COLOUR2": "colour 2",
    "COLOUR_BLEND_RATIO": "ratio",
    "COLOUR_BLEND_TOOLTIP": "Blends two colours together with a given ratio (0.0 - 1.0).",
    "CONTROLS_REPEAT_HELPURL": "https://en.wikipedia.org/wiki/For_loop",
    "CONTROLS_REPEAT_TITLE": "repeat %1 times",
    "CONTROLS_REPEAT_INPUT_DO": "do",
    "CONTROLS_REPEAT_TOOLTIP": "Do some statements several times.",
    "CONTROLS_WHILEUNTIL_HELPURL": "https://github.com/google/blockly/wiki/Loops#repeat",
    "CONTROLS_WHILEUNTIL_OPERATOR_WHILE": "repeat while",
    "CONTROLS_WHILEUNTIL_OPERATOR_UNTIL": "repeat until",
    "CONTROLS_WHILEUNTIL_TOOLTIP_WHILE": "While a value is true, then do some statements.",
    "CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL": "While a value is false, then do some statements.",
    "CONTROLS_FOR_HELPURL": "https://github.com/google/blockly/wiki/Loops#count-with",
    "CONTROLS_FOR_TOOLTIP": "Have the variable '%1' take on the values from the start number to the end number, counting by the specified interval, and do the specified blocks.",
    "CONTROLS_FOR_TITLE": "count with %1 from %2 to %3 by %4",
    "CONTROLS_FOREACH_HELPURL": "https://github.com/google/blockly/wiki/Loops#for-each",
    "CONTROLS_FOREACH_TITLE": "for each item %1 in list %2",
    "CONTROLS_FOREACH_TOOLTIP": "For each item in a list, set the variable '%1' to the item, and then do some statements.",
    "CONTROLS_FLOW_STATEMENTS_HELPURL": "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks",
    "CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK": "break out of loop",
    "CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE": "continue with next iteration of loop",
    "CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK": "Break out of the containing loop.",
    "CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE": "Skip the rest of this loop, and continue with the next iteration.",
    "CONTROLS_FLOW_STATEMENTS_WARNING": "Warning: This block may only be used within a loop.",
    "CONTROLS_IF_HELPURL": "https://github.com/google/blockly/wiki/IfElse",
    "CONTROLS_IF_TOOLTIP_1": "If a value is true, then do some statements.",
    "CONTROLS_IF_TOOLTIP_2": "If a value is true, then do the first block of statements. Otherwise, do the second block of statements.",
    "CONTROLS_IF_TOOLTIP_3": "If the first value is true, then do the first block of statements. Otherwise, if the second value is true, do the second block of statements.",
    "CONTROLS_IF_TOOLTIP_4": "If the first value is true, then do the first block of statements. Otherwise, if the second value is true, do the second block of statements. If none of the values are true, do the last block of statements.",
    "CONTROLS_IF_MSG_IF": "if",
    "CONTROLS_IF_MSG_ELSEIF": "else if",
    "CONTROLS_IF_MSG_ELSE": "else",
    "CONTROLS_IF_IF_TOOLTIP": "Add, remove, or reorder sections to reconfigure this if block.",
    "CONTROLS_IF_ELSEIF_TOOLTIP": "Add a condition to the if block.",
    "CONTROLS_IF_ELSE_TOOLTIP": "Add a final, catch-all condition to the if block.",
    "IOS_OK": "OK",
    "IOS_CANCEL": "Cancel",
    "IOS_ERROR": "Error",
    "IOS_PROCEDURES_INPUTS": "INPUTS",
    "IOS_PROCEDURES_ADD_INPUT": "+ Add Input",
    "IOS_PROCEDURES_ALLOW_STATEMENTS": "Allow statements",
    "IOS_PROCEDURES_DUPLICATE_INPUTS_ERROR": "This function has duplicate inputs.",
    "IOS_VARIABLES_ADD_VARIABLE": "+ Add Variable",
    "IOS_VARIABLES_ADD_BUTTON": "Add",
    "IOS_VARIABLES_RENAME_BUTTON": "Rename",
    "IOS_VARIABLES_DELETE_BUTTON": "Delete",
    "IOS_VARIABLES_VARIABLE_NAME": "Variable name",
    "IOS_VARIABLES_EMPTY_NAME_ERROR": "You can't use an empty variable name.",
    "LOGIC_COMPARE_HELPURL": "https://en.wikipedia.org/wiki/Inequality_(mathematics)",
    "LOGIC_COMPARE_TOOLTIP_EQ": "Return true if both inputs equal each other.",
    "LOGIC_COMPARE_TOOLTIP_NEQ": "Return true if both inputs are not equal to each other.",
    "LOGIC_COMPARE_TOOLTIP_LT": "Return true if the first input is smaller than the second input.",
    "LOGIC_COMPARE_TOOLTIP_LTE": "Return true if the first input is smaller than or equal to the second input.",
    "LOGIC_COMPARE_TOOLTIP_GT": "Return true if the first input is greater than the second input.",
    "LOGIC_COMPARE_TOOLTIP_GTE": "Return true if the first input is greater than or equal to the second input.",
    "LOGIC_OPERATION_HELPURL": "https://github.com/google/blockly/wiki/Logic#logical-operations",
    "LOGIC_OPERATION_TOOLTIP_AND": "Return true if both inputs are true.",
    "LOGIC_OPERATION_AND": "and",
    "LOGIC_OPERATION_TOOLTIP_OR": "Return true if at least one of the inputs is true.",
    "LOGIC_OPERATION_OR": "or",
    "LOGIC_NEGATE_HELPURL": "https://github.com/google/blockly/wiki/Logic#not",
    "LOGIC_NEGATE_TITLE": "not %1",
    "LOGIC_NEGATE_TOOLTIP": "Returns true if the input is false. Returns false if the input is true.",
    "LOGIC_BOOLEAN_HELPURL": "https://github.com/google/blockly/wiki/Logic#values",
    "LOGIC_BOOLEAN_TRUE": "true",
    "LOGIC_BOOLEAN_FALSE": "false",
    "LOGIC_BOOLEAN_TOOLTIP": "Returns either true or false.",
    "LOGIC_NULL_HELPURL": "https://en.wikipedia.org/wiki/Nullable_type",
    "LOGIC_NULL": "null",
    "LOGIC_NULL_TOOLTIP": "Returns null.",
    "LOGIC_TERNARY_HELPURL": "https://en.wikipedia.org/wiki/%3F:",
    "LOGIC_TERNARY_CONDITION": "test",
    "LOGIC_TERNARY_IF_TRUE": "if true",
    "LOGIC_TERNARY_IF_FALSE": "if false",
    "LOGIC_TERNARY_TOOLTIP": "Check the condition in 'test'. If the condition is true, returns the 'if true' value, otherwise returns the 'if false' value.",
    "MATH_NUMBER_HELPURL": "https://en.wikipedia.org/wiki/Number",
    "MATH_NUMBER_TOOLTIP": "A number (The prefix '0b' or '0x' is supported).",
    "MATH_ADDITION_SYMBOL": "+",
    "MATH_SUBTRACTION_SYMBOL": "-",
    "MATH_DIVISION_SYMBOL": "÷",
    "MATH_MULTIPLICATION_SYMBOL": "×",
    "MATH_POWER_SYMBOL": "^",
    "MATH_TRIG_SIN": "sin",
    "MATH_TRIG_COS": "cos",
    "MATH_TRIG_TAN": "tan",
    "MATH_TRIG_ASIN": "asin",
    "MATH_TRIG_ACOS": "acos",
    "MATH_TRIG_ATAN": "atan",
    "MATH_ARITHMETIC_HELPURL": "https://en.wikipedia.org/wiki/Arithmetic",
    "MATH_ARITHMETIC_TOOLTIP_ADD": "Return the sum of the two numbers.",
    "MATH_ARITHMETIC_TOOLTIP_MINUS": "Return the difference of the two numbers.",
    "MATH_ARITHMETIC_TOOLTIP_MULTIPLY": "Return the product of the two numbers.",
    "MATH_ARITHMETIC_TOOLTIP_DIVIDE": "Return the quotient of the two numbers.",
    "MATH_ARITHMETIC_TOOLTIP_POWER": "Return the first number raised to the power of the second number.",
    "MATH_SINGLE_HELPURL": "https://en.wikipedia.org/wiki/Square_root",
    "MATH_SINGLE_OP_ROOT": "square root",
    "MATH_SINGLE_TOOLTIP_ROOT": "Return the square root of a number.",
    "MATH_SINGLE_OP_ABSOLUTE": "absolute",
    "MATH_SINGLE_TOOLTIP_ABS": "Return the absolute value of a number.",
    "MATH_SINGLE_TOOLTIP_NEG": "Return the negation of a number.",
    "MATH_SINGLE_TOOLTIP_LN": "Return the natural logarithm of a number.",
    "MATH_SINGLE_TOOLTIP_LOG10": "Return the base 10 logarithm of a number.",
    "MATH_SINGLE_TOOLTIP_EXP": "Return e to the power of a number.",
    "MATH_SINGLE_TOOLTIP_POW10": "Return 10 to the power of a number.",
    "MATH_TRIG_HELPURL": "https://en.wikipedia.org/wiki/Trigonometric_functions",
    "MATH_TRIG_TOOLTIP_SIN": "Return the sine of a degree (not radian).",
    "MATH_TRIG_TOOLTIP_COS": "Return the cosine of a degree (not radian).",
    "MATH_TRIG_TOOLTIP_TAN": "Return the tangent of a degree (not radian).",
    "MATH_TRIG_TOOLTIP_ASIN": "Return the arcsine of a number.",
    "MATH_TRIG_TOOLTIP_ACOS": "Return the arccosine of a number.",
    "MATH_TRIG_TOOLTIP_ATAN": "Return the arctangent of a number.",
    "MATH_CONSTANT_HELPURL": "https://en.wikipedia.org/wiki/Mathematical_constant",
    "MATH_CONSTANT_TOOLTIP": "Return one of the common constants: π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…), or ∞ (infinity).",
    "MATH_IS_EVEN": "is even",
    "MATH_IS_ODD": "is odd",
    "MATH_IS_PRIME": "is prime",
    "MATH_IS_WHOLE": "is whole",
    "MATH_IS_POSITIVE": "is positive",
    "MATH_IS_NEGATIVE": "is negative",
    "MATH_IS_DIVISIBLE_BY": "is divisible by",
    "MATH_IS_TOOLTIP": "Check if a number is an even, odd, prime, whole, positive, negative, or if it is divisible by certain number. Returns true or false.",
    "MATH_CHANGE_HELPURL": "https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter",
    "MATH_CHANGE_TITLE": "change %1 by %2",
    "MATH_CHANGE_TOOLTIP": "Add a number to variable '%1'.",
    "MATH_ROUND_HELPURL": "https://en.wikipedia.org/wiki/Rounding",
    "MATH_ROUND_TOOLTIP": "Round a number up or down.",
    "MATH_ROUND_OPERATOR_ROUND": "round",
    "MATH_ROUND_OPERATOR_ROUNDUP": "round up",
    "MATH_ROUND_OPERATOR_ROUNDDOWN": "round down",
    "MATH_ONLIST_HELPURL": "",
    "MATH_ONLIST_OPERATOR_SUM": "sum of list",
    "MATH_ONLIST_TOOLTIP_SUM": "Return the sum of all the numbers in the list.",
    "MATH_ONLIST_OPERATOR_MIN": "min of list",
    "MATH_ONLIST_TOOLTIP_MIN": "Return the smallest number in the list.",
    "MATH_ONLIST_OPERATOR_MAX": "max of list",
    "MATH_ONLIST_TOOLTIP_MAX": "Return the largest number in the list.",
    "MATH_ONLIST_OPERATOR_AVERAGE": "average of list",
    "MATH_ONLIST_TOOLTIP_AVERAGE": "Return the average (arithmetic mean) of the numeric values in the list.",
    "MATH_ONLIST_OPERATOR_MEDIAN": "median of list",
    "MATH_ONLIST_TOOLTIP_MEDIAN": "Return the median number in the list.",
    "MATH_ONLIST_OPERATOR_MODE": "modes of list",
    "MATH_ONLIST_TOOLTIP_MODE": "Return a list of the most common item(s) in the list.",
    "MATH_ONLIST_OPERATOR_STD_DEV": "standard deviation of list",
    "MATH_ONLIST_TOOLTIP_STD_DEV": "Return the standard deviation of the list.",
    "MATH_ONLIST_OPERATOR_RANDOM": "random item of list",
    "MATH_ONLIST_TOOLTIP_RANDOM": "Return a random element from the list.",
    "MATH_MODULO_HELPURL": "https://en.wikipedia.org/wiki/Modulo_operation",
    "MATH_MODULO_TITLE": "remainder of %1 ÷ %2",
    "MATH_MODULO_TOOLTIP": "Return the remainder from dividing the two numbers.",
    "MATH_CONSTRAIN_HELPURL": "https://en.wikipedia.org/wiki/Clamping_(graphics)",
    "MATH_CONSTRAIN_TITLE": "constrain %1 min %2 max %3",
    "MATH_CONSTRAIN_TOOLTIP": "Constrain a number to be between the specified limits (inclusive).",
    "MATH_RANDOM_INT_HELPURL": "https://en.wikipedia.org/wiki/Random_number_generation",
    "MATH_RANDOM_INT_TITLE": "random integer from %1 to %2",
    "MATH_RANDOM_INT_TOOLTIP": "Return a random integer between the two specified limits, inclusive.",
    "MATH_RANDOM_FLOAT_HELPURL": "https://en.wikipedia.org/wiki/Random_number_generation",
    "MATH_RANDOM_FLOAT_TITLE_RANDOM": "random fraction",
    "MATH_RANDOM_FLOAT_TOOLTIP": "Return a random fraction between 0.0 (inclusive) and 1.0 (exclusive).",
    "MATH_GET_BIT": "Get %1 bit %2",
    "MATH_SET_BIT": "Set %1 bit %2",
    "MATH_CLEAR_BIT": "Clear %1 bit %2",
    "MATH_REVERSE_BIT": "Reverse %1 bit %2",
    "MATH_BIT_OPERATION": "%1 %2 %3",
    "MATH_INT_FROM_BYTES": "int from bytes %1 %2",
    "TEXT_TEXT_HELPURL": "https://en.wikipedia.org/wiki/String_(computer_science)",
    "TEXT_TEXT_TOOLTIP": "A letter, word, or line of text.",
    "TEXT_JOIN_HELPURL": "https://github.com/google/blockly/wiki/Text#text-creation",
    "TEXT_JOIN_TITLE_CREATEWITH": "create text with",
    "TEXT_JOIN_TOOLTIP": "Create a piece of text by joining together any number of items.",
    "TEXT_CREATE_JOIN_TITLE_JOIN": "join",
    "TEXT_CREATE_JOIN_TOOLTIP": "Add, remove, or reorder sections to reconfigure this text block.",
    "TEXT_CREATE_JOIN_ITEM_TOOLTIP": "Add an item to the text.",
    "TEXT_APPEND_HELPURL": "https://github.com/google/blockly/wiki/Text#text-modification",
    "TEXT_APPEND_TITLE": "to %1 append text %2",
    "TEXT_APPEND_TOOLTIP": "Append some text to variable '%1'.",
    "TEXT_LENGTH_HELPURL": "https://github.com/google/blockly/wiki/Text#text-modification",
    "TEXT_LENGTH_TITLE": "length of %1",
    "TEXT_LENGTH_TOOLTIP": "Returns the number of letters (including spaces) in the provided text.",
    "TEXT_ISEMPTY_HELPURL": "https://github.com/google/blockly/wiki/Text#checking-for-empty-text",
    "TEXT_ISEMPTY_TITLE": "%1 is empty",
    "TEXT_ISEMPTY_TOOLTIP": "Returns true if the provided text is empty.",
    "TEXT_INDEXOF_HELPURL": "https://github.com/google/blockly/wiki/Text#finding-text",
    "TEXT_INDEXOF_TOOLTIP": "Returns the index of the first/last occurrence of the first text in the second text. Returns %1 if text is not found.",
    "TEXT_INDEXOF_TITLE": "in text %1 %2 %3",
    "TEXT_INDEXOF_OPERATOR_FIRST": "find first occurrence of text",
    "TEXT_INDEXOF_OPERATOR_LAST": "find last occurrence of text",
    "TEXT_CHARAT_HELPURL": "https://github.com/google/blockly/wiki/Text#extracting-text",
    "TEXT_CHARAT_TITLE": "in text %1 %2",
    "TEXT_CHARAT_FROM_START": "get letter #",
    "TEXT_CHARAT_FROM_END": "get letter # from end",
    "TEXT_CHARAT_FIRST": "get first letter",
    "TEXT_CHARAT_LAST": "get last letter",
    "TEXT_CHARAT_RANDOM": "get random letter",
    "TEXT_CHARAT_TAIL": "",
    "TEXT_CHARAT_TOOLTIP": "Returns the letter at the specified position.",
    "TEXT_GET_SUBSTRING_TOOLTIP": "Returns a specified portion of the text.",
    "TEXT_GET_SUBSTRING_HELPURL": "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text",
    "TEXT_GET_SUBSTRING_INPUT_IN_TEXT": "in text",
    "TEXT_GET_SUBSTRING_START_FROM_START": "get substring from letter #",
    "TEXT_GET_SUBSTRING_START_FROM_END": "get substring from letter # from end",
    "TEXT_GET_SUBSTRING_START_FIRST": "get substring from first letter",
    "TEXT_GET_SUBSTRING_END_FROM_START": "to letter #",
    "TEXT_GET_SUBSTRING_END_FROM_END": "to letter # from end",
    "TEXT_GET_SUBSTRING_END_LAST": "to last letter",
    "TEXT_GET_SUBSTRING_TAIL": "",
    "TEXT_CHANGECASE_HELPURL": "https://github.com/google/blockly/wiki/Text#adjusting-text-case",
    "TEXT_CHANGECASE_TOOLTIP": "Return a copy of the text in a different case.",
    "TEXT_CHANGECASE_OPERATOR_UPPERCASE": "to UPPER CASE",
    "TEXT_CHANGECASE_OPERATOR_LOWERCASE": "to lower case",
    "TEXT_CHANGECASE_OPERATOR_TITLECASE": "to Title Case",
    "TEXT_TRIM_HELPURL": "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces",
    "TEXT_TRIM_TOOLTIP": "Return a copy of the text with spaces removed from one or both ends.",
    "TEXT_TRIM_OPERATOR_BOTH": "trim spaces from both sides of",
    "TEXT_TRIM_OPERATOR_LEFT": "trim spaces from left side of",
    "TEXT_TRIM_OPERATOR_RIGHT": "trim spaces from right side of",
    "TEXT_PRINT_HELPURL": "https://github.com/google/blockly/wiki/Text#printing-text",
    "TEXT_PRINT_TITLE": "print %1",
    "TEXT_PRINT_TOOLTIP": "Print the specified text, number or other value.",
    "TEXT_PROMPT_HELPURL": "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user",
    "TEXT_PROMPT_TYPE_TEXT": "prompt for text with message",
    "TEXT_PROMPT_TYPE_NUMBER": "prompt for number with message",
    "TEXT_PROMPT_TOOLTIP_NUMBER": "Prompt for user for a number.",
    "TEXT_PROMPT_TOOLTIP_TEXT": "Prompt for user for some text.",
    "TEXT_COUNT_MESSAGE0": "count %1 in %2",
    "TEXT_COUNT_HELPURL": "https://github.com/google/blockly/wiki/Text#counting-substrings",
    "TEXT_COUNT_TOOLTIP": "Count how many times some text occurs within some other text.",
    "TEXT_REPLACE_MESSAGE0": "replace %1 with %2 in %3",
    "TEXT_REPLACE_HELPURL": "https://github.com/google/blockly/wiki/Text#replacing-substrings",
    "TEXT_REPLACE_TOOLTIP": "Replace all occurrences of some text within some other text.",
    "TEXT_REVERSE_MESSAGE0": "reverse %1",
    "TEXT_REVERSE_HELPURL": "https://github.com/google/blockly/wiki/Text#reversing-text",
    "TEXT_REVERSE_TOOLTIP": "Reverses the order of the characters in the text.",
    "LISTS_CREATE_EMPTY_HELPURL": "https://github.com/google/blockly/wiki/Lists#create-empty-list",
    "LISTS_CREATE_EMPTY_TITLE": "create empty list",
    "LISTS_CREATE_EMPTY_TOOLTIP": "Returns a list, of length 0, containing no data records",
    "LISTS_CREATE_WITH_HELPURL": "https://github.com/google/blockly/wiki/Lists#create-list-with",
    "LISTS_CREATE_WITH_TOOLTIP": "Create a list with any number of items.",
    "LISTS_CREATE_WITH_INPUT_WITH": "create list with",
    "LISTS_CREATE_WITH_CONTAINER_TITLE_ADD": "list",
    "LISTS_CREATE_WITH_CONTAINER_TOOLTIP": "Add, remove, or reorder sections to reconfigure this list block.",
    "LISTS_CREATE_WITH_ITEM_TOOLTIP": "Add an item to the list.",
    "LISTS_REPEAT_HELPURL": "https://github.com/google/blockly/wiki/Lists#create-list-with",
    "LISTS_REPEAT_TOOLTIP": "Creates a list consisting of the given value repeated the specified number of times.",
    "LISTS_REPEAT_TITLE": "create list with item %1 repeated %2 times",
    "LISTS_LENGTH_HELPURL": "https://github.com/google/blockly/wiki/Lists#length-of",
    "LISTS_LENGTH_TITLE": "length of %1",
    "LISTS_LENGTH_TOOLTIP": "Returns the length of a list.",
    "LISTS_ISEMPTY_HELPURL": "https://github.com/google/blockly/wiki/Lists#is-empty",
    "LISTS_ISEMPTY_TITLE": "%1 is empty",
    "LISTS_ISEMPTY_TOOLTIP": "Returns true if the list is empty.",
    "LISTS_INLIST": "in list",
    "LISTS_INDEX_OF_HELPURL": "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list",
    "LISTS_INDEX_OF_FIRST": "find first occurrence of item",
    "LISTS_INDEX_OF_LAST": "find last occurrence of item",
    "LISTS_INDEX_OF_TOOLTIP": "Returns the index of the first/last occurrence of the item in the list. Returns %1 if item is not found.",
    "LISTS_GET_INDEX_GET": "get",
    "LISTS_GET_INDEX_GET_REMOVE": "get and remove",
    "LISTS_GET_INDEX_REMOVE": "remove",
    "LISTS_GET_INDEX_FROM_START": "#",
    "LISTS_GET_INDEX_FROM_END": "# from end",
    "LISTS_GET_INDEX_FIRST": "first",
    "LISTS_GET_INDEX_LAST": "last",
    "LISTS_GET_INDEX_RANDOM": "random",
    "LISTS_GET_INDEX_TAIL": "",
    "LISTS_INDEX_FROM_START_TOOLTIP": "%1 is the first item.",
    "LISTS_INDEX_FROM_END_TOOLTIP": "%1 is the last item.",
    "LISTS_GET_INDEX_TOOLTIP_GET_FROM": "Returns the item at the specified position in a list.",
    "LISTS_GET_INDEX_TOOLTIP_GET_FIRST": "Returns the first item in a list.",
    "LISTS_GET_INDEX_TOOLTIP_GET_LAST": "Returns the last item in a list.",
    "LISTS_GET_INDEX_TOOLTIP_GET_RANDOM": "Returns a random item in a list.",
    "LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM": "Removes and returns the item at the specified position in a list.",
    "LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST": "Removes and returns the first item in a list.",
    "LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST": "Removes and returns the last item in a list.",
    "LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM": "Removes and returns a random item in a list.",
    "LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM": "Removes the item at the specified position in a list.",
    "LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST": "Removes the first item in a list.",
    "LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST": "Removes the last item in a list.",
    "LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM": "Removes a random item in a list.",
    "LISTS_SET_INDEX_HELPURL": "https://github.com/google/blockly/wiki/Lists#in-list--set",
    "LISTS_SET_INDEX_SET": "set",
    "LISTS_SET_INDEX_INSERT": "insert at",
    "LISTS_SET_INDEX_INPUT_TO": "as",
    "LISTS_SET_INDEX_TOOLTIP_SET_FROM": "Sets the item at the specified position in a list.",
    "LISTS_SET_INDEX_TOOLTIP_SET_FIRST": "Sets the first item in a list.",
    "LISTS_SET_INDEX_TOOLTIP_SET_LAST": "Sets the last item in a list.",
    "LISTS_SET_INDEX_TOOLTIP_SET_RANDOM": "Sets a random item in a list.",
    "LISTS_SET_INDEX_TOOLTIP_INSERT_FROM": "Inserts the item at the specified position in a list.",
    "LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST": "Inserts the item at the start of a list.",
    "LISTS_SET_INDEX_TOOLTIP_INSERT_LAST": "Append the item to the end of a list.",
    "LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM": "Inserts the item randomly in a list.",
    "LISTS_GET_SUBLIST_HELPURL": "https://github.com/google/blockly/wiki/Lists#getting-a-sublist",
    "LISTS_GET_SUBLIST_START_FROM_START": "get sub-list from #",
    "LISTS_GET_SUBLIST_START_FROM_END": "get sub-list from # from end",
    "LISTS_GET_SUBLIST_START_FIRST": "get sub-list from first",
    "LISTS_GET_SUBLIST_END_FROM_START": "to #",
    "LISTS_GET_SUBLIST_END_FROM_END": "to # from end",
    "LISTS_GET_SUBLIST_END_LAST": "to last",
    "LISTS_GET_SUBLIST_TAIL": "",
    "LISTS_GET_SUBLIST_TOOLTIP": "Creates a copy of the specified portion of a list.",
    "LISTS_SORT_HELPURL": "https://github.com/google/blockly/wiki/Lists#sorting-a-list",
    "LISTS_SORT_TITLE": "sort %1 %2 %3",
    "LISTS_SORT_TOOLTIP": "Sort a copy of a list.",
    "LISTS_SORT_ORDER_ASCENDING": "ascending",
    "LISTS_SORT_ORDER_DESCENDING": "descending",
    "LISTS_SORT_TYPE_NUMERIC": "numeric",
    "LISTS_SORT_TYPE_TEXT": "alphabetic",
    "LISTS_SORT_TYPE_IGNORECASE": "alphabetic, ignore case",
    "LISTS_SPLIT_HELPURL": "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists",
    "LISTS_SPLIT_LIST_FROM_TEXT": "make list from text",
    "LISTS_SPLIT_TEXT_FROM_LIST": "make text from list",
    "LISTS_SPLIT_WITH_DELIMITER": "with delimiter",
    "LISTS_SPLIT_TOOLTIP_SPLIT": "Split text into a list of texts, breaking at each delimiter.",
    "LISTS_SPLIT_TOOLTIP_JOIN": "Join a list of texts into one text, separated by a delimiter.",
    "LISTS_REVERSE_HELPURL": "https://github.com/google/blockly/wiki/Lists#reversing-a-list",
    "LISTS_REVERSE_MESSAGE0": "reverse %1",
    "LISTS_REVERSE_TOOLTIP": "Reverse a copy of a list.",
    "ORDINAL_NUMBER_SUFFIX": "",
    "VARIABLES_GET_HELPURL": "https://github.com/google/blockly/wiki/Variables#get",
    "VARIABLES_GET_TOOLTIP": "Returns the value of this variable.",
    "VARIABLES_GET_CREATE_SET": "Create 'set %1'",
    "VARIABLES_SET_HELPURL": "https://github.com/google/blockly/wiki/Variables#set",
    "VARIABLES_SET": "set %1 to %2",
    "VARIABLES_SET_TOOLTIP": "Sets this variable to be equal to the input.",
    "VARIABLES_SET_CREATE_GET": "Create 'get %1'",
    "PROCEDURES_DEFNORETURN_HELPURL": "https://en.wikipedia.org/wiki/Subroutine",
    "PROCEDURES_DEFNORETURN_TITLE": "to",
    "PROCEDURES_DEFNORETURN_PROCEDURE": "dosomething",
    "PROCEDURES_BEFORE_PARAMS": "with:",
    "PROCEDURES_CALL_BEFORE_PARAMS": "with:",
    "PROCEDURES_DEFNORETURN_DO": "",
    "PROCEDURES_DEFNORETURN_TOOLTIP": "Creates a function with no output.",
    "PROCEDURES_DEFNORETURN_COMMENT": "Describe this function...",
    "PROCEDURES_DEFRETURN_HELPURL": "https://en.wikipedia.org/wiki/Subroutine",
    "PROCEDURES_DEFRETURN_RETURN": "return",
    "PROCEDURES_DEFRETURN_TOOLTIP": "Creates a function with an output.",
    "PROCEDURES_ALLOW_STATEMENTS": "allow statements",
    "PROCEDURES_DEF_DUPLICATE_WARNING": "Warning: This function has duplicate parameters.",
    "PROCEDURES_CALLNORETURN_HELPURL": "https://en.wikipedia.org/wiki/Subroutine",
    "PROCEDURES_CALLNORETURN_TOOLTIP": "Run the user-defined function '%1'.",
    "PROCEDURES_CALLRETURN_HELPURL": "https://en.wikipedia.org/wiki/Subroutine",
    "PROCEDURES_CALLRETURN_TOOLTIP": "Run the user-defined function '%1' and use its output.",
    "PROCEDURES_MUTATORCONTAINER_TITLE": "inputs",
    "PROCEDURES_MUTATORCONTAINER_TOOLTIP": "Add, remove, or reorder inputs to this function.",
    "PROCEDURES_MUTATORARG_TITLE": "input name:",
    "PROCEDURES_MUTATORARG_TOOLTIP": "Add an input to the function.",
    "PROCEDURES_HIGHLIGHT_DEF": "Highlight function definition",
    "PROCEDURES_CREATE_DO": "Create '%1'",
    "PROCEDURES_IFRETURN_TOOLTIP": "If a value is true, then return a second value.",
    "PROCEDURES_IFRETURN_HELPURL": "http://c2.com/cgi/wiki?GuardClause",
    "PROCEDURES_IFRETURN_WARNING": "Warning: This block may be used only within a function definition.",
    "PROCEDURES_DEFRETURN_TITLE": "to",
    "CONTROLS_IF_IF_TITLE_IF": "if",
    "CONTROLS_WHILEUNTIL_INPUT_DO": "do",
    "CONTROLS_IF_MSG_THEN": "do",
    "CONTROLS_IF_ELSE_TITLE_ELSE": "else",
    "PROCEDURES_DEFRETURN_PROCEDURE": "dosomething",
    "LISTS_GET_SUBLIST_INPUT_IN_LIST": "in list",
    "LISTS_GET_INDEX_INPUT_IN_LIST": "in list",
    "MATH_CHANGE_TITLE_ITEM": "item",
    "PROCEDURES_DEFRETURN_DO": "",
    "CONTROLS_IF_ELSEIF_TITLE_ELSEIF": "else if",
    "LISTS_GET_INDEX_HELPURL": "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list",
    "CONTROLS_FOREACH_INPUT_DO": "do",
    "LISTS_SET_INDEX_INPUT_IN_LIST": "in list",
    "CONTROLS_FOR_INPUT_DO": "do",
    "LISTS_CREATE_WITH_ITEM_TITLE": "item",
    "TEXT_APPEND_VARIABLE": "item",
    "TEXT_CREATE_JOIN_ITEM_TITLE_ITEM": "item",
    "LISTS_INDEX_OF_INPUT_IN_LIST": "in list",
    "PROCEDURES_DEFRETURN_COMMENT": "Describe this function...",
    "TEXT_ADD": "%1 + %2",
    "DECODE_STR": "decode %1 ",
    "ENCODE_STR": "encode %1 ",
    "LOGIC_TRY": "try  %1",
    "LOGIC_EXCEPT": "except %1",
    "LOGIC_SWITCH": "switch %1",
    "LOGIC_CASE": "case",
    "LOGIC_DEFAULT": "default",
    "TIMER_DELAY_MS": "%2 Wait %1 ms",
    "TIMER_GET_MS": "Get ticks ms %1",
    "THERMAL": "THERMAL",
    "DUMPS_JSON": "dumps %1 to json",
    "LOADS_JSON": "loads json %1",
    "MAP_ON_LOOP": "create map",
    "MAP_ON_func": "%1",
    "MAP_CLEAR": " map clear %1",
    "GET_MAP_IN": "map %1 contain key %2",
    "CREATE_MAP_KEY": "key %1 value %2",
    "GET_MAP_KEY": "get key %1 in map %2",
    "ADD_MAP_KEY": "in map %1 add key %2 value %3",
    "SET_MAP_KEY": "in map %1 set key %2 value %3",
    "DELETE_MAP_KEY": "in map %1 delete key %2",
    "JSON_DUMSP_TO_JSON_MSG0": "dumps",
    "JSON_DUMSP_TO_JSON_MSG1": "to json",
    "JSON_LOADS_JSON_MSG0": "loads json",
    "MAP_CLEAR_MSG0": "map clear",
    "MAP_GET_IN_MSG0": "map",
    "MAP_GET_IN_MSG1": "contain key",
    "MAP_GET_KEY_MSG0": "get key",
    "MAP_GET_KEY_MSG1": "in map",
    "MAP_ADD_KEY_VALUE_MSG0": "in map",
    "MAP_ADD_KEY_VALUE_MSG1": "add key",
    "MAP_ADD_KEY_VALUE_MSG2": "value",
    "MAP_SET_KEY_VALUE_MSG0": "in map",
    "MAP_SET_KEY_VALUE_MSG1": "set key",
    "MAP_SET_KEY_VALUE_MSG2": "value",
    "MAP_DEL_KEY_MSG0": "in map",
    "MAP_DEL_KEY_MSG1": "delete key",
    "TEXT_CONVERT_STR_MSG0": "convert to str",
    "TEXT_ADD_STR_MSG0": "+",
    "TEXT_DECODE_STR_MSG0": "decode",
    "TEXT_ENCODE_STR_MSG0": "encode",
    "TEXT_REDUCE_FLOAT_MSG0": "reduce",
    "TEXT_REDUCE_FLOAT_MSG1": "to",
    "TEXT_REDUCE_FLOAT_MSG2": "decimal places",
    "BYTEARRAY_CREATE_EMPTY_MSG0": "create empty bytearray",
    "BYTEARRAY_CREATE_EMPTY_MSG1": "with length",
    "BYTEARRAY_APPEND_MSG0": "Bytearray",
    "BYTEARRAY_APPEND_MSG1": "append",
    "BYTEARRAY_EXTEND_MSG0": "Bytearray",
    "BYTEARRAY_EXTEND_MSG1": "extend",
    "BYTEARRAY_DECODE_MSG0": "bytearray",
    "BYTEARRAY_DECODE_MSG1": "decode",
    "SYSTEM_M5_BEGIN_MSG0": "Init built-in hardware at beginning",
    "SYSTEM_M5_UPDATE_MSG0": "Update button,touch,etc. in loop",
    "EXECUTE_CODE_MSG0": "Execute code",
    "SET_SCREEN_COLOR_MSG0": "Set screen background color",
    "SET_SCREEN_ROTATION_MSG0": "Set screen rotation",
    "SET_SCREEN_BRIGHTNESS_MSG0": "Set screen brightness",
    "SET_SCREEN_COLOR_MULTIPLE_MSG0": "Set screen background color",
    "TITLE_SET_COLOR_MSG0": "Set",
    "TITLE_SET_COLOR_MSG1": "text color",
    "TITLE_SET_COLOR_MSG2": "background color",
    "TITLE_SET_TEXT_MSG0": "Set",
    "TITLE_SET_TEXT_MSG1": "text",
    "TITLE_SET_TEXT_POSITION_MSG0": "Set",
    "TITLE_SET_TEXT_POSITION_MSG1": "text x position",
    "TITLE_SET_VISIBLE_MSG0": "Set",
    "TITLE_SET_COLOR_MULTIPLE_MSG0": "Set",
    "TITLE_SET_COLOR_MULTIPLE_MSG1": "text color",
    "TITLE_SET_COLOR_MULTIPLE_MSG2": "background color",
    "LABEL_SET_SIZE_MSG0": "Set",
    "LABEL_SET_SIZE_MSG1": "size",
    "LABEL_SET_TEXT_MSG0": "Set",
    "LABEL_SET_TEXT_MSG1": "text",
    "LABEL_SET_COLOR_MSG0": "Set",
    "LABEL_SET_COLOR_MSG1": "color",
    "LABEL_SET_POSITION_MSG0": "Set",
    "LABEL_SET_POSITION_MSG1": "x",
    "LABEL_SET_POSITION_MSG2": "y",
    "LABEL_SET_VISIBLE_MSG0": "Set",
    "LABEL_SET_FONT_MSG0": "Set",
    "LABEL_SET_FONT_MSG1": "font",
    "LABEL_SET_COLOR_MULTIPLE_MSG0": "Set",
    "LABEL_SET_COLOR_MULTIPLE_MSG1": "color",
    "LABEL_PLUS_SET_SIZE_MSG0": "Set",
    "LABEL_PLUS_SET_SIZE_MSG1": "size",
    "LABEL_PLUS_SET_TEXT_MSG0": "Set",
    "LABEL_PLUS_SET_TEXT_MSG1": "text",
    "LABEL_PLUS_SET_COLOR_MSG0": "Set",
    "LABEL_PLUS_SET_COLOR_MSG1": "color",
    "LABEL_PLUS_SET_POSITION_MSG0": "Set",
    "LABEL_PLUS_SET_POSITION_MSG1": "x",
    "LABEL_PLUS_SET_POSITION_MSG2": "y",
    "LABEL_PLUS_SET_VISIBLE_MSG0": "Set",
    "LABEL_PLUS_SET_FONT_MSG0": "Set",
    "LABEL_PLUS_SET_FONT_MSG1": "font",
    "LABEL_PLUS_SET_COLOR_MULTIPLE_MSG0": "Set",
    "LABEL_PLUS_SET_COLOR_MULTIPLE_MSG1": "color",
    "LABEL_PLUS_UPDATE_ENABLE_MSG0": "Set",
    "LABEL_PLUS_UPDATE_ENABLE_MSG1": "update enable",
    "LABEL_PLUS_UPDATE_PERIOD_MSG0": "Set",
    "LABEL_PLUS_UPDATE_PERIOD_MSG1": "update interval",
    "LABEL_PLUS_IS_VALID_DATA_MSG0": "is",
    "LABEL_PLUS_IS_VALID_DATA_MSG1": "valid data",
    "LABEL_PLUS_GET_DATA_MSG0": "get",
    "LABEL_PLUS_GET_DATA_MSG1": "display data",
    "RECT_SET_COLOR_MSG0": "Set",
    "RECT_SET_COLOR_MSG1": "border color",
    "RECT_SET_COLOR_MSG2": "background color",
    "RECT_SET_POSITION_MSG0": "Set",
    "RECT_SET_POSITION_MSG1": "x",
    "RECT_SET_POSITION_MSG2": "y",
    "RECT_SET_SIZE_MSG0": "Set",
    "RECT_SET_SIZE_MSG1": "width",
    "RECT_SET_SIZE_MSG2": "height",
    "RECT_SET_VISIBLE_MSG0": "Set",
    "RECT_SET_COLOR_MULTIPLE_MSG0": "Set",
    "RECT_SET_COLOR_MULTIPLE_MSG1": "border color",
    "RECT_SET_COLOR_MULTIPLE_MSG2": "background color",
    "CIRCLE_SET_COLOR_MSG0": "Set",
    "CIRCLE_SET_COLOR_MSG1": "border color",
    "CIRCLE_SET_COLOR_MSG2": "background color",
    "CIRCLE_SET_POSITION_MSG0": "Set",
    "CIRCLE_SET_POSITION_MSG1": "x",
    "CIRCLE_SET_POSITION_MSG2": "y",
    "CIRCLE_SET_RADIUS_MSG0": "Set",
    "CIRCLE_SET_RADIUS_MSG1": "radius",
    "CIRCLE_SET_VISIBLE_MSG0": "Set",
    "CIRCLE_SET_COLOR_MULTIPLE_MSG0": "Set",
    "CIRCLE_SET_COLOR_MULTIPLE_MSG1": "border color",
    "CIRCLE_SET_COLOR_MULTIPLE_MSG2": "background color",
    "IMAGE_SET_POSITION_MSG0": "Set",
    "IMAGE_SET_POSITION_MSG1": "x",
    "IMAGE_SET_POSITION_MSG2": "y",
    "IMAGE_SET_FILE_PATH_MSG0": "Set",
    "IMAGE_SET_FILE_PATH_MSG1": "image",
    "IMAGE_SET_VISIBLE_MSG0": "Set",
    "IMAGE_SET_FILE_NAME_MSG0": "Set",
    "IMAGE_SET_FILE_NAME_MSG1": "image",
    "TRIANGLE_SET_COLOR_MSG0": "Set",
    "TRIANGLE_SET_COLOR_MSG1": "border color",
    "TRIANGLE_SET_COLOR_MSG2": "background color",
    "TRIANGLE_SET_VISIBLE_MSG0": "Set",
    "TRIANGLE_SET_POINTS_MSG0": "Set",
    "TRIANGLE_SET_POINTS_MSG1": "x0",
    "TRIANGLE_SET_POINTS_MSG2": "y0",
    "TRIANGLE_SET_POINTS_MSG3": "x1",
    "TRIANGLE_SET_POINTS_MSG4": "y1",
    "TRIANGLE_SET_POINTS_MSG5": "x2",
    "TRIANGLE_SET_POINTS_MSG6": "y2",
    "TRIANGLE_SET_COLOR_MULTIPLE_MSG0": "Set",
    "TRIANGLE_SET_COLOR_MULTIPLE_MSG1": "border color",
    "TRIANGLE_SET_COLOR_MULTIPLE_MSG2": "background color",
    "LINE_SET_COLOR_MSG0": "Set",
    "LINE_SET_COLOR_MSG1": "color",
    "LINE_SET_VISIBLE_MSG0": "Set",
    "LINE_SET_POINTS_MSG0": "Set",
    "LINE_SET_POINTS_MSG1": "x0",
    "LINE_SET_POINTS_MSG2": "y0",
    "LINE_SET_POINTS_MSG3": "x1",
    "LINE_SET_POINTS_MSG4": "y1",
    "LINE_SET_COLOR_MULTIPLE_MSG0": "Set",
    "LINE_SET_COLOR_MULTIPLE_MSG1": "color",
    "PIN_INIT_MSG0": "Init",
    "PIN_INIT_MSG1": "mode",
    "PIN_INIT_MSG2": "pull",
    "PIN_ON_MSG0": "on",
    "PIN_OFF_MSG0": "off",
    "PIN_SET_VALUE_MSG0": "Set",
    "PIN_SET_VALUE_MSG1": "value",
    "PIN_GET_VALUE_MSG0": "get",
    "PIN_GET_VALUE_MSG1": "value",
    "PIN_INIT_INPUT_MSG0": "Init Pin",
    "PIN_UNUSED_MSG0": "Pin unused",
    "ADC_INIT_MSG0": "Init",
    "ADC_INIT_MSG1": "attenuation",
    "ADC_SET_ATTEN_MSG0": "Set",
    "ADC_SET_ATTEN_MSG1": "atten",
    "ADC_SET_WIDTH_MSG0": "Set",
    "ADC_SET_WIDTH_MSG1": "width",
    "ADC_READ_MSG0": "read",
    "ADC_READ_U16_MSG0": "read",
    "ADC_READ_U16_MSG1": "u16",
    "ADC_READ_UV_MSG0": "read",
    "ADC_READ_UV_MSG1": "microvolts",
    "ADC_INIT_INPUT_MSG0": "Init Pin",
    "PWM_INIT_MSG0": "Init",
    "PWM_INIT_MSG1": "freq",
    "PWM_SET_DUTY_MSG0": "Set",
    "PWM_SET_DUTY_MSG1": "duty",
    "PWM_SET_DUTY_U16_MSG0": "Set",
    "PWM_SET_DUTY_U16_MSG1": "duty u16",
    "PWM_SET_FREQ_MSG0": "Set",
    "PWM_SET_FREQ_MSG1": "freq",
    "PWM_GET_FREQ_MSG0": "get",
    "PWM_GET_FREQ_MSG1": "freq",
    "PWM_GET_DUTY_MSG0": "get",
    "PWM_GET_DUTY_MSG1": "duty",
    "PWM_GET_DUTY_U16_MSG0": "get",
    "PWM_GET_DUTY_U16_MSG1": "duty u16",
    "PWM_DEINIT_MSG0": "deinit",
    "PWM_INIT_INPUT_MSG0": "Init Pin",
    "BUTTON_IS_HOLDING_MSG0": "is holding",
    "BUTTON_IS_PRESSED_MSG0": "is pressed",
    "BUTTON_IS_RELEASED_MSG0": "is released",
    "BUTTON_WAS_CLICKED_MSG0": "was clicked",
    "BUTTON_WAS_DOUBLE_CLICKED_MSG0": "was double clicked",
    "BUTTON_WAS_HOLD_MSG0": "was hold",
    "BUTTON_WAS_PRESSED_MSG0": "was pressed",
    "BUTTON_WAS_RELEASED_MSG0": "was released",
    "BUTTON_WAS_SINGLE_CLICKED_MSG0": "was single clicked",
    "BUTTON_CALLBACK_MSG0": "When button",
    "BUTTON_CALLBACK_MSG1": "was",
    "BUTTON_INIT_MSG0": "Init button (pin)",
    "BUTTON_INIT_MSG1": "mode",
    "BUTTON_INIT_MSG2": "pull",
    "BUTTON_TICK_MSG0": "update in loop",
    "UART_INIT_MSG0": "Init UART",
    "UART_INIT_MSG1": "with",
    "UART_INIT_MSG2": "baudrate",
    "UART_INIT_MSG3": "bits",
    "UART_INIT_MSG4": "parity",
    "UART_INIT_MSG5": "stop",
    "UART_INIT_MSG6": "TX",
    "UART_INIT_MSG7": "RX",
    "UART_INIT_SETUP_MSG0": "UART",
    "UART_INIT_SETUP_MSG1": "setup",
    "UART_INIT_SETUP_MSG2": "baudrate",
    "UART_INIT_SETUP_MSG3": "bits",
    "UART_INIT_SETUP_MSG4": "parity",
    "UART_INIT_SETUP_MSG5": "stop",
    "UART_INIT_SETUP_MSG6": "TX",
    "UART_INIT_SETUP_MSG7": "RX",
    "UART_DEINIT_MSG0": "UART",
    "UART_DEINIT_MSG1": "deinit",
    "UART_AVAILABLE_CHAR_MSG0": "UART",
    "UART_AVAILABLE_CHAR_MSG1": "count of available",
    "UART_READ_ALL_MSG0": "UART",
    "UART_READ_ALL_MSG1": "read all",
    "UART_READ_BYTES_MSG0": "UART",
    "UART_READ_BYTES_MSG1": "read",
    "UART_READ_BYTES_MSG2": "bytes",
    "UART_READ_LINE_MSG0": "UART",
    "UART_READ_LINE_MSG1": "read line",
    "UART_READ_RAW_DATA_MSG0": "UART",
    "UART_READ_RAW_DATA_MSG1": "read a Raw Data (0 ~ 255)",
    "UART_READ_INTO_MSG0": "UART",
    "UART_READ_INTO_MSG1": "read into buf",
    "UART_READ_BYTES_INTO_MSG0": "UART",
    "UART_READ_BYTES_INTO_MSG1": "read",
    "UART_READ_BYTES_INTO_MSG2": "bytes into buf",
    "UART_WRITE_MSG0": "UART",
    "UART_WRITE_MSG1": "write",
    "UART_WRITE_LINE_MSG0": "UART",
    "UART_WRITE_LINE_MSG1": "write line",
    "UART_WRITE_VAR_MSG0": "UART",
    "UART_WRITE_VAR_MSG1": "write",
    "UART_WRITE_LIST_TUPLE_MSG0": "UART",
    "UART_WRITE_LIST_TUPLE_MSG1": "write list or tuple",
    "UART_WRITE_LIST_MSG0": "UART",
    "UART_WRITE_LIST_MSG1": "write Raw Data",
    "UART_SET_READ_INTO_MSG0": "UART",
    "UART_SET_READ_INTO_MSG1": "read into buf",
    "UART_SET_READ_BYTES_INTO_MSG0": "UART",
    "UART_SET_READ_BYTES_INTO_MSG1": "read",
    "UART_SET_READ_BYTES_INTO_MSG2": "bytes into buf",
    "IMU_GET_ACCEL_MSG0": "IMU get accel",
    "IMU_GET_GYRO_MSG0": "IMU get gyro",
    "RGB_INIT_MSG0": "RGB init",
    "RGB_SET_INDEX_COLOR_MSG0": "set index",
    "RGB_SET_INDEX_COLOR_MSG1": "color",
    "RGB_FILL_COLOR_MSG0": "fill color",
    "RGB_SET_BRIGHTNESS_MSG0": "set brightness",
    "I2C_INIT_MSG0": "Init",
    "I2C_INIT_MSG1": "scl",
    "I2C_INIT_MSG2": "sda",
    "I2C_INIT_MSG3": "freq",
    "I2C_SCAN_MSG0": "scan device (return 7-bit address list)",
    "I2C_START_MSG0": "generate START condition",
    "I2C_STOP_MSG0": "generate STOP condition",
    "I2C_READINTO_MSG0": "read into buf",
    "I2C_READINTO_MSG1": "NACK",
    "I2C_READFROM_MSG0": "read from addr",
    "I2C_READFROM_MSG1": "nbytes",
    "I2C_READFROM_MSG2": "STOP",
    "I2C_READFROM_MSG3": "(return bytes)",
    "I2C_READFROM_INTO_MSG0": "read from addr",
    "I2C_READFROM_INTO_MSG1": "into buf",
    "I2C_READFROM_INTO_MSG2": "STOP",
    "I2C_READFROM_MEM_MSG0": "read from addr",
    "I2C_READFROM_MEM_MSG1": "memory addr",
    "I2C_READFROM_MEM_MSG2": "nbytes",
    "I2C_READFROM_MEM_MSG3": "(return bytes)",
    "I2C_READFROM_MEM_INTO_MSG0": "read from addr",
    "I2C_READFROM_MEM_INTO_MSG1": "memory addr",
    "I2C_READFROM_MEM_INTO_MSG2": "into buf",
    "I2C_WRITE_RETURN_MSG0": "write buf",
    "I2C_WRITE_RETURN_MSG1": "(return nbytes written)",
    "I2C_WRITE_MSG0": "write buf",
    "I2C_WRITETO_MSG0": "write buf",
    "I2C_WRITETO_MSG1": "to addr",
    "I2C_WRITETO_MSG2": "stop",
    "I2C_WRITETO_RETURN_MSG0": "write buf",
    "I2C_WRITETO_RETURN_MSG1": "to addr",
    "I2C_WRITETO_RETURN_MSG2": "stop",
    "I2C_WRITETO_RETURN_MSG3": "(return nbytes written)",
    "I2C_WRITETO_MEM_MSG0": "write buf",
    "I2C_WRITETO_MEM_MSG1": "to addr",
    "I2C_WRITETO_MEM_MSG2": "memory addr",
    "SPEAKER_STOP_MSG0": "Speaker play stop",
    "SPEAKER_TONE_MSG0": "Speaker play tone freq",
    "SPEAKER_TONE_MSG1": "millisecond",
    "SPEAKER_PLAYWAV_MSG0": "Speaker play WAV",
    "SPEAKER_GET_VOLUME_MSG0": "Speaker get volume",
    "SPEAKER_SET_VOLUME_MSG0": "Speaker set volume",
    "SPEAKER_GET_CONFIG_MSG0": "Speaker get config (JSON String)",
    "SPEAKER_USER_CONFIG_MSG0": "Speaker config",
    "SPEAKER_USER_CONFIG_MSG1": "Data Pin",
    "TIMER_INIT_MSG0": "New",
    "TIMER_SET_MODE_MSG0": "mode",
    "TIMER_SET_MODE_MSG1": "period",
    "TIMER_SET_MODE_MSG2": "milliseconds",
    "TIMER_DEINIT_MSG0": "deinit",
    "TIMER_CALLBACK_MSG0": "callback",
    "DISPLAY_CONFIG_MSG0": "User Display config",
    "DISPLAY_CONFIG_MSG1": "type",
    "DISPLAY_CONFIG_MSG2": "resolution",
    "DISPLAY_CONFIG_MSG3": "color",
    "DISPLAY_CONFIG_MSG4": "SPI Bus",
    "DISPLAY_CONFIG_MSG5": "pin config",
    "DISPLAY_CONFIG_MSG6": "backlight",
    "DISPLAY_CONFIG_RESOLUTION_MSG0": "width",
    "DISPLAY_CONFIG_RESOLUTION_MSG1": "height",
    "DISPLAY_CONFIG_RESOLUTION_MSG2": "offset x",
    "DISPLAY_CONFIG_RESOLUTION_MSG3": "offset y",
    "DISPLAY_CONFIG_COLOR_ORDER_MSG0": "invert",
    "DISPLAY_CONFIG_COLOR_ORDER_MSG1": "RGB order",
    "DISPLAY_CONFIG_SPI_BUS_MSG0": "SPI host ID",
    "DISPLAY_CONFIG_SPI_BUS_MSG1": "SPI freq",
    "DISPLAY_CONFIG_SPI_BUS_MSG2": "sclk",
    "DISPLAY_CONFIG_SPI_BUS_MSG3": "mosi",
    "DISPLAY_CONFIG_SPI_BUS_MSG4": "miso",
    "DISPLAY_CONFIG_SPI_BUS_MSG5": "dc",
    "DISPLAY_CONFIG_SPI_BUS_MSG6": "cs",
    "DISPLAY_CONFIG_SPI_BUS_MSG7": "rst",
    "DISPLAY_CONFIG_SPI_BUS_MSG8": "busy",
    "DISPLAY_CONFIG_BACKLIGHT_MSG0": "Pin",
    "DISPLAY_CONFIG_BACKLIGHT_MSG1": "invert",
    "DISPLAY_CONFIG_BACKLIGHT_MSG2": "PWM freq",
    "DISPLAY_CONFIG_BACKLIGHT_MSG3": "PWM channel",
    "TOUCH_GET_COUNT_MSG0": "get touch count (return int)",
    "TOUCH_GET_X_MSG0": "get touch coordinate X (return int)",
    "TOUCH_GET_Y_MSG0": "get touch coordinate Y (return int)",
    "TOUCH_GET_POINT_MSG0": "get touch point Raw (return tuple)",
    "TIME_GET_UTC_TIME_MSG0": "get UTC time",
    "TIME_GET_LOCAL_TIME_STAMP_MSG0": "get local time stamp since Jan 1, 2000",
    "TIME_GET_LOCAL_TIME_MSG0": "get local time",
    "TIME_GET_TIME_STAMP_MSG0": "get time stamp since",
    "TIME_GET_TIME_STAMP_MSG1": "year",
    "TIME_GET_TIME_STAMP_MSG2": "month",
    "TIME_GET_TIME_STAMP_MSG3": "mday",
    "TIME_GET_TIME_STAMP_MSG4": "hour",
    "TIME_GET_TIME_STAMP_MSG5": "minute",
    "TIME_GET_TIME_STAMP_MSG6": "second",
    "TIME_GET_TIME_STAMP_MSG7": "weekday",
    "TIME_GET_TIME_STAMP_MSG8": "yearday",
    "TIME_SLEEP_SECOND_MSG0": "Sleep",
    "TIME_SLEEP_SECOND_MSG1": "seconds",
    "TIME_SLEEP_MILLISECOND_MSG0": "Sleep",
    "TIME_SLEEP_MILLISECOND_MSG1": "milliseconds",
    "TIME_SLEEP_MICROSECOND_MSG0": "Sleep",
    "TIME_SLEEP_MICROSECOND_MSG1": "microseconds",
    "TIME_GET_TICKS_MS_MSG0": "get ticks in milliseconds",
    "TIME_GET_TICKS_US_MSG0": "get ticks in microseconds",
    "TIME_GET_TICKS_CPU_MSG0": "get CPU ticks count",
    "TIME_GET_TICKS_ADD_MSG0": "ticks",
    "TIME_GET_TICKS_ADD_MSG1": "add delta",
    "TIME_GET_TICKS_DIFF_MSG0": "ticks diff",
    "TIME_GET_SYSTEM_TIME_MSG0": "get system uptime in seconds",
    "BLE_UART_INIT_MSG0": "Init BLE Uart",
    "BLE_UART_DEINIT_MSG0": "deinit",
    "BLE_UART_IS_CONNECTED_MSG0": "is connected",
    "BLE_UART_AVAILABLE_CHAR_MSG0": "count of available",
    "BLE_UART_READ_ALL_MSG0": "read all",
    "BLE_UART_READ_BYTES_MSG0": "read",
    "BLE_UART_READ_BYTES_MSG1": "bytes",
    "BLE_UART_READ_LINE_MSG0": "read line",
    "BLE_UART_READ_RAW_DATA_MSG0": "read a Raw Data (0 ~ 255)",
    "BLE_UART_CONNECT_MSG0": "connect",
    "BLE_UART_CLOSE_MSG0": "close",
    "BLE_UART_WRITE_MSG0": "write",
    "BLE_UART_WRITE_LINE_MSG0": "write line",
    "BLE_UART_WRITE_VAR_MSG0": "write",
    "BLE_UART_WRITE_LIST_TUPLE_MSG0": "write list or tuple",
    "BLE_UART_WRITE_LIST_MSG0": "write Raw Data",
    "BLE_UART_SCAN_CALLBACK_MSG0": "When",
    "BLE_UART_SCAN_CALLBACK_MSG1": "addr type",
    "BLE_UART_SCAN_CALLBACK_MSG2": "addr",
    "BLE_UART_SCAN_CALLBACK_MSG3": "name",
    "MQTT_SET_CLIENT_MSG0": "Set MQTT client id",
    "MQTT_SET_CLIENT_MSG1": "server",
    "MQTT_SET_CLIENT_MSG2": "port",
    "MQTT_SET_CLIENT_MSG3": "user",
    "MQTT_SET_CLIENT_MSG4": "password",
    "MQTT_SET_CLIENT_MSG5": "keepalive",
    "MQTT_SET_LAST_WILL_MSG0": "Set last will topic",
    "MQTT_SET_LAST_WILL_MSG1": "msg",
    "MQTT_CONNECT_MSG0": "MQTT connect clean session",
    "MQTT_DISCONNECT_MSG0": "MQTT disconnect",
    "MQTT_RECONNECT_MSG0": "MQTT reconnect",
    "MQTT_PUBLISH_TOPIC_MSG0": "MQTT publish topic",
    "MQTT_PUBLISH_TOPIC_MSG1": "msg",
    "MQTT_PUBLISH_TOPIC_MSG2": "Qos",
    "MQTT_WAIT_MSG_MSG0": "MQTT apply for messaging",
    "MQTT_SUBSCRIBE_MSG0": "MQTT subscribe",
    "MQTT_SUBSCRIBE_MSG1": "with topic",
    "MQTT_GET_TOPIC_MSG0": "get topic (return bytes)",
    "MQTT_GET_MSG_MSG0": "get msg (return bytes)",
    "HTTP_REQUEST_MSG0": "HTTP request",
    "HTTP_REQUEST_MSG1": "method",
    "HTTP_REQUEST_MSG2": "URL",
    "HTTP_REQUEST_MSG4": "data",
    "HTTP_GET_STATUS_CODE_MSG0": "get status code (return int)",
    "HTTP_GET_REASON_MSG0": "get reason (return bytes)",
    "HTTP_GET_HEADERS_MSG0": "get headers (return map)",
    "HTTP_GET_CONTENT_MSG0": "get content (return bytes)",
    "HTTP_GET_TEXT_MSG0": "get text (return bytes)",
    "HTTP_GET_JSON_MSG0": "get json (return json object)",
    "HTTP_CLOSE_MSG0": "HTTP close",
    "UDP_SERVER_START_MSG0": "UDP server start",
    "UDP_SERVER_START_MSG1": "IP address",
    "UDP_SERVER_START_MSG2": "port",
    "UDP_SERVER_CLOSE_MSG0": "UDP server close",
    "UDP_SERVER_RECV_MSG0": "UDP server receive",
    "UDP_SERVER_RECV_MSG1": "bytes",
    "UDP_SERVER_READ_MSG0": "UDP server read",
    "UDP_SERVER_READ_MSG1": "bytes",
    "UDP_SERVER_RECVFROM_MSG0": "UDP server receive",
    "UDP_SERVER_RECVFROM_MSG1": "bytes (return tuple)",
    "UDP_SERVER_SEND_MSG0": "UDP server send",
    "UDP_SERVER_WRITE_MSG0": "UDP server write",
    "UDP_SERVER_SENDTO_MSG0": "UDP server send",
    "UDP_SERVER_SENDTO_MSG1": "to client",
    "UDP_SERVER_SET_SOCKOPT_MSG0": "UDP server set address reuse",
    "UDP_CLIENT_START_MSG0": "UDP client start",
    "UDP_CLIENT_START_MSG1": "IP address",
    "UDP_CLIENT_START_MSG2": "port",
    "UDP_CLIENT_CLOSE_MSG0": "UDP client close",
    "UDP_CLIENT_RECV_MSG0": "UDP client receive",
    "UDP_CLIENT_RECV_MSG1": "bytes",
    "UDP_CLIENT_READ_MSG0": "UDP client read",
    "UDP_CLIENT_READ_MSG1": "bytes",
    "UDP_CLIENT_SEND_MSG0": "UDP client send",
    "UDP_CLIENT_WRITE_MSG0": "UDP client write",
    "UDP_CLIENT_SET_SOCKOPT_MSG0": "UDP client set address reuse",
    "TCP_SERVER_START_MSG0": "TCP server start",
    "TCP_SERVER_START_MSG1": "IP address",
    "TCP_SERVER_START_MSG2": "port",
    "TCP_SERVER_START_MSG3": "listen",
    "TCP_SERVER_ACCEPT_MSG0": "TCP server accept client connect",
    "TCP_SERVER_CLOSE_MSG0": "TCP server close",
    "TCP_SERVER_CLOSE_CLIENT_MSG0": "Close",
    "TCP_SERVER_CLOSE_CLIENT_MSG1": "client connection",
    "TCP_SERVER_RECV_MSG0": "receive",
    "TCP_SERVER_RECV_MSG1": "bytes",
    "TCP_SERVER_READ_MSG0": "read",
    "TCP_SERVER_READ_MSG1": "bytes",
    "TCP_SERVER_SEND_MSG0": "send",
    "TCP_SERVER_WRITE_MSG0": "write",
    "TCP_SERVER_SET_SOCKOPT_MSG0": "TCP server set address reuse",
    "TCP_SERVER_SET_BLOCKING_MSG0": "TCP server set blocking mode",
    "TCP_SERVER_SET_TIMEOUT_MSG0": "TCP server set timeout",
    "TCP_CLIENT_START_MSG0": "TCP client start",
    "TCP_CLIENT_START_MSG1": "IP address",
    "TCP_CLIENT_START_MSG2": "port",
    "TCP_CLIENT_CLOSE_MSG0": "TCP client close",
    "TCP_CLIENT_RECV_MSG0": "TCP client receive",
    "TCP_CLIENT_RECV_MSG1": "bytes",
    "TCP_CLIENT_READ_MSG0": "TCP client read",
    "TCP_CLIENT_READ_MSG1": "bytes",
    "TCP_CLIENT_READLINE_MSG0": "TCP client read line (return bytes)",
    "TCP_CLIENT_SEND_MSG0": "TCP client send",
    "TCP_CLIENT_WRITE_MSG0": "TCP client write",
    "TCP_CLIENT_SET_BLOCKING_MSG0": "TCP client set blocking mode",
    "TCP_CLIENT_SET_TIMEOUT_MSG0": "TCP client set timeout",
    "UNIT_ENV_INIT_MSG0": "Init",
    "UNIT_ENV_GET_TEMPERATURE_MSG0": "get",
    "UNIT_ENV_GET_TEMPERATURE_MSG1": "temperature",
    "UNIT_ENV_GET_PRESSURE_MSG0": "get",
    "UNIT_ENV_GET_PRESSURE_MSG1": "pressure",
    "UNIT_ENV_GET_HUMIDITY_MSG0": "get",
    "UNIT_ENV_GET_HUMIDITY_MSG1": "humidity",
    "UNIT_PAHUB_INIT_MSG0": "Init",
    "UNIT_PAHUB_SELECT_CHANNEL_MSG0": "select channel",
    "UNIT_PAHUB_RELEASE_CHANNEL_MSG0": "release channel",
    "UNIT_PAHUB_SCAN_MSG0": "scan",
    "UNIT_PAHUB_START_MSG0": "start",
    "UNIT_PAHUB_STOP_MSG0": "stop",
    "UNIT_PAHUB_READINTO_MSG0": "readinto",
    "UNIT_PAHUB_READINTO_MSG1": "NACK",
    "UNIT_PAHUB_WRITE_RETURN_MSG0": "write",
    "UNIT_PAHUB_WRITE_MSG0": "write",
    "UNIT_PAHUB_READFROM_MSG0": "read from",
    "UNIT_PAHUB_READFROM_MSG1": "addr",
    "UNIT_PAHUB_READFROM_MSG2": "nbytes",
    "UNIT_PAHUB_READFROM_MSG3": "stop",
    "UNIT_PAHUB_READFROM_INTO_MSG0": "read from",
    "UNIT_PAHUB_READFROM_INTO_MSG1": "addr",
    "UNIT_PAHUB_READFROM_INTO_MSG2": "into",
    "UNIT_PAHUB_READFROM_INTO_MSG3": "stop",
    "UNIT_PAHUB_WRITETO_MSG0": "write",
    "UNIT_PAHUB_WRITETO_MSG1": "addr",
    "UNIT_PAHUB_WRITETO_MSG2": "stop",
    "UNIT_PAHUB_WRITETO_RETURN_MSG0": "write",
    "UNIT_PAHUB_WRITETO_RETURN_MSG1": "addr",
    "UNIT_PAHUB_WRITETO_RETURN_MSG2": "stop",
    "UNIT_PAHUB_READFROM_MEM_MSG0": "read from addr",
    "UNIT_PAHUB_READFROM_MEM_MSG1": "mem addr",
    "UNIT_PAHUB_READFROM_MEM_MSG2": "nbytes",
    "UNIT_PAHUB_READFROM_MEM_INTO_MSG0": "read from addr",
    "UNIT_PAHUB_READFROM_MEM_INTO_MSG1": "mem addr",
    "UNIT_PAHUB_READFROM_MEM_INTO_MSG2": "into buf",
    "UNIT_PAHUB_WRITETO_MEM_MSG0": "write buf",
    "UNIT_PAHUB_WRITETO_MEM_MSG1": "to addr",
    "UNIT_PAHUB_WRITETO_MEM_MSG2": "mem addr",
    "UNIT_COLOR_INIT_MSG0": "Init",
    "UNIT_COLOR_GET_LUX_MSG0": "get",
    "UNIT_COLOR_GET_LUX_MSG1": "lux",
    "UNIT_COLOR_GET_TEMPERATURE_MSG0": "get",
    "UNIT_COLOR_GET_TEMPERATURE_MSG1": "color temperature",
    "UNIT_COLOR_GET_RGB_TYPE_MSG0": "get",
    "UNIT_COLOR_GET_RGB_TYPE_MSG1": "color RGB bytes",
    "UNIT_COLOR_GET_COLOR_MSG0": "get",
    "UNIT_COLOR_GET_COLOR_MSG1": "color",
    "UNIT_COLOR_GET_COLOR565_MSG0": "get",
    "UNIT_COLOR_GET_COLOR565_MSG1": "color565",
    "UNIT_COLOR_GET_COLOR_RAW_MSG0": "get",
    "UNIT_COLOR_GET_COLOR_RAW_MSG1": "color raw",
    "UNIT_COLOR_GET_ACTIVE_MSG0": "get",
    "UNIT_COLOR_GET_ACTIVE_MSG1": "active",
    "UNIT_COLOR_SET_ACTIVE_MSG0": "active",
    "UNIT_COLOR_GET_INTEGRATION_TIME_MSG0": "get",
    "UNIT_COLOR_GET_INTEGRATION_TIME_MSG1": "integration time",
    "UNIT_COLOR_SET_INTEGRATION_TIME_MSG0": "integration time",
    "UNIT_COLOR_GET_GAIN_MSG0": "get",
    "UNIT_COLOR_GET_GAIN_MSG1": "gain",
    "UNIT_COLOR_SET_GAIN_MSG0": "gain",
    "UNIT_COLOR_GET_CYCLES_MSG0": "get",
    "UNIT_COLOR_GET_CYCLES_MSG1": "cycles",
    "UNIT_COLOR_SET_CYCLES_MSG0": "cycles",
    "UNIT_COLOR_GET_MIN_VALUE_MSG0": "get",
    "UNIT_COLOR_GET_MIN_VALUE_MSG1": "min value",
    "UNIT_COLOR_SET_MIN_VALUE_MSG0": "min value",
    "UNIT_COLOR_GET_MAX_VALUE_MSG0": "get",
    "UNIT_COLOR_GET_MAX_VALUE_MSG1": "max value",
    "UNIT_COLOR_SET_MAX_VALUE_MSG0": "max value",
    "UNIT_COLOR_GET_GLASS_ATTENUATION_MSG0": "get",
    "UNIT_COLOR_GET_GLASS_ATTENUATION_MSG1": "glass attenuation",
    "UNIT_COLOR_SET_GLASS_ATTENUATION_MSG0": "glass attenuation",
    "UNIT_COLOR_GET_INTERRUPT_MSG0": "get",
    "UNIT_COLOR_GET_INTERRUPT_MSG1": "interrupt",
    "UNIT_COLOR_CLEAR_INTERRUPT_MSG0": "clear interrupt",
    "UNIT_COLOR_GET_COLOR_R_MSG0": "get",
    "UNIT_COLOR_GET_COLOR_R_MSG1": "color R int",
    "UNIT_COLOR_GET_COLOR_G_MSG0": "get",
    "UNIT_COLOR_GET_COLOR_G_MSG1": "color G int",
    "UNIT_COLOR_GET_COLOR_B_MSG0": "get",
    "UNIT_COLOR_GET_COLOR_B_MSG1": "color B int",
    "UNIT_COLOR_GET_COLOR_H_MSG0": "get",
    "UNIT_COLOR_GET_COLOR_H_MSG1": "color hue int",
    "UNIT_COLOR_GET_COLOR_S_MSG0": "get",
    "UNIT_COLOR_GET_COLOR_S_MSG1": "color saturation float",
    "UNIT_COLOR_GET_COLOR_V_MSG0": "get",
    "UNIT_COLOR_GET_COLOR_V_MSG1": "color value float",
    "UNIT_TOF_INIT_MSG0": "Init",
    "UNIT_TOF_GET_DATA_STATUS_MSG0": "get",
    "UNIT_TOF_GET_DATA_STATUS_MSG1": "data ready status",
    "UNIT_TOF_GET_DISTANCE_MSG0": "get",
    "UNIT_TOF_GET_DISTANCE_MSG1": "distance",
    "UNIT_TOF_GET_RANGE_MSG0": "get",
    "UNIT_TOF_GET_RANGE_MSG1": "range",
    "UNIT_TOF_GET_CONTINUOUS_MODE_MSG0": "get",
    "UNIT_TOF_GET_CONTINUOUS_MODE_MSG1": "continuous mode",
    "UNIT_TOF_GET_MEASUREMENT_TIMING_BUDGET_MSG0": "get",
    "UNIT_TOF_GET_MEASUREMENT_TIMING_BUDGET_MSG1": "measurement timing budget",
    "UNIT_TOF_SET_MEASUREMENT_TIMING_BUDGET_MSG0": "measurement timing budget",
    "UNIT_TOF_SET_ADDRESS_MSG0": "set address",
    "UNIT_TOF_GET_SIGNAL_RATE_LIMIT_MSG0": "get",
    "UNIT_TOF_GET_SIGNAL_RATE_LIMIT_MSG1": "signal rate limit",
    "UNIT_TOF_SET_SIGNAL_RATE_LIMIT_MSG0": "signal rate limit",
    "UNIT_TOF_START_CONTINUOUS_MSG0": "start continuous",
    "UNIT_TOF_STOP_CONTINUOUS_MSG0": "stop continuous",
    "UNIT_ADC_INIT_MSG0": "Init",
    "UNIT_ADC_GET_VALUE_MSG0": "get",
    "UNIT_ADC_GET_VALUE_MSG1": "value",
    "UNIT_ADC_GET_VOLTAGE_MSG0": "get",
    "UNIT_ADC_GET_VOLTAGE_MSG1": "voltage",
    "UNIT_ADC_GET_RAW_VALUE_MSG0": "get",
    "UNIT_ADC_GET_RAW_VALUE_MSG1": "raw value",
    "UNIT_ADC_GET_OPERATING_MODE_MSG0": "get",
    "UNIT_ADC_GET_OPERATING_MODE_MSG1": "operating mode",
    "UNIT_ADC_SET_OPERATING_MODE_MSG0": "operating mode",
    "UNIT_ADC_GET_DATA_RATE_MSG0": "get",
    "UNIT_ADC_GET_DATA_RATE_MSG1": "data rate",
    "UNIT_ADC_SET_DATA_RATE_MSG0": "data rate",
    "UNIT_ADC_GET_GAIN_MSG0": "get",
    "UNIT_ADC_GET_GAIN_MSG1": "gain",
    "UNIT_ADC_SET_GAIN_MSG0": "gain",
    "UNIT_DAC_INIT_MSG0": "Init",
    "UNIT_DAC_GET_VALUE_MSG0": "get",
    "UNIT_DAC_GET_VALUE_MSG1": "DAC value",
    "UNIT_DAC_SET_VALUE_MSG0": "DAC value",
    "UNIT_DAC_GET_VOLTAGE_MSG0": "get",
    "UNIT_DAC_GET_VOLTAGE_MSG1": "voltage",
    "UNIT_DAC_SET_VOLTAGE_MSG0": "voltage",
    "UNIT_DAC_GET_RAW_VALUE_MSG0": "get",
    "UNIT_DAC_GET_RAW_VALUE_MSG1": "raw value",
    "UNIT_DAC_SET_RAW_VALUE_MSG0": "raw value",
    "UNIT_DAC_GET_NORMALIZED_VALUE_MSG0": "get",
    "UNIT_DAC_GET_NORMALIZED_VALUE_MSG1": "normalized value",
    "UNIT_DAC_SET_NORMALIZED_VALUE_MSG0": "normalized value",
    "UNIT_DAC_SAVE_TO_EEPROM_MSG0": "save to eeprom",
    "UNIT_EXTIO_INIT_MSG0": "Init",
    "UNIT_EXTIO_SET_PORT_MODE_MSG0": "set port mode",
    "UNIT_EXTIO_DIGIT_READ_PORT_MSG0": "get",
    "UNIT_EXTIO_DIGIT_READ_PORT_MSG1": "port digit value",
    "UNIT_EXTIO_DIGIT_WRITE_PORT_MSG0": "set digit value",
    "UNIT_EXTIO_SET_PIN_MODE_MSG0": "set",
    "UNIT_EXTIO_SET_PIN_MODE_MSG1": "mode",
    "UNIT_EXTIO_DIGIT_WRITE_MSG0": "set",
    "UNIT_EXTIO_DIGIT_WRITE_MSG1": "value",
    "UNIT_EXTIO_DIGIT_READ_MSG0": "get",
    "UNIT_EXTIO_DIGIT_READ_MSG1": "value",
    "UNIT_EXTIO_PIN_CONSTRUCTORS_MSG0": "Init",
    "UNIT_EXTIO_PIN_CONSTRUCTORS_MSG1": "mode",
    "UNIT_EXTIO_PIN_ON_MSG0": "on",
    "UNIT_EXTIO_PIN_OFF_MSG0": "off",
    "UNIT_EXTIO_PIN_SET_VALUE_MSG0": "Set",
    "UNIT_EXTIO_PIN_SET_VALUE_MSG1": "value",
    "UNIT_EXTIO_PIN_GET_VALUE_MSG0": "get",
    "UNIT_EXTIO_PIN_GET_VALUE_MSG1": "value",
    "UNIT_EXTIO2_INIT_MSG0": "Init",
    "UNIT_EXTIO2_GET_CONFIG_MODE_MSG0": "get",
    "UNIT_EXTIO2_GET_CONFIG_MODE_MSG1": "mode (return 0~4)",
    "UNIT_EXTIO2_READ_INPUT_PIN_MSG0": "get",
    "UNIT_EXTIO2_READ_INPUT_PIN_MSG1": "value (return 0 or 1)",
    "UNIT_EXTIO2_READ_ADC8_PIN_MSG0": "get",
    "UNIT_EXTIO2_READ_ADC8_PIN_MSG1": "adc 8b (return 0~255)",
    "UNIT_EXTIO2_READ_ADC12_PIN_MSG0": "get",
    "UNIT_EXTIO2_READ_ADC12_PIN_MSG1": "adc 12b (return 0~4095)",
    "UNIT_EXTIO2_READ_SERVO_ANGLE_MSG0": "get",
    "UNIT_EXTIO2_READ_SERVO_ANGLE_MSG1": "servo angle (return 0~180)",
    "UNIT_EXTIO2_READ_SERVO_PULSE_MSG0": "get",
    "UNIT_EXTIO2_READ_SERVO_PULSE_MSG1": "servo pulse (return 500~2500)",
    "UNIT_EXTIO2_READ_RGB_LED_MSG0": "get",
    "UNIT_EXTIO2_READ_RGB_LED_MSG1": "RGB888 (return 0~0xfffff)",
    "UNIT_EXTIO2_READ_FW_VERSION_MSG0": "get",
    "UNIT_EXTIO2_READ_FW_VERSION_MSG1": "fw version",
    "UNIT_EXTIO2_GET_ADDRESS_MSG0": "get",
    "UNIT_EXTIO2_GET_ADDRESS_MSG1": "I2C address (return 0x01~0x7f)",
    "UNIT_EXTIO2_SET_CONFIG_MODE_MSG0": "set",
    "UNIT_EXTIO2_SET_CONFIG_MODE_MSG1": "mode",
    "UNIT_EXTIO2_SET_OUTPUT_PIN_MSG0": "set",
    "UNIT_EXTIO2_SET_OUTPUT_PIN_MSG1": "value",
    "UNIT_EXTIO2_SET_OUTPUT_PIN_INPUT_MSG0": "set",
    "UNIT_EXTIO2_SET_OUTPUT_PIN_INPUT_MSG1": "value",
    "UNIT_EXTIO2_SET_SERVO_ANGLE_MSG0": "set",
    "UNIT_EXTIO2_SET_SERVO_ANGLE_MSG1": "servo angle",
    "UNIT_EXTIO2_SET_SERVO_PLUSE_MSG0": "set",
    "UNIT_EXTIO2_SET_SERVO_PLUSE_MSG1": "servo pluse",
    "UNIT_EXTIO2_SET_RGB_LED_MSG0": "set",
    "UNIT_EXTIO2_SET_RGB_LED_MSG1": "rgb",
    "UNIT_EXTIO2_SET_ADDRESS_MSG0": "set",
    "UNIT_EXTIO2_SET_ADDRESS_MSG1": "I2C address",
    "UNIT_EARTH_INIT_MSG0": "Init",
    "UNIT_EARTH_SET_CALIBRATE_MSG0": "Set",
    "UNIT_EARTH_SET_CALIBRATE_MSG1": "calibrate min value",
    "UNIT_EARTH_SET_CALIBRATE_MSG2": "max value",
    "UNIT_EARTH_GET_HUMIDITY_MSG0": "get",
    "UNIT_EARTH_GET_HUMIDITY_MSG1": "humidity (return 0.0~1.0)",
    "UNIT_EARTH_GET_ANALOG_VALUE_MSG0": "get",
    "UNIT_EARTH_GET_ANALOG_VALUE_MSG1": "analog value (return 0~65535)",
    "UNIT_EARTH_GET_VOLTAGE_MV_MSG0": "get",
    "UNIT_EARTH_GET_VOLTAGE_MV_MSG1": "voltage mv (return 0~3300)",
    "UNIT_EARTH_GET_DIGITAL_VALUE_MSG0": "get",
    "UNIT_EARTH_GET_DIGITAL_VALUE_MSG1": "digital value (return 0 or 1)",
    "UNIT_ANGLE_INIT_MSG0": "Init",
    "UNIT_ANGLE_GET_VOLTAGE_MSG0": "get",
    "UNIT_ANGLE_GET_VOLTAGE_MSG1": "voltage (return float)",
    "UNIT_ANGLE_GET_ANALOG_MSG0": "get",
    "UNIT_ANGLE_GET_ANALOG_MSG1": "analog value (return 0~65535)",
    "UNIT_RGB_INIT_MSG0": "Init",
    "UNIT_RGB_INIT_MSG1": "number",
    "UNIT_RGB_SET_INDEX_COLOR_MSG0": "set index",
    "UNIT_RGB_SET_INDEX_COLOR_MSG1": "color",
    "UNIT_RGB_SET_FILL_COLOR_MSG0": "fill color",
    "UNIT_RGB_SET_BRIGHTNESS_MSG0": "RGB set brightness",
    "UNIT_FINGER_INIT_MSG0": "Init",
    "UNIT_FINGER_SLEEP_MSG0": "sleep",
    "UNIT_FINGER_GET_ADD_MODE_MSG0": "get",
    "UNIT_FINGER_GET_ADD_MODE_MSG1": "add mode (return 0 or 1)",
    "UNIT_FINGER_SET_ADD_MODE_MSG0": "Set",
    "UNIT_FINGER_SET_ADD_MODE_MSG1": "add mode",
    "UNIT_FINGER_ADD_USER_MSG0": "add user",
    "UNIT_FINGER_ADD_USER_MSG1": "permission",
    "UNIT_FINGER_ADD_USER_RETURN_MSG0": "add user",
    "UNIT_FINGER_ADD_USER_RETURN_MSG1": "permission",
    "UNIT_FINGER_ADD_USER_RETURN_MSG2": "(return -1 or 0~149)",
    "UNIT_FINGER_DELETE_USER_MSG0": "delete user",
    "UNIT_FINGER_DELETE_ALL_USER_MSG0": "delete all user",
    "UNIT_FINGER_GET_USER_COUNT_MSG0": "get",
    "UNIT_FINGER_GET_USER_COUNT_MSG1": "user count",
    "UNIT_FINGER_GET_USER_CAPACITY_MSG0": "get",
    "UNIT_FINGER_GET_USER_CAPACITY_MSG1": "user capacity",
    "UNIT_FINGER_COMPARE_ID_MSG0": "compare user",
    "UNIT_FINGER_COMPARE_ID_MSG1": "(return True or False)",
    "UNIT_FINGER_COMPARE_FINGER_MSG0": "compare finger (return -1 or 0~149)",
    "UNIT_FINGER_GET_USER_LIST_MSG0": "get",
    "UNIT_FINGER_GET_USER_LIST_MSG1": "user list",
    "UNIT_FINGER_GET_USER_INFO_MSG0": "get",
    "UNIT_FINGER_GET_USER_INFO_MSG1": "user",
    "UNIT_FINGER_GET_USER_INFO_MSG2": "info (return None or tuple)",
    "UNIT_FINGER_GET_USER_PERMISSION_MSG0": "get",
    "UNIT_FINGER_GET_USER_PERMISSION_MSG1": "user",
    "UNIT_FINGER_GET_USER_PERMISSION_MSG2": "permission (return -1 or 1,2,3)",
    "UNIT_FINGER_GET_USER_CHARACTERISTIC_MSG0": "get",
    "UNIT_FINGER_GET_USER_CHARACTERISTIC_MSG1": "user",
    "UNIT_FINGER_GET_USER_CHARACTERISTIC_MSG2": "characteristic",
    "UNIT_FINGER_ADD_USER_INFO_MSG0": "add user",
    "UNIT_FINGER_ADD_USER_INFO_MSG1": "permission",
    "UNIT_FINGER_ADD_USER_INFO_MSG2": "characteristic",
    "UNIT_FINGER_GET_MATCH_LEVEL_MSG0": "get",
    "UNIT_FINGER_GET_MATCH_LEVEL_MSG1": "match level (return 0~9)",
    "UNIT_FINGER_SET_MATCH_LEVEL_MSG0": "Set",
    "UNIT_FINGER_SET_MATCH_LEVEL_MSG1": "match level",
    "UNIT_PIR_INIT_MSG0": "Init",
    "UNIT_PIR_ENABLE_IRQ_MSG0": "enable irq",
    "UNIT_PIR_DISABLE_IRQ_MSG0": "disable irq",
    "UNIT_PIR_CALLBACK_MSG0": "When PIR",
    "UNIT_PIR_CALLBACK_MSG1": "was",
    "UNIT_PIR_GET_STATUS_MSG0": "get",
    "UNIT_PIR_GET_STATUS_MSG1": "status (return True or False)",
    "UNIT_IR_INIT_MSG0": "Init",
    "UNIT_IR_SEND_ADDR_MSG0": "send addr",
    "UNIT_IR_SEND_ADDR_MSG1": "data",
    "UNIT_IR_CALLBACK_MSG0": "When",
    "UNIT_IR_CALLBACK_MSG1": "receive data",
    "UNIT_IR_CALLBACK_MSG2": "addr",
    "UNIT_DUAL_BUTTON_INIT_MSG0": "Init",
    "UNIT_DUAL_BUTTON_CALLBACK_MSG0": "When",
    "UNIT_DUAL_BUTTON_CALLBACK_MSG1": "was",
    "UNIT_NCIR_INIT_MSG0": "Init",
    "UNIT_NCIR_GET_AMBIENT_TEMPERATURE_MSG0": "get",
    "UNIT_NCIR_GET_AMBIENT_TEMPERATURE_MSG1": "ambient temperature (℃, return float) ",
    "UNIT_NCIR_GET_OBJECT_TEMPERATURE_MSG0": "get",
    "UNIT_NCIR_GET_OBJECT_TEMPERATURE_MSG1": "object temperature (℃, return float) ",
    "UNIT_RELAY_INIT_MSG0": "Init",
    "UNIT_RELAY_ON_MSG0": "set",
    "UNIT_RELAY_ON_MSG1": "ON",
    "UNIT_RELAY_OFF_MSG0": "set",
    "UNIT_RELAY_OFF_MSG1": "OFF",
    "UNIT_LIGHT_INIT_MSG0": "Init",
    "UNIT_LIGHT_GET_DIGITAL_VALUE_MSG0": "get",
    "UNIT_LIGHT_GET_DIGITAL_VALUE_MSG1": "digital value (return 0 or 1)",
    "UNIT_LIGHT_GET_ANALOG_VALUE_MSG0": "get",
    "UNIT_LIGHT_GET_ANALOG_VALUE_MSG1": "analog value (return 0~65535)",
    "UNIT_LIGHT_GET_OHM_MSG0": "get",
    "UNIT_LIGHT_GET_OHM_MSG1": "ohm (return int)",
    "UNIT_DLIGHT_INIT_MSG0": "Init",
    "UNIT_DLIGHT_GET_LUX_MSG0": "get",
    "UNIT_DLIGHT_GET_LUX_MSG1": "lux",
    "UNIT_DLIGHT_CONFIGURE_MSG0": "set mode",
    "UNIT_DLIGHT_CONFIGURE_MSG1": "resolution"
}