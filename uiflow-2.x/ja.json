{
    "BACK_TO_ALPHA": "Back to Alpha Version",
    "USER_GUIDE": "User Guide",
    "DOCS": "Product Docs",
    "API_DOCS": "API Docs",
    "FORUM": "Community",
    "UPDATE_LOG": "Update Log",
    "DEVICE_FILE_MANAGER": "Device File Manager",
    "FILE": "Project Files",
    "MY_PROJECTS": "My Projects",
    "FAVORITE_PROJECTS": "Favorite Projects",
    "CREATE_NEW_PROJECT": "New Project",
    "RENAME": "Rename",
    "DELETE": "Delete",
    "SHARED": "Shared",
    "PRIVATE": "Private",
    "CREATE_PROJECT": "Create New Project",
    "SAVE_NEW_PROJECT": "Save New Project",
    "SAVE_AS_NEW_PROJECT": "Save as New Project",
    "CHANGE_PROJECT_PROFILE": "Change Project Profile",
    "PROJECT_NAME": "Name",
    "PROJECT_REMARK": "Description",
    "PROJECT_COVER_IMAGE": "Cover Image",
    "PROJECT_DEVICE": "Device",
    "PROJECT_NAME_TIPS": "To better share your project, please consider assigning it a unique name. The current default name does not support sharing functionality. We believe an attractive name can better showcase your project.",
    "PROJECT_REMARK_TIPS": "Before sharing your project, please remember to enhance the project description. A well-crafted description not only attracts more attention but is also key to showcasing your project's strengths. Make your project stand out with a compelling description.",
    "PROJECT_ZONE": "Project Zone",
    "EZDATA_MANAGER": "EzData Manager",
    "WECHAT_TITLE": "Set up WeChat message notifications",
    "WECHAT_OPERATION_DESC1": "1. Follow M5STACK's official account on WeChat.",
    "WECHAT_OPERATION_DESC2": "2. Scan the QR code to bind it with EzData.",
    "VERSION": "Version",
    "NEW_PROJECT": "New Project",
    "OPEN_PROJECT": "Import",
    "SAVE_PROJECT": "Save",
    "SAVE_AS": "Save as...",
    "OPEN_FROM_COMPUTER": "Import project from local file",
    "SAVE_TO_COMPUTER": "Export project to local file",
    "LOGOUT": "Log Out",
    "RUN_TIPS": "Run the program.",
    "DOWNLOAD": "Download",
    "DOWNLOAD_TIPS": "Download the program to device.",
    "LOGIN": "Log in",
    "EMAIL": "Email",
    "PASSWORD": "Password",
    "FORGOT_PW": "Forgot password ?",
    "RUN": "Run",
    "RESOURCE": "Resources",
    "ALL": "All",
    "OFFICIAL": "Official",
    "NON_OFFICIAL": "Non-official",
    "SELECT_DEVICE": "Select Device",
    "CREATE_GUIDE": "Create a guide line",
    "SETTING": "Setting",
    "LANGUAGE": "Language",
    "DARK_MODE": "Dark Mode",
    "DISABLE": "Disable",
    "ENABLE": "Enable",
    "ADD_NEW_DEVICE": "Add a new device",
    "DEVICE_INFO": "Device Info",
    "PUBLIC_DEVICE": "Public",
    "TOKEN_DEVICE": "Token Required",
    "PRIVATE_DEVICE": "Private",
    "MY_DEVICE": "My Device",
    "OTHER_DEVICE": "Shared Device",
    "USB_DEVICE": "USB Device",
    "NICKNAME": "Nickname",
    "PERMISSIONS": "Permissions",
    "REMOVE_DEVICE": "Remove Device",
    "UNREGISTER_DEVICE": "Unregister Device",
    "DEVICE": "Device",
    "ENGINE_USED_TIPS": "GFX and LVGL cannot be used together!",
    "TERMINAL": "Terminal",
    "CONFIRM": "Confirm",
    "CANCEL": "Cancel",
    "id": "id",
    "name": "Name",
    "color": "Color",
    "borderColor": "Border Color",
    "backgroundColor": "Background Color",
    "bodyFillColor": "Body Fill Color",
    "text": "Text",
    "textOffset": "Text Offset",
    "layer": "Layer",
    "createTime": "createTime",
    "rotation": "Rotation",
    "dataSource": "Data Source (URL)",
    "interval": "Interval (ms)",
    "is_update": "Auto-update",
    "use_json": "Use Json",
    "json_key": "Json Key",
    "error_msg": "Error Msg",
    "error_msg_color": "Error Msg Color",
    "errorImagePath": "Error Image",
    "type": "type",
    "x": "X",
    "y": "Y",
    "x1": "X1",
    "y1": "Y1",
    "x2": "X2",
    "y2": "Y2",
    "x3": "X3",
    "y3": "Y3",
    "font": "Font",
    "width": "Width",
    "height": "Height",
    "radius": "Radius",
    "imagePath": "Image Name",
    "imageSize": "Size of output image",
    "imagePixelFormat": "Format of pixel data",
    "frameBufferNumber": "Number of frame buffers",
    "frameBufferWhere": "Where frame buffer",
    "imageWidth": "Image Width",
    "imageHeight": "Image Height",
    "lineWidth": "Line Width",
    "visibility": "Visibility",
    "INIT": "Init",
    "READ": "Read/Get",
    "WRITE": "Write/Set",
    "CONSTANTS": "Constants",
    "COMMON": "Common",
    "ADVANCED": "Advanced",
    "I2C_COMMAND_MAP": "I2C Command Map",
    "EVENT": "Event",
    "SYSTEM": "System",
    "UI": "UI",
    "TITLE": "Title",
    "LABEL": "Label",
    "LABEL_PLUS": "Label+",
    "RECT": "Rect",
    "CIRCLE": "Circle",
    "IMAGE": "Image",
    "IMAGE_PLUS": "Image+",
    "CAMERA_IMAGE": "Camera Image",
    "TRIANGLE": "Triangle",
    "LINE": "Line",
    "SCREEN": "Screen",
    "HARDWARE": "Hardware",
    "MODULE": "Module",
    "BASE": "Base",
    "SOFTWARE": "Software",
    "UNIT": "Unit",
    "HAT": "Hat",
    "STAMP": "Stamp",
    "EZDATA": "EzData2.0",
    "VARIABLES": "Variables",
    "MATH": "Math",
    "TEXT": "Text",
    "LOOPS": "Loops",
    "LOGIC": "Logic",
    "LISTS": "Lists",
    "GRAPHIC": "Graphic",
    "EMOJI": "Emoji",
    "FUNCTIONS": "Functions",
    "MAP": "Map",
    "JSON": "JSON",
    "BYTE_ARRAY": "Bytearray",
    "POWER": "Power",
    "TIME": "Time",
    "BLE": "BLE",
    "BLE_UART": "BLE UART",
    "BLE_UART_SERVER": "BLE UART Server",
    "BLE_UART_CLIENT": "BLE UART Client",
    "MQTT": "MQTT",
    "HTTP": "HTTP",
    "UDP": "UDP",
    "UDP_SERVER": "UDP Server",
    "UDP_CLIENT": "UDP Client",
    "TCP": "TCP",
    "TCP_SERVER": "TCP Server",
    "TCP_CLIENT": "TCP Client",
    "FILEIO": "FileIO",
    "WLAN_STA": "WLAN STA",
    "WLAN_AP": "WLAN AP",
    "NVS": "NVS",
    "PIN": "Pin",
    "PWM": "PWM",
    "ADC": "ADC",
    "DAC": "DAC",
    "BUTTON": "Button",
    "PIN_BUTTON": "Pin Button",
    "UART": "UART",
    "RGB": "RGB",
    "IMU": "IMU",
    "I2C": "I2C",
    "SPEAKER": "Speaker",
    "TIMER": "Timer",
    "DISPLAY": "Display",
    "TOUCH": "Touch",
    "ALS": "ALS",
    "WDT": "Watch Dog Timer",
    "RTC": "RTC",
    "I2S": "I2S",
    "SPI": "SPI",
    "SDCARD": "SDCard",
    "ROTARY": "Rotary",
    "MATRIX_KEYBOARD": "Matrix Keyboard",
    "EASY_IO": "Easy I/O",
    "DUAL_KMETER": "DualKmeter",
    "RELAY4": "4Relay",
    "ENCODER_4_MOTOR": "4EncoderMotor",
    "PPS": "PPS",
    "MODULE_DISPLAY": "Display",
    "RCA": "RCA",
    "IOT_BASE_CATM": "IoT BASE CatM",
    "ATOM_SOCKET": "ATOM Socket",
    "ENV": "ENV",
    "ENV2": "ENV II",
    "ENV3": "ENV III",
    "ENV4": "ENV IV",
    "ENV_PRO": "ENV Pro",
    "PAHUB": "Pa.HUB",
    "COLOR": "COLOR",
    "TOF": "ToF",
    "EXTIO": "EXT.IO",
    "EXTIO2": "EXT.IO2",
    "EARTH": "EARTH",
    "ANGLE": "ANGLE",
    "FINGER": "FINGER",
    "IR": "IR",
    "PIR": "PIR",
    "DUAL_BUTTON": "Dual-BUTTON",
    "NCIR": "NCIR",
    "NCIR2": "NCIR2",
    "RELAY": "RELAY",
    "LIGHT": "LIGHT",
    "DLIGHT": "Dlight",
    "CARDKB1": "CardKB v1.1",
    "ENCODER8": "8Encoder",
    "LORAWAN470": "LoRaWAN470",
    "LORAWAN868": "LoRaWAN868",
    "LORAWAN915": "LoRaWAN915",
    "GPS": "GPS",
    "HBRIDGE": "Hbridge",
    "PBHUB": "Pb.HUB",
    "UWB": "UWB",
    "AC_MEASURE": "AC Measure",
    "RS485": "RS485",
    "ISO485": "ISO RS485",
    "ULTRASONIC": "Ultrasonic",
    "SONIC_IO": "SONIC IO",
    "LIMIT": "Limit",
    "OP": "OP",
    "OP90": "OP.90",
    "OP180": "OP.180",
    "LORAE220": "LoRaE220",
    "RFID": "RFID",
    "WEIGHT": "Weight",
    "WEIGHT_I2C": "Weight I2C",
    "SCALES": "Scales",
    "GESTURE": "Gesture",
    "THERMAL": "Thermal",
    "THERMAL2": "Thermal2",
    "MINISCALES": "MiniScales",
    "SYNTH": "Synth",
    "SERVOS8": "8Servos",
    "VMETER": "VMeter",
    "AMETER": "AMeter",
    "KMETERISO": "KMeterISO",
    "TOF4M": "ToF4M",
    "ANGLE8": "8Angle",
    "CO2": "CO2",
    "CO2L": "CO2L",
    "CAN": "CAN",
    "MINI_CAN": "Mini CAN",
    "CATM": "CatM",
    "CATM_GNSS": "CatM+GNSS",
    "FADER": "Fader",
    "FAN": "Fan",
    "LASER_RX": "Laser.Rx",
    "LASER_TX": "Laser.Tx",
    "SSR": "SSR",
    "ENCODER": "Encoder",
    "UNIT_BUTTON": "BUTTON",
    "BLDC_DRIVER": "BLDC Driver",
    "REFLECTIVE_IR": "Reflective IR",
    "HALL_EFFECT": "Hall Effect",
    "BUZZER": "Buzzer",
    "ADC_V11": "ADC V1.1",
    "EXTENCODER": "ExtEncoder",
    "NBIOT": "NB-IoT",
    "GLASS": "Glass",
    "OLED": "OLED",
    "VIBRATOR": "Vibrator",
    "YUN": "Yun",
    "HAT_SERVOS8_V11": "8Servos v1.1",
    "MINI_ENCODERC": "MiniEncoderC",
    "ENTER_DOWNLOAD_MODE": "Please enter download mode",
    "WELCOME_TO": "Welcome to UIFlow2.0!",
    "QUICKLY_LEARN": "Here you can quickly learn about the features of UIFlow2.0 and learn how to program it.",
    "START_LEARN": "Start",
    "SKIP": "Skip",
    "DONT_SHOW_AGAIN": "Don't show this again.",
    "INTERFACE_NAVIGATION": "Interface navigation",
    "LOGIN_ACCOUNT": "Login account",
    "FIRMWARE_BURNING": "Firmware burning",
    "DEVELOP": "Develop",
    "INTERFACE_INTRO": "The UIFlow2.0 interface includes: the top menu bar [1], UI editing area [2], resource panel [3], Block toolbox [4], programming area [5], and bottom function bar [6].",
    "TOP_BAR": "Top menu bar",
    "UI_EDITING_AREA": "UI editing area",
    "RESOURCE_AND_BLOCK_PANEL": "Resource panel and Block toolbox",
    "PROGRAMMING_AREA": "Programming area",
    "BOTTOM_BAR": "Bottom function bar",
    "TOP_SETTING_INTRO": "Set language, dark mode, etc.",
    "TOP_HELP": "Help",
    "TOP_HELP_INTRO": "Under the Help menu you can open user guide, documents, forums, update log, etc.",
    "TOP_FILE": "File",
    "TOP_FILE_INTRO": "Under the File menu you can create, open, or save a project.",
    "TOP_PROJECT_ZONE": "Project Zone",
    "TOP_PROJECT_ZONE_INTRO": "There are official projects and user-shared projects here.",
    "TOP_WORKSPACE_SWITCH": "Switch programming area",
    "TOP_WORKSPACE_SWITCH_INTRO": "Switch to Blocks or Python or Split.",
    "TOP_PROJECT_NAME": "Project name",
    "TOP_PROJECT_NAME_INTRO": "The name of the current project.",
    "TOP_SAVE": "Save",
    "TOP_SAVE_INTRO": "Save project.",
    "TOP_MY_PROJECT": "Cloud Project",
    "TOP_MY_PROJECT_INTRO": "My projects and favorite projects.",
    "TOP_LOGIN": "Log in",
    "TOP_LOGIN_INTRO": "Log in to M5stack account.",
    "UI_EDITING_AREA_DESC": "Drag and drop UI elements onto the simulation screen.You can enter UI editor by clicking the top right button for more settings.",
    "UI_EDITOR_DESC": "The UI editor interface includes: component library [1], function bar [2], operating area [3], list of UI elements [4], properties panel [5].",
    "RESOURCE_PANEL_DESC": "Add Software, Hardware, Unit, and other resources. You can see the corresponding blocks in the Block Toolbox.",
    "PROGRAMMING_AREA_DESC": "Drag blocks from the Block toolbox into the workspace. Snap blocks together to build your program.",
    "BOTTOM_WEBTERMINAL_INTRO": "Connect devices using USB mode.",
    "BOTTOM_WEBBURNER_INTRO": "Firmware burning (only ESP32-S3 series is supported, download M5Burner if you need more features).",
    "BOTTOM_EZDATA_MANAGER_INTRO": "Manage data in EzData.",
    "BOTTOM_DEVICE_FILE_MANAGER_INTRO": "Manage files (images, certificates, etc.) in the device.",
    "BOTTOM_SELECT_DEVICE": "Select device",
    "BOTTOM_SELECT_DEVICE_INTRO": "Click the button to open the device management panel. Select a device you will be using.",
    "BOTTOM_RUN_INTRO": "Run the project on the device using Cloud mode.",
    "BOTTOM_DOWNLOAD_INTRO": "Download the project to the device using Cloud mode.",
    "REGISTER_AND_LOGIN": "Register and log in to your account",
    "LOGIN_DESC": "After logging into your account, you can manage and share devices and use services such as EzData.",
    "LOGIN_DESC_point1": "Click the login button on the right side of the top menu bar.",
    "LOGIN_DESC_point2": "Follow the interface prompts to register/log in to your account.",
    "LOGIN_DESC_point3": "After logging in, you can manage the device.",
    "MY_DEVICE_DESC": "Devices bound to your account. You can use Cloud mode.",
    "OTHER_DEVICE_DESC": "You can add devices shared by others. You can use Cloud mode.",
    "USB_DEVICE_DESC": "Select USB device, you can use USB mode.",
    "DEVICE_CONNECTION_STATE": "Device connection status",
    "RED_STATUS": "Red",
    "GREEN_STATUS": "Green",
    "DEVICE_OFFLINE": "Device offline.",
    "DEVICE_ONLINE": "Device online.",
    "DEVICE_USAGE_PERMISSION": "Device usage permission",
    "PRIVATE_DEVICE_DESC": "Only you can use it.",
    "TOKEN_DEVICE_DESC": "Those who have the device token can use it.",
    "PUBLIC_DEVICE_DESC": "Those who have the device mac can use it.",
    "USE_BURNING_TOOL": "Burn the UIFlow 2.0 firmware and bind the device.",
    "BURNING_WAYS": "Burning tools are WebBurner and M5Burner.",
    "SET_DEVICE_TO_DOWNLOAD_MODE": "Set the device to download mode",
    "DEVICE_ESP32S3": "(Devices for the ESP32-S3 chip)",
    "PRESS_AND_HOLD": "Please press and hold ",
    "RESET_BUTTON": "RESET BUTTON",
    "UNTIL_THE": " until the",
    "INTERNAL_LIGHT": "LED LIGHT",
    "TURNS_GREEN": " turns green.",
    "BUTTON_OF_STAMPS3": "BUTTON of StampS3",
    "INSERT_THE_USB_PORT": " when insert the USB port.",
    "BURNING_TOOL": "Burning tool",
    "IDE_WEBBURNER": "WebBurner in the IDE",
    "CLICK_COM_SELECT": "Click the connect button for COM select.",
    "CLICK_FIRMWARE_SELECT": "Click the burn button for firmware select.",
    "BIND_DEVICE": "Bind the device to your account.",
    "CONFIGURE_WIFI": "Configure wifi and other settings.",
    "LOGIN_YOUR_ACCOUNT": "Login your account.",
    "SELECT_FIRMWARE": "Select the firmware of UIFlow2.0 and download it.",
    "CLICK_BURN_SELECT": "Click the burn button, select COM, click the start button.",
    "BURNING_FIRMWARE": "Firmware burning.",
    "CHECK_NETWORK": "Check network",
    "SEE_BOUND_DEVICE": "After the device is successfully networked, it will be visible in the IDE Device Management panel.",
    "CONNECTION_STATUS": "WIFI connection status",
    "CONNECTING": "Connecting",
    "CONNECTION_SUCCESSFUL": "Successful",
    "CONNECTION_FAILURE": "Failed",
    "CONNECT_MODE": "There are Cloud and USB modes for connecting devices.",
    "CLOUD_MODE": "Cloud mode",
    "USB_MODE": "USB mode",
    "SELECT_CLOUD_DEVICE": "Select my device or shared device.",
    "SELECT_USB_DEVICE": "Select USB device.",
    "PROGRAM_DESC": "Program projects by drag-and-drop blocks or custom editing code.",
    "CLICK_RUN_DOWNLOAD": "Click the run button or download button in the bottom function bar.",
    "RUN_BTN_DESC": "Run the project (run once).",
    "DOWNLOAD_BTN_DESC": "Download the project (run always).",
    "OPEN_WEBTERMINAL": "Open WebTerminal, click the connect button to connect the device and click the run or download button.",
    "WEBTERMINAL_CONNECT": "Connect",
    "WEBTERMINAL_CONNECT_DESC": "Click the button to select COM and connect the device.",
    "WEBTERMINAL_CLEAR": "Clear",
    "WEBTERMINAL_CLEAR_DESC": "Clear the screen.",
    "WEBTERMINAL_FILE": "File",
    "WEBTERMINAL_FILE_DESC": "File Manager, read, write, and delete files.",
    "WEBTERMINAL_ROW_COL": "Row and col",
    "WEBTERMINAL_ROW_COL_DESC": "Change the width and height of the WebTerminal.",
    "BUF_DESC": "\"buf\" must support the buffer protocol, such as bytearray or array.",
    "EXPORT_THIS_BLOCK_TO_IMG": "Export this block to image (Chrome is recommended)",
    "EXPORT_THIS_BLOCK_TO_SVG": "Export this block to svg image (Chrome is recommended)",
    "EXPORT_ALL_BLOCK_TO_IMG": "Export all block to image (Chrome is recommended)",
    "EXPORT_ALL_BLOCK_TO_SVG": "Export all block to svg image (Chrome is recommended)",
    "EXPORT_ALL_TOOLBOX_BLOCK_TO_SVG": "Export all blocks in this toolbox to svg images (Chrome is recommended)",
    "NAME_ALREADY_EXISTS": "The name already exists.",
    "NAME_EXISTS_FOR_ANOTHER_TYPE": "The name is already in use for another type.",
    "FILE_SIZE_ERROR": "File must be less than %1.",
    "FILE_NAME_ERROR": "Filename must be less than 30 letters.",
    "VARIABLES_DEFAULT_NAME": "item",
    "TODAY": "Today",
    "DUPLICATE_BLOCK": "Duplicate",
    "ADD_COMMENT": "Add Comment",
    "REMOVE_COMMENT": "Remove Comment",
    "EXTERNAL_INPUTS": "External Inputs",
    "INLINE_INPUTS": "Inline Inputs",
    "DELETE_BLOCK": "Delete Block",
    "DELETE_X_BLOCKS": "Delete %1 Blocks",
    "DELETE_ALL_BLOCKS": "Delete all %1 blocks?",
    "CLEAN_UP": "Clean up Blocks",
    "COLLAPSE_BLOCK": "Collapse Block",
    "COLLAPSE_ALL": "Collapse Blocks",
    "EXPAND_BLOCK": "Expand Block",
    "EXPAND_ALL": "Expand Blocks",
    "DISABLE_BLOCK": "Disable Block",
    "ENABLE_BLOCK": "Enable Block",
    "HELP": "Help",
    "UNDO": "Undo",
    "REDO": "Redo",
    "CHANGE_VALUE_TITLE": "Change value:",
    "RENAME_VARIABLE": "Rename variable...",
    "RENAME_VARIABLE_TITLE": "Rename all '%1' variables to:",
    "NEW_VARIABLE": "Create variable...",
    "NEW_STRING_VARIABLE": "Create string variable...",
    "NEW_NUMBER_VARIABLE": "Create number variable...",
    "NEW_COLOUR_VARIABLE": "Create colour variable...",
    "NEW_VARIABLE_TYPE_TITLE": "New variable type:",
    "NEW_VARIABLE_TITLE": "New variable name:",
    "VARIABLE_ALREADY_EXISTS": "A variable named '%1' already exists.",
    "VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE": "A variable named '%1' already exists for another type: '%2'.",
    "DELETE_VARIABLE_CONFIRMATION": "Delete %1 uses of the '%2' variable?",
    "CANNOT_DELETE_VARIABLE_PROCEDURE": "Can't delete the variable '%1' because it's part of the definition of the function '%2'",
    "DELETE_VARIABLE": "Delete the '%1' variable",
    "COLOUR_PICKER_HELPURL": "https://en.wikipedia.org/wiki/Color",
    "COLOUR_PICKER_TOOLTIP": "Choose a colour from the palette.",
    "COLOUR_RANDOM_HELPURL": "http://randomcolour.com",
    "COLOUR_RANDOM_TITLE": "random colour",
    "COLOUR_RANDOM_TOOLTIP": "Choose a colour at random.",
    "COLOUR_RGB_HELPURL": "http://www.december.com/html/spec/colorper.html",
    "COLOUR_RGB_TITLE": "colour with",
    "COLOUR_RGB_RED": "red",
    "COLOUR_RGB_GREEN": "green",
    "COLOUR_RGB_BLUE": "blue",
    "COLOUR_RGB_TOOLTIP": "Create a colour with the specified amount of red, green, and blue. All values must be between 0 and 100.",
    "COLOUR_BLEND_HELPURL": "http://meyerweb.com/eric/tools/color-blend/",
    "COLOUR_BLEND_TITLE": "blend",
    "COLOUR_BLEND_COLOUR1": "colour 1",
    "COLOUR_BLEND_COLOUR2": "colour 2",
    "COLOUR_BLEND_RATIO": "ratio",
    "COLOUR_BLEND_TOOLTIP": "Blends two colours together with a given ratio (0.0 - 1.0).",
    "CONTROLS_REPEAT_HELPURL": "https://en.wikipedia.org/wiki/For_loop",
    "CONTROLS_REPEAT_TITLE": "repeat %1 times",
    "CONTROLS_REPEAT_INPUT_DO": "do",
    "CONTROLS_REPEAT_TOOLTIP": "Do some statements several times.",
    "CONTROLS_WHILEUNTIL_HELPURL": "https://github.com/google/blockly/wiki/Loops#repeat",
    "CONTROLS_WHILEUNTIL_OPERATOR_WHILE": "repeat while",
    "CONTROLS_WHILEUNTIL_OPERATOR_UNTIL": "repeat until",
    "CONTROLS_WHILEUNTIL_TOOLTIP_WHILE": "While a value is true, then do some statements.",
    "CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL": "While a value is false, then do some statements.",
    "CONTROLS_FOR_HELPURL": "https://github.com/google/blockly/wiki/Loops#count-with",
    "CONTROLS_FOR_TOOLTIP": "Have the variable '%1' take on the values from the start number to the end number, counting by the specified interval, and do the specified blocks.",
    "CONTROLS_FOR_TITLE": "count with %1 from %2 to %3 by %4",
    "CONTROLS_FOREACH_HELPURL": "https://github.com/google/blockly/wiki/Loops#for-each",
    "CONTROLS_FOREACH_TITLE": "for each item %1 in list %2",
    "CONTROLS_FOREACH_TOOLTIP": "For each item in a list, set the variable '%1' to the item, and then do some statements.",
    "CONTROLS_FLOW_STATEMENTS_HELPURL": "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks",
    "CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK": "break out of loop",
    "CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE": "continue with next iteration of loop",
    "CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK": "Break out of the containing loop.",
    "CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE": "Skip the rest of this loop, and continue with the next iteration.",
    "CONTROLS_FLOW_STATEMENTS_WARNING": "Warning: This block may only be used within a loop.",
    "CONTROLS_IF_HELPURL": "https://github.com/google/blockly/wiki/IfElse",
    "CONTROLS_IF_TOOLTIP_1": "If a value is true, then do some statements.",
    "CONTROLS_IF_TOOLTIP_2": "If a value is true, then do the first block of statements. Otherwise, do the second block of statements.",
    "CONTROLS_IF_TOOLTIP_3": "If the first value is true, then do the first block of statements. Otherwise, if the second value is true, do the second block of statements.",
    "CONTROLS_IF_TOOLTIP_4": "If the first value is true, then do the first block of statements. Otherwise, if the second value is true, do the second block of statements. If none of the values are true, do the last block of statements.",
    "CONTROLS_IF_MSG_IF": "if",
    "CONTROLS_IF_MSG_ELSEIF": "else if",
    "CONTROLS_IF_MSG_ELSE": "else",
    "CONTROLS_IF_IF_TOOLTIP": "Add, remove, or reorder sections to reconfigure this if block.",
    "CONTROLS_IF_ELSEIF_TOOLTIP": "Add a condition to the if block.",
    "CONTROLS_IF_ELSE_TOOLTIP": "Add a final, catch-all condition to the if block.",
    "IOS_OK": "OK",
    "IOS_CANCEL": "Cancel",
    "IOS_ERROR": "Error",
    "IOS_PROCEDURES_INPUTS": "INPUTS",
    "IOS_PROCEDURES_ADD_INPUT": "+ Add Input",
    "IOS_PROCEDURES_ALLOW_STATEMENTS": "Allow statements",
    "IOS_PROCEDURES_DUPLICATE_INPUTS_ERROR": "This function has duplicate inputs.",
    "IOS_VARIABLES_ADD_VARIABLE": "+ Add Variable",
    "IOS_VARIABLES_ADD_BUTTON": "Add",
    "IOS_VARIABLES_RENAME_BUTTON": "Rename",
    "IOS_VARIABLES_DELETE_BUTTON": "Delete",
    "IOS_VARIABLES_VARIABLE_NAME": "Variable name",
    "IOS_VARIABLES_EMPTY_NAME_ERROR": "You can't use an empty variable name.",
    "LOGIC_COMPARE_HELPURL": "https://en.wikipedia.org/wiki/Inequality_(mathematics)",
    "LOGIC_COMPARE_TOOLTIP_EQ": "Return true if both inputs equal each other.",
    "LOGIC_COMPARE_TOOLTIP_NEQ": "Return true if both inputs are not equal to each other.",
    "LOGIC_COMPARE_TOOLTIP_LT": "Return true if the first input is smaller than the second input.",
    "LOGIC_COMPARE_TOOLTIP_LTE": "Return true if the first input is smaller than or equal to the second input.",
    "LOGIC_COMPARE_TOOLTIP_GT": "Return true if the first input is greater than the second input.",
    "LOGIC_COMPARE_TOOLTIP_GTE": "Return true if the first input is greater than or equal to the second input.",
    "LOGIC_OPERATION_HELPURL": "https://github.com/google/blockly/wiki/Logic#logical-operations",
    "LOGIC_OPERATION_TOOLTIP_AND": "Return true if both inputs are true.",
    "LOGIC_OPERATION_AND": "and",
    "LOGIC_OPERATION_TOOLTIP_OR": "Return true if at least one of the inputs is true.",
    "LOGIC_OPERATION_OR": "or",
    "LOGIC_NEGATE_HELPURL": "https://github.com/google/blockly/wiki/Logic#not",
    "LOGIC_NEGATE_TITLE": "not %1",
    "LOGIC_NEGATE_TOOLTIP": "Returns true if the input is false. Returns false if the input is true.",
    "LOGIC_BOOLEAN_HELPURL": "https://github.com/google/blockly/wiki/Logic#values",
    "LOGIC_BOOLEAN_TRUE": "true",
    "LOGIC_BOOLEAN_FALSE": "false",
    "LOGIC_BOOLEAN_TOOLTIP": "Returns either true or false.",
    "LOGIC_NULL_HELPURL": "https://en.wikipedia.org/wiki/Nullable_type",
    "LOGIC_NULL": "null",
    "LOGIC_NULL_TOOLTIP": "Returns null.",
    "LOGIC_TERNARY_HELPURL": "https://en.wikipedia.org/wiki/%3F:",
    "LOGIC_TERNARY_CONDITION": "test",
    "LOGIC_TERNARY_IF_TRUE": "if true",
    "LOGIC_TERNARY_IF_FALSE": "if false",
    "LOGIC_TERNARY_TOOLTIP": "Check the condition in 'test'. If the condition is true, returns the 'if true' value, otherwise returns the 'if false' value.",
    "MATH_NUMBER_HELPURL": "https://en.wikipedia.org/wiki/Number",
    "MATH_NUMBER_TOOLTIP": "A number (The prefix '0b' or '0x' is supported).",
    "MATH_ADDITION_SYMBOL": "+",
    "MATH_SUBTRACTION_SYMBOL": "-",
    "MATH_DIVISION_SYMBOL": "÷",
    "MATH_MULTIPLICATION_SYMBOL": "×",
    "MATH_POWER_SYMBOL": "^",
    "MATH_TRIG_SIN": "sin",
    "MATH_TRIG_COS": "cos",
    "MATH_TRIG_TAN": "tan",
    "MATH_TRIG_ASIN": "asin",
    "MATH_TRIG_ACOS": "acos",
    "MATH_TRIG_ATAN": "atan",
    "MATH_ARITHMETIC_HELPURL": "https://en.wikipedia.org/wiki/Arithmetic",
    "MATH_ARITHMETIC_TOOLTIP_ADD": "Return the sum of the two numbers.",
    "MATH_ARITHMETIC_TOOLTIP_MINUS": "Return the difference of the two numbers.",
    "MATH_ARITHMETIC_TOOLTIP_MULTIPLY": "Return the product of the two numbers.",
    "MATH_ARITHMETIC_TOOLTIP_DIVIDE": "Return the quotient of the two numbers.",
    "MATH_ARITHMETIC_TOOLTIP_POWER": "Return the first number raised to the power of the second number.",
    "MATH_SINGLE_HELPURL": "https://en.wikipedia.org/wiki/Square_root",
    "MATH_SINGLE_OP_ROOT": "square root",
    "MATH_SINGLE_TOOLTIP_ROOT": "Return the square root of a number.",
    "MATH_SINGLE_OP_ABSOLUTE": "absolute",
    "MATH_SINGLE_TOOLTIP_ABS": "Return the absolute value of a number.",
    "MATH_SINGLE_TOOLTIP_NEG": "Return the negation of a number.",
    "MATH_SINGLE_TOOLTIP_LN": "Return the natural logarithm of a number.",
    "MATH_SINGLE_TOOLTIP_LOG10": "Return the base 10 logarithm of a number.",
    "MATH_SINGLE_TOOLTIP_EXP": "Return e to the power of a number.",
    "MATH_SINGLE_TOOLTIP_POW10": "Return 10 to the power of a number.",
    "MATH_TRIG_HELPURL": "https://en.wikipedia.org/wiki/Trigonometric_functions",
    "MATH_TRIG_TOOLTIP_SIN": "Return the sine of a degree (not radian).",
    "MATH_TRIG_TOOLTIP_COS": "Return the cosine of a degree (not radian).",
    "MATH_TRIG_TOOLTIP_TAN": "Return the tangent of a degree (not radian).",
    "MATH_TRIG_TOOLTIP_ASIN": "Return the arcsine of a number.",
    "MATH_TRIG_TOOLTIP_ACOS": "Return the arccosine of a number.",
    "MATH_TRIG_TOOLTIP_ATAN": "Return the arctangent of a number.",
    "MATH_CONSTANT_HELPURL": "https://en.wikipedia.org/wiki/Mathematical_constant",
    "MATH_CONSTANT_TOOLTIP": "Return one of the common constants: π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…), or ∞ (infinity).",
    "MATH_IS_EVEN": "is even",
    "MATH_IS_ODD": "is odd",
    "MATH_IS_PRIME": "is prime",
    "MATH_IS_WHOLE": "is whole",
    "MATH_IS_POSITIVE": "is positive",
    "MATH_IS_NEGATIVE": "is negative",
    "MATH_IS_DIVISIBLE_BY": "is divisible by",
    "MATH_IS_TOOLTIP": "Check if a number is an even, odd, prime, whole, positive, negative, or if it is divisible by certain number. Returns true or false.",
    "MATH_CHANGE_HELPURL": "https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter",
    "MATH_CHANGE_TITLE": "change %1 by %2",
    "MATH_CHANGE_TOOLTIP": "Add a number to variable '%1'.",
    "MATH_ROUND_HELPURL": "https://en.wikipedia.org/wiki/Rounding",
    "MATH_ROUND_TOOLTIP": "Round a number up or down.",
    "MATH_ROUND_OPERATOR_ROUND": "round",
    "MATH_ROUND_OPERATOR_ROUNDUP": "round up",
    "MATH_ROUND_OPERATOR_ROUNDDOWN": "round down",
    "MATH_ONLIST_HELPURL": "",
    "MATH_ONLIST_OPERATOR_SUM": "sum of list",
    "MATH_ONLIST_TOOLTIP_SUM": "Return the sum of all the numbers in the list.",
    "MATH_ONLIST_OPERATOR_MIN": "min of list",
    "MATH_ONLIST_TOOLTIP_MIN": "Return the smallest number in the list.",
    "MATH_ONLIST_OPERATOR_MAX": "max of list",
    "MATH_ONLIST_TOOLTIP_MAX": "Return the largest number in the list.",
    "MATH_ONLIST_OPERATOR_AVERAGE": "average of list",
    "MATH_ONLIST_TOOLTIP_AVERAGE": "Return the average (arithmetic mean) of the numeric values in the list.",
    "MATH_ONLIST_OPERATOR_MEDIAN": "median of list",
    "MATH_ONLIST_TOOLTIP_MEDIAN": "Return the median number in the list.",
    "MATH_ONLIST_OPERATOR_MODE": "modes of list",
    "MATH_ONLIST_TOOLTIP_MODE": "Return a list of the most common item(s) in the list.",
    "MATH_ONLIST_OPERATOR_STD_DEV": "standard deviation of list",
    "MATH_ONLIST_TOOLTIP_STD_DEV": "Return the standard deviation of the list.",
    "MATH_ONLIST_OPERATOR_RANDOM": "random item of list",
    "MATH_ONLIST_TOOLTIP_RANDOM": "Return a random element from the list.",
    "MATH_MODULO_HELPURL": "https://en.wikipedia.org/wiki/Modulo_operation",
    "MATH_MODULO_TITLE": "remainder of %1 ÷ %2",
    "MATH_MODULO_TOOLTIP": "Return the remainder from dividing the two numbers.",
    "MATH_CONSTRAIN_HELPURL": "https://en.wikipedia.org/wiki/Clamping_(graphics)",
    "MATH_CONSTRAIN_TITLE": "constrain %1 min %2 max %3",
    "MATH_CONSTRAIN_TOOLTIP": "Constrain a number to be between the specified limits (inclusive).",
    "MATH_RANDOM_INT_HELPURL": "https://en.wikipedia.org/wiki/Random_number_generation",
    "MATH_RANDOM_INT_TITLE": "random integer from %1 to %2",
    "MATH_RANDOM_INT_TOOLTIP": "Return a random integer between the two specified limits, inclusive.",
    "MATH_RANDOM_FLOAT_HELPURL": "https://en.wikipedia.org/wiki/Random_number_generation",
    "MATH_RANDOM_FLOAT_TITLE_RANDOM": "random fraction",
    "MATH_RANDOM_FLOAT_TOOLTIP": "Return a random fraction between 0.0 (inclusive) and 1.0 (exclusive).",
    "MATH_GET_BIT": "Get %1 bit %2",
    "MATH_SET_BIT": "Set %1 bit %2",
    "MATH_CLEAR_BIT": "Clear %1 bit %2",
    "MATH_REVERSE_BIT": "Reverse %1 bit %2",
    "MATH_BIT_OPERATION": "%1 %2 %3",
    "MATH_INT_FROM_BYTES": "int from bytes %1 %2",
    "TEXT_TEXT_HELPURL": "https://en.wikipedia.org/wiki/String_(computer_science)",
    "TEXT_TEXT_TOOLTIP": "A letter, word, or line of text.",
    "TEXT_JOIN_HELPURL": "https://github.com/google/blockly/wiki/Text#text-creation",
    "TEXT_JOIN_TITLE_CREATEWITH": "create text with",
    "TEXT_JOIN_TOOLTIP": "Create a piece of text by joining together any number of items.",
    "TEXT_CREATE_JOIN_TITLE_JOIN": "join",
    "TEXT_CREATE_JOIN_TOOLTIP": "Add, remove, or reorder sections to reconfigure this text block.",
    "TEXT_CREATE_JOIN_ITEM_TOOLTIP": "Add an item to the text.",
    "TEXT_APPEND_HELPURL": "https://github.com/google/blockly/wiki/Text#text-modification",
    "TEXT_APPEND_TITLE": "to %1 append text %2",
    "TEXT_APPEND_TOOLTIP": "Append some text to variable '%1'.",
    "TEXT_LENGTH_HELPURL": "https://github.com/google/blockly/wiki/Text#text-modification",
    "TEXT_LENGTH_TITLE": "length of %1",
    "TEXT_LENGTH_TOOLTIP": "Returns the number of letters (including spaces) in the provided text.",
    "TEXT_ISEMPTY_HELPURL": "https://github.com/google/blockly/wiki/Text#checking-for-empty-text",
    "TEXT_ISEMPTY_TITLE": "%1 is empty",
    "TEXT_ISEMPTY_TOOLTIP": "Returns true if the provided text is empty.",
    "TEXT_INDEXOF_HELPURL": "https://github.com/google/blockly/wiki/Text#finding-text",
    "TEXT_INDEXOF_TOOLTIP": "Returns the index of the first/last occurrence of the first text in the second text. Returns %1 if text is not found.",
    "TEXT_INDEXOF_TITLE": "in text %1 %2 %3",
    "TEXT_INDEXOF_OPERATOR_FIRST": "find first occurrence of text",
    "TEXT_INDEXOF_OPERATOR_LAST": "find last occurrence of text",
    "TEXT_CHARAT_HELPURL": "https://github.com/google/blockly/wiki/Text#extracting-text",
    "TEXT_CHARAT_TITLE": "in text %1 %2",
    "TEXT_CHARAT_FROM_START": "get letter #",
    "TEXT_CHARAT_FROM_END": "get letter # from end",
    "TEXT_CHARAT_FIRST": "get first letter",
    "TEXT_CHARAT_LAST": "get last letter",
    "TEXT_CHARAT_RANDOM": "get random letter",
    "TEXT_CHARAT_TAIL": "",
    "TEXT_CHARAT_TOOLTIP": "Returns the letter at the specified position.",
    "TEXT_GET_SUBSTRING_TOOLTIP": "Returns a specified portion of the text.",
    "TEXT_GET_SUBSTRING_HELPURL": "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text",
    "TEXT_GET_SUBSTRING_INPUT_IN_TEXT": "in text",
    "TEXT_GET_SUBSTRING_START_FROM_START": "get substring from letter #",
    "TEXT_GET_SUBSTRING_START_FROM_END": "get substring from letter # from end",
    "TEXT_GET_SUBSTRING_START_FIRST": "get substring from first letter",
    "TEXT_GET_SUBSTRING_END_FROM_START": "to letter #",
    "TEXT_GET_SUBSTRING_END_FROM_END": "to letter # from end",
    "TEXT_GET_SUBSTRING_END_LAST": "to last letter",
    "TEXT_GET_SUBSTRING_TAIL": "",
    "TEXT_CHANGECASE_HELPURL": "https://github.com/google/blockly/wiki/Text#adjusting-text-case",
    "TEXT_CHANGECASE_TOOLTIP": "Return a copy of the text in a different case.",
    "TEXT_CHANGECASE_OPERATOR_UPPERCASE": "to UPPER CASE",
    "TEXT_CHANGECASE_OPERATOR_LOWERCASE": "to lower case",
    "TEXT_CHANGECASE_OPERATOR_TITLECASE": "to Title Case",
    "TEXT_TRIM_HELPURL": "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces",
    "TEXT_TRIM_TOOLTIP": "Return a copy of the text with spaces removed from one or both ends.",
    "TEXT_TRIM_OPERATOR_BOTH": "trim spaces from both sides of",
    "TEXT_TRIM_OPERATOR_LEFT": "trim spaces from left side of",
    "TEXT_TRIM_OPERATOR_RIGHT": "trim spaces from right side of",
    "TEXT_PRINT_HELPURL": "https://github.com/google/blockly/wiki/Text#printing-text",
    "TEXT_PRINT_TITLE": "print %1",
    "TEXT_PRINT_TOOLTIP": "Print the specified text, number or other value.",
    "TEXT_PROMPT_HELPURL": "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user",
    "TEXT_PROMPT_TYPE_TEXT": "prompt for text with message",
    "TEXT_PROMPT_TYPE_NUMBER": "prompt for number with message",
    "TEXT_PROMPT_TOOLTIP_NUMBER": "Prompt for user for a number.",
    "TEXT_PROMPT_TOOLTIP_TEXT": "Prompt for user for some text.",
    "TEXT_COUNT_MESSAGE0": "count %1 in %2",
    "TEXT_COUNT_HELPURL": "https://github.com/google/blockly/wiki/Text#counting-substrings",
    "TEXT_COUNT_TOOLTIP": "Count how many times some text occurs within some other text.",
    "TEXT_REPLACE_MESSAGE0": "replace %1 with %2 in %3",
    "TEXT_REPLACE_HELPURL": "https://github.com/google/blockly/wiki/Text#replacing-substrings",
    "TEXT_REPLACE_TOOLTIP": "Replace all occurrences of some text within some other text.",
    "TEXT_REVERSE_MESSAGE0": "reverse %1",
    "TEXT_REVERSE_HELPURL": "https://github.com/google/blockly/wiki/Text#reversing-text",
    "TEXT_REVERSE_TOOLTIP": "Reverses the order of the characters in the text.",
    "LISTS_CREATE_EMPTY_HELPURL": "https://github.com/google/blockly/wiki/Lists#create-empty-list",
    "LISTS_CREATE_EMPTY_TITLE": "create empty list",
    "LISTS_CREATE_EMPTY_TOOLTIP": "Returns a list, of length 0, containing no data records",
    "LISTS_CREATE_WITH_HELPURL": "https://github.com/google/blockly/wiki/Lists#create-list-with",
    "LISTS_CREATE_WITH_TOOLTIP": "Create a list with any number of items.",
    "LISTS_CREATE_WITH_INPUT_WITH": "create list with",
    "LISTS_CREATE_WITH_CONTAINER_TITLE_ADD": "list",
    "LISTS_CREATE_WITH_CONTAINER_TOOLTIP": "Add, remove, or reorder sections to reconfigure this list block.",
    "LISTS_CREATE_WITH_ITEM_TOOLTIP": "Add an item to the list.",
    "LISTS_REPEAT_HELPURL": "https://github.com/google/blockly/wiki/Lists#create-list-with",
    "LISTS_REPEAT_TOOLTIP": "Creates a list consisting of the given value repeated the specified number of times.",
    "LISTS_REPEAT_TITLE": "create list with item %1 repeated %2 times",
    "LISTS_LENGTH_HELPURL": "https://github.com/google/blockly/wiki/Lists#length-of",
    "LISTS_LENGTH_TITLE": "length of %1",
    "LISTS_LENGTH_TOOLTIP": "Returns the length of a list.",
    "LISTS_ISEMPTY_HELPURL": "https://github.com/google/blockly/wiki/Lists#is-empty",
    "LISTS_ISEMPTY_TITLE": "%1 is empty",
    "LISTS_ISEMPTY_TOOLTIP": "Returns true if the list is empty.",
    "LISTS_INLIST": "in list",
    "LISTS_INDEX_OF_HELPURL": "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list",
    "LISTS_INDEX_OF_FIRST": "find first occurrence of item",
    "LISTS_INDEX_OF_LAST": "find last occurrence of item",
    "LISTS_INDEX_OF_TOOLTIP": "Returns the index of the first/last occurrence of the item in the list. Returns %1 if item is not found.",
    "LISTS_GET_INDEX_GET": "get",
    "LISTS_GET_INDEX_GET_REMOVE": "get and remove",
    "LISTS_GET_INDEX_REMOVE": "remove",
    "LISTS_GET_INDEX_FROM_START": "#",
    "LISTS_GET_INDEX_FROM_END": "# from end",
    "LISTS_GET_INDEX_FIRST": "first",
    "LISTS_GET_INDEX_LAST": "last",
    "LISTS_GET_INDEX_RANDOM": "random",
    "LISTS_GET_INDEX_TAIL": "",
    "LISTS_INDEX_FROM_START_TOOLTIP": "%1 is the first item.",
    "LISTS_INDEX_FROM_END_TOOLTIP": "%1 is the last item.",
    "LISTS_GET_INDEX_TOOLTIP_GET_FROM": "Returns the item at the specified position in a list.",
    "LISTS_GET_INDEX_TOOLTIP_GET_FIRST": "Returns the first item in a list.",
    "LISTS_GET_INDEX_TOOLTIP_GET_LAST": "Returns the last item in a list.",
    "LISTS_GET_INDEX_TOOLTIP_GET_RANDOM": "Returns a random item in a list.",
    "LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM": "Removes and returns the item at the specified position in a list.",
    "LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST": "Removes and returns the first item in a list.",
    "LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST": "Removes and returns the last item in a list.",
    "LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM": "Removes and returns a random item in a list.",
    "LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM": "Removes the item at the specified position in a list.",
    "LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST": "Removes the first item in a list.",
    "LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST": "Removes the last item in a list.",
    "LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM": "Removes a random item in a list.",
    "LISTS_SET_INDEX_HELPURL": "https://github.com/google/blockly/wiki/Lists#in-list--set",
    "LISTS_SET_INDEX_SET": "set",
    "LISTS_SET_INDEX_INSERT": "insert at",
    "LISTS_SET_INDEX_INPUT_TO": "as",
    "LISTS_SET_INDEX_TOOLTIP_SET_FROM": "Sets the item at the specified position in a list.",
    "LISTS_SET_INDEX_TOOLTIP_SET_FIRST": "Sets the first item in a list.",
    "LISTS_SET_INDEX_TOOLTIP_SET_LAST": "Sets the last item in a list.",
    "LISTS_SET_INDEX_TOOLTIP_SET_RANDOM": "Sets a random item in a list.",
    "LISTS_SET_INDEX_TOOLTIP_INSERT_FROM": "Inserts the item at the specified position in a list.",
    "LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST": "Inserts the item at the start of a list.",
    "LISTS_SET_INDEX_TOOLTIP_INSERT_LAST": "Append the item to the end of a list.",
    "LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM": "Inserts the item randomly in a list.",
    "LISTS_GET_SUBLIST_HELPURL": "https://github.com/google/blockly/wiki/Lists#getting-a-sublist",
    "LISTS_GET_SUBLIST_START_FROM_START": "get sub-list from #",
    "LISTS_GET_SUBLIST_START_FROM_END": "get sub-list from # from end",
    "LISTS_GET_SUBLIST_START_FIRST": "get sub-list from first",
    "LISTS_GET_SUBLIST_END_FROM_START": "to #",
    "LISTS_GET_SUBLIST_END_FROM_END": "to # from end",
    "LISTS_GET_SUBLIST_END_LAST": "to last",
    "LISTS_GET_SUBLIST_TAIL": "",
    "LISTS_GET_SUBLIST_TOOLTIP": "Creates a copy of the specified portion of a list.",
    "LISTS_SORT_HELPURL": "https://github.com/google/blockly/wiki/Lists#sorting-a-list",
    "LISTS_SORT_TITLE": "sort %1 %2 %3",
    "LISTS_SORT_TOOLTIP": "Sort a copy of a list.",
    "LISTS_SORT_ORDER_ASCENDING": "ascending",
    "LISTS_SORT_ORDER_DESCENDING": "descending",
    "LISTS_SORT_TYPE_NUMERIC": "numeric",
    "LISTS_SORT_TYPE_TEXT": "alphabetic",
    "LISTS_SORT_TYPE_IGNORECASE": "alphabetic, ignore case",
    "LISTS_SPLIT_HELPURL": "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists",
    "LISTS_SPLIT_LIST_FROM_TEXT": "make list from text",
    "LISTS_SPLIT_TEXT_FROM_LIST": "make text from list",
    "LISTS_SPLIT_WITH_DELIMITER": "with delimiter",
    "LISTS_SPLIT_TOOLTIP_SPLIT": "Split text into a list of texts, breaking at each delimiter.",
    "LISTS_SPLIT_TOOLTIP_JOIN": "Join a list of texts into one text, separated by a delimiter.",
    "LISTS_REVERSE_HELPURL": "https://github.com/google/blockly/wiki/Lists#reversing-a-list",
    "LISTS_REVERSE_MESSAGE0": "reverse %1",
    "LISTS_REVERSE_TOOLTIP": "Reverse a copy of a list.",
    "ORDINAL_NUMBER_SUFFIX": "",
    "VARIABLES_GET_HELPURL": "https://github.com/google/blockly/wiki/Variables#get",
    "VARIABLES_GET_TOOLTIP": "Returns the value of this variable.",
    "VARIABLES_GET_CREATE_SET": "Create 'set %1'",
    "VARIABLES_SET_HELPURL": "https://github.com/google/blockly/wiki/Variables#set",
    "VARIABLES_SET": "set %1 to %2",
    "VARIABLES_SET_TOOLTIP": "Sets this variable to be equal to the input.",
    "VARIABLES_SET_CREATE_GET": "Create 'get %1'",
    "PROCEDURES_DEFNORETURN_HELPURL": "https://en.wikipedia.org/wiki/Subroutine",
    "PROCEDURES_DEFNORETURN_TITLE": "to",
    "PROCEDURES_DEFNORETURN_PROCEDURE": "dosomething",
    "PROCEDURES_BEFORE_PARAMS": "with:",
    "PROCEDURES_CALL_BEFORE_PARAMS": "with:",
    "PROCEDURES_DEFNORETURN_DO": "",
    "PROCEDURES_DEFNORETURN_TOOLTIP": "Creates a function with no output.",
    "PROCEDURES_DEFNORETURN_COMMENT": "Describe this function...",
    "PROCEDURES_DEFRETURN_HELPURL": "https://en.wikipedia.org/wiki/Subroutine",
    "PROCEDURES_DEFRETURN_RETURN": "return",
    "PROCEDURES_DEFRETURN_TOOLTIP": "Creates a function with an output.",
    "PROCEDURES_ALLOW_STATEMENTS": "allow statements",
    "PROCEDURES_DEF_DUPLICATE_WARNING": "Warning: This function has duplicate parameters.",
    "PROCEDURES_CALLNORETURN_HELPURL": "https://en.wikipedia.org/wiki/Subroutine",
    "PROCEDURES_CALLNORETURN_TOOLTIP": "Run the user-defined function '%1'.",
    "PROCEDURES_CALLRETURN_HELPURL": "https://en.wikipedia.org/wiki/Subroutine",
    "PROCEDURES_CALLRETURN_TOOLTIP": "Run the user-defined function '%1' and use its output.",
    "PROCEDURES_MUTATORCONTAINER_TITLE": "inputs",
    "PROCEDURES_MUTATORCONTAINER_TOOLTIP": "Add, remove, or reorder inputs to this function.",
    "PROCEDURES_MUTATORARG_TITLE": "input name:",
    "PROCEDURES_MUTATORARG_TOOLTIP": "Add an input to the function.",
    "PROCEDURES_HIGHLIGHT_DEF": "Highlight function definition",
    "PROCEDURES_CREATE_DO": "Create '%1'",
    "PROCEDURES_IFRETURN_TOOLTIP": "If a value is true, then return a second value.",
    "PROCEDURES_IFRETURN_HELPURL": "http://c2.com/cgi/wiki?GuardClause",
    "PROCEDURES_IFRETURN_WARNING": "Warning: This block may be used only within a function definition.",
    "PROCEDURES_DEFRETURN_TITLE": "to",
    "CONTROLS_IF_IF_TITLE_IF": "if",
    "CONTROLS_WHILEUNTIL_INPUT_DO": "do",
    "CONTROLS_IF_MSG_THEN": "do",
    "CONTROLS_IF_ELSE_TITLE_ELSE": "else",
    "PROCEDURES_DEFRETURN_PROCEDURE": "dosomething",
    "LISTS_GET_SUBLIST_INPUT_IN_LIST": "in list",
    "LISTS_GET_INDEX_INPUT_IN_LIST": "in list",
    "MATH_CHANGE_TITLE_ITEM": "item",
    "PROCEDURES_DEFRETURN_DO": "",
    "CONTROLS_IF_ELSEIF_TITLE_ELSEIF": "else if",
    "LISTS_GET_INDEX_HELPURL": "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list",
    "CONTROLS_FOREACH_INPUT_DO": "do",
    "LISTS_SET_INDEX_INPUT_IN_LIST": "in list",
    "CONTROLS_FOR_INPUT_DO": "do",
    "LISTS_CREATE_WITH_ITEM_TITLE": "item",
    "TEXT_APPEND_VARIABLE": "item",
    "TEXT_CREATE_JOIN_ITEM_TITLE_ITEM": "item",
    "LISTS_INDEX_OF_INPUT_IN_LIST": "in list",
    "PROCEDURES_DEFRETURN_COMMENT": "Describe this function...",
    "TEXT_ADD": "%1 + %2",
    "DECODE_STR": "decode %1 ",
    "ENCODE_STR": "encode %1 ",
    "LOGIC_TRY": "try  %1",
    "LOGIC_EXCEPT": "except %1",
    "LOGIC_SWITCH": "switch %1",
    "LOGIC_CASE": "case",
    "LOGIC_DEFAULT": "default",
    "DUMPS_JSON": "dumps %1 to json",
    "LOADS_JSON": "loads json %1",
    "MAP_ON_LOOP": "create map",
    "MAP_ON_func": "%1",
    "MAP_CLEAR": " map clear %1",
    "GET_MAP_IN": "map %1 contain key %2",
    "CREATE_MAP_KEY": "key %1 value %2",
    "GET_MAP_KEY": "get key %1 in map %2",
    "ADD_MAP_KEY": "in map %1 add key %2 value %3",
    "SET_MAP_KEY": "in map %1 set key %2 value %3",
    "DELETE_MAP_KEY": "in map %1 delete key %2",
    "BLE_UART_INIT_MSG0": "Init BLE Uart",
    "BLE_UART_DEINIT_MSG0": "deinit",
    "BLE_UART_IS_CONNECTED_MSG0": "is connected",
    "BLE_UART_AVAILABLE_CHAR_MSG0": "count of available",
    "BLE_UART_READ_ALL_MSG0": "read all",
    "BLE_UART_READ_BYTES_MSG0": "read",
    "BLE_UART_READ_BYTES_MSG1": "bytes",
    "BLE_UART_READ_LINE_MSG0": "read line",
    "BLE_UART_READ_RAW_DATA_MSG0": "read a Raw Data (0 ~ 255)",
    "BLE_UART_CONNECT_MSG0": "connect",
    "BLE_UART_CLOSE_MSG0": "close",
    "BLE_UART_WRITE_MSG0": "write",
    "BLE_UART_WRITE_LINE_MSG0": "write line",
    "BLE_UART_WRITE_VAR_MSG0": "write",
    "BLE_UART_WRITE_LIST_TUPLE_MSG0": "write list or tuple",
    "BLE_UART_WRITE_LIST_MSG0": "write Raw Data",
    "BLE_UART_SCAN_CALLBACK_MSG0": "When",
    "BLE_UART_SCAN_CALLBACK_MSG1": "addr type",
    "BLE_UART_SCAN_CALLBACK_MSG2": "addr",
    "BLE_UART_SCAN_CALLBACK_MSG3": "name",
    "MAP_CLEAR_MSG0": "map clear",
    "MAP_GET_IN_MSG0": "map",
    "MAP_GET_IN_MSG1": "contain key",
    "MAP_GET_KEY_MSG0": "get key",
    "MAP_GET_KEY_MSG1": "in map",
    "MAP_ADD_KEY_VALUE_MSG0": "in map",
    "MAP_ADD_KEY_VALUE_MSG1": "add key",
    "MAP_ADD_KEY_VALUE_MSG2": "value",
    "MAP_SET_KEY_VALUE_MSG0": "in map",
    "MAP_SET_KEY_VALUE_MSG1": "set key",
    "MAP_SET_KEY_VALUE_MSG2": "value",
    "MAP_DEL_KEY_MSG0": "in map",
    "MAP_DEL_KEY_MSG1": "delete key",
    "TEXT_CONVERT_STR_MSG0": "convert to str",
    "TEXT_ADD_STR_MSG0": "+",
    "TEXT_DECODE_STR_MSG0": "decode",
    "TEXT_ENCODE_STR_MSG0": "encode",
    "TEXT_REDUCE_FLOAT_MSG0": "reduce",
    "TEXT_REDUCE_FLOAT_MSG1": "to",
    "TEXT_REDUCE_FLOAT_MSG2": "decimal places",
    "BYTEARRAY_CREATE_EMPTY_MSG0": "create empty bytearray",
    "BYTEARRAY_CREATE_EMPTY_MSG1": "with length",
    "BYTEARRAY_APPEND_MSG0": "Bytearray",
    "BYTEARRAY_APPEND_MSG1": "append",
    "BYTEARRAY_EXTEND_MSG0": "Bytearray",
    "BYTEARRAY_EXTEND_MSG1": "extend",
    "BYTEARRAY_DECODE_MSG0": "bytearray",
    "BYTEARRAY_DECODE_MSG1": "decode",
    "MATH_CONVENT_INT_MSG0": "convert to int",
    "MATH_CONVENT_FLOAT_MSG0": "convert to float",
    "MATH_GET_BIT_MSG0": "get",
    "MATH_GET_BIT_MSG1": "bit",
    "MATH_SET_BIT_MSG0": "set",
    "MATH_SET_BIT_MSG1": "bit",
    "MATH_CLEAR_BIT_MSG0": "clear",
    "MATH_CLEAR_BIT_MSG1": "bit",
    "MATH_REVERSE_BIT_MSG0": "reverse",
    "MATH_REVERSE_BIT_MSG1": "bit",
    "MATH_INT_FROM_BYTES_MSG0": "int from bytes",
    "LOGIC_TRY_EXCEPT_MSG0": "try",
    "LOGIC_TRY_EXCEPT_MSG1": "except",
    "LOGIC_SWITCH_MSG0": "switch                ",
    "LOGIC_SWITCH_MSG1": "case",
    "LOGIC_SWITCH_MSG2": "default",
    "LOGIC_WHEN_MSG0": "When",
    "LOGIC_WHEN_MSG1": "is change",
    "LOGIC_WHEN_MSG2": "do",
    "LOGIC_WHEN_MSG3": "else",
    "SET_SCREEN_COLOR_MSG0": "Set screen background color",
    "SET_SCREEN_ROTATION_MSG0": "Set screen rotation",
    "SET_SCREEN_BRIGHTNESS_MSG0": "Set screen brightness",
    "SET_SCREEN_BRIGHTNESS_MSG1": "(0 ~ 255)",
    "SET_SCREEN_COLOR_MULTIPLE_MSG0": "Set screen background color",
    "TITLE_SET_COLOR_MSG0": "Set",
    "TITLE_SET_COLOR_MSG1": "text color",
    "TITLE_SET_COLOR_MSG2": "background color",
    "TITLE_SET_TEXT_MSG0": "Set",
    "TITLE_SET_TEXT_MSG1": "text",
    "TITLE_SET_TEXT_POSITION_MSG0": "Set",
    "TITLE_SET_TEXT_POSITION_MSG1": "text x position",
    "TITLE_SET_VISIBLE_MSG0": "Set",
    "TITLE_SET_COLOR_MULTIPLE_MSG0": "Set",
    "TITLE_SET_COLOR_MULTIPLE_MSG1": "text color",
    "TITLE_SET_COLOR_MULTIPLE_MSG2": "background color",
    "LABEL_SET_SIZE_MSG0": "Set",
    "LABEL_SET_SIZE_MSG1": "size",
    "LABEL_SET_TEXT_MSG0": "Set",
    "LABEL_SET_TEXT_MSG1": "text",
    "LABEL_SET_COLOR_MSG0": "Set",
    "LABEL_SET_COLOR_MSG1": "color",
    "LABEL_SET_POSITION_MSG0": "Set",
    "LABEL_SET_POSITION_MSG1": "x",
    "LABEL_SET_POSITION_MSG2": "y",
    "LABEL_SET_VISIBLE_MSG0": "Set",
    "LABEL_SET_FONT_MSG0": "Set",
    "LABEL_SET_FONT_MSG1": "font",
    "LABEL_SET_COLOR_MULTIPLE_MSG0": "Set",
    "LABEL_SET_COLOR_MULTIPLE_MSG1": "text color",
    "LABEL_SET_COLOR_MULTIPLE_MSG2": "background color",
    "LABEL_PLUS_SET_SIZE_MSG0": "Set",
    "LABEL_PLUS_SET_SIZE_MSG1": "size",
    "LABEL_PLUS_SET_TEXT_MSG0": "Set",
    "LABEL_PLUS_SET_TEXT_MSG1": "text",
    "LABEL_PLUS_SET_POSITION_MSG0": "Set",
    "LABEL_PLUS_SET_POSITION_MSG1": "x",
    "LABEL_PLUS_SET_POSITION_MSG2": "y",
    "LABEL_PLUS_SET_VISIBLE_MSG0": "Set",
    "LABEL_PLUS_SET_FONT_MSG0": "Set",
    "LABEL_PLUS_SET_FONT_MSG1": "font",
    "LABEL_PLUS_SET_COLOR_MULTIPLE_MSG0": "Set",
    "LABEL_PLUS_SET_COLOR_MULTIPLE_MSG1": "text color",
    "LABEL_PLUS_SET_COLOR_MULTIPLE_MSG2": "background color",
    "LABEL_PLUS_UPDATE_ENABLE_MSG0": "Set",
    "LABEL_PLUS_UPDATE_ENABLE_MSG1": "update enable",
    "LABEL_PLUS_UPDATE_PERIOD_MSG0": "Set",
    "LABEL_PLUS_UPDATE_PERIOD_MSG1": "update interval",
    "LABEL_PLUS_IS_VALID_DATA_MSG0": "is",
    "LABEL_PLUS_IS_VALID_DATA_MSG1": "valid data",
    "LABEL_PLUS_GET_DATA_MSG0": "get",
    "LABEL_PLUS_GET_DATA_MSG1": "display data",
    "RECT_SET_COLOR_MSG0": "Set",
    "RECT_SET_COLOR_MSG1": "border color",
    "RECT_SET_COLOR_MSG2": "background color",
    "RECT_SET_POSITION_MSG0": "Set",
    "RECT_SET_POSITION_MSG1": "x",
    "RECT_SET_POSITION_MSG2": "y",
    "RECT_SET_SIZE_MSG0": "Set",
    "RECT_SET_SIZE_MSG1": "width",
    "RECT_SET_SIZE_MSG2": "height",
    "RECT_SET_VISIBLE_MSG0": "Set",
    "RECT_SET_COLOR_MULTIPLE_MSG0": "Set",
    "RECT_SET_COLOR_MULTIPLE_MSG1": "border color",
    "RECT_SET_COLOR_MULTIPLE_MSG2": "body fill color",
    "CIRCLE_SET_COLOR_MSG0": "Set",
    "CIRCLE_SET_COLOR_MSG1": "border color",
    "CIRCLE_SET_COLOR_MSG2": "background color",
    "CIRCLE_SET_POSITION_MSG0": "Set",
    "CIRCLE_SET_POSITION_MSG1": "x",
    "CIRCLE_SET_POSITION_MSG2": "y",
    "CIRCLE_SET_RADIUS_MSG0": "Set",
    "CIRCLE_SET_RADIUS_MSG1": "radius",
    "CIRCLE_SET_VISIBLE_MSG0": "Set",
    "CIRCLE_SET_COLOR_MULTIPLE_MSG0": "Set",
    "CIRCLE_SET_COLOR_MULTIPLE_MSG1": "border color",
    "CIRCLE_SET_COLOR_MULTIPLE_MSG2": "body fill color",
    "IMAGE_SET_POSITION_MSG0": "Set",
    "IMAGE_SET_POSITION_MSG1": "x",
    "IMAGE_SET_POSITION_MSG2": "y",
    "IMAGE_SET_FILE_PATH_MSG0": "Set",
    "IMAGE_SET_FILE_PATH_MSG1": "image",
    "IMAGE_SET_VISIBLE_MSG0": "Set",
    "IMAGE_SET_FILE_NAME_MSG0": "Set",
    "IMAGE_SET_FILE_NAME_MSG1": "image",
    "IMAGE_PLUS_SET_POSITION_MSG0": "Set",
    "IMAGE_PLUS_SET_POSITION_MSG1": "x",
    "IMAGE_PLUS_SET_POSITION_MSG2": "y",
    "IMAGE_PLUS_SET_VISIBLE_MSG0": "Set",
    "IMAGE_PLUS_UPDATE_ENABLE_MSG0": "Set",
    "IMAGE_PLUS_UPDATE_ENABLE_MSG1": "update enable",
    "IMAGE_PLUS_UPDATE_PERIOD_MSG0": "Set",
    "IMAGE_PLUS_UPDATE_PERIOD_MSG1": "update interval",
    "IMAGE_PLUS_IS_VALID_IMAGE_MSG0": "is",
    "IMAGE_PLUS_IS_VALID_IMAGE_MSG1": "valid image",
    "TRIANGLE_SET_COLOR_MSG0": "Set",
    "TRIANGLE_SET_COLOR_MSG1": "border color",
    "TRIANGLE_SET_COLOR_MSG2": "background color",
    "TRIANGLE_SET_VISIBLE_MSG0": "Set",
    "TRIANGLE_SET_POINTS_MSG0": "Set",
    "TRIANGLE_SET_POINTS_MSG1": "x0",
    "TRIANGLE_SET_POINTS_MSG2": "y0",
    "TRIANGLE_SET_POINTS_MSG3": "x1",
    "TRIANGLE_SET_POINTS_MSG4": "y1",
    "TRIANGLE_SET_POINTS_MSG5": "x2",
    "TRIANGLE_SET_POINTS_MSG6": "y2",
    "TRIANGLE_SET_COLOR_MULTIPLE_MSG0": "Set",
    "TRIANGLE_SET_COLOR_MULTIPLE_MSG1": "border color",
    "TRIANGLE_SET_COLOR_MULTIPLE_MSG2": "body fill color",
    "LINE_SET_COLOR_MSG0": "Set",
    "LINE_SET_COLOR_MSG1": "color",
    "LINE_SET_VISIBLE_MSG0": "Set",
    "LINE_SET_POINTS_MSG0": "Set",
    "LINE_SET_POINTS_MSG1": "x0",
    "LINE_SET_POINTS_MSG2": "y0",
    "LINE_SET_POINTS_MSG3": "x1",
    "LINE_SET_POINTS_MSG4": "y1",
    "LINE_SET_COLOR_MULTIPLE_MSG0": "Set",
    "LINE_SET_COLOR_MULTIPLE_MSG1": "color",
    "IMU_GET_ACCEL_MSG0": "IMU get accel (return tuple)",
    "IMU_GET_GYRO_MSG0": "IMU get gyro (return tuple)",
    "IMU_GET_MAG_MSG0": "IMU get mag (return tuple)",
    "UNIT_ENV_GET_TEMPERATURE_MSG0": "%1 温度(°C:float)を取得",
    "UNIT_ENV_GET_PRESSURE_MSG0": "%1 気圧(hPa:float)を取得",
    "UNIT_ENV_GET_HUMIDITY_MSG0": "%1 湿度(%:float)を取得",
    "UNIT_ENVPRO_GET_TEMPERATURE_MSG0": "取得",
    "UNIT_ENVPRO_GET_TEMPERATURE_MSG1": "温度(°C:float)",
    "UNIT_ENVPRO_GET_PRESSURE_MSG0": "取得",
    "UNIT_ENVPRO_GET_PRESSURE_MSG1": "気圧(hPa:float)",
    "UNIT_ENVPRO_GET_HUMIDITY_MSG0": "取得",
    "UNIT_ENVPRO_GET_HUMIDITY_MSG1": "湿度(%:float)",
    "UNIT_FADER_GET_VOLTAGE_MSG0": "%1 電圧(V:float)を取得",
    "UNIT_FADER_GET_RAW_MSG0": "%1 生データ(int)を取得",
    "UNIT_FADER_UPDATE_COLOR_MSG0": "%1 update the color based on adc value",
    "UNIT_FADER_UPDATE_BRIGHTNESS_MSG0": "%1 update the brightness based on adc value",
    "SYSTEM_M5_BEGIN_MSG0": "Init built-in hardware at beginning",
    "SYSTEM_M5_UPDATE_MSG0": "Update button,touch,etc. in loop",
    "EXECUTE_CODE_MSG0": "Execute mpy code",
    "EXECUTE_CODE_IMPORT_MSG0": "Execute mpy code (e.g. import ...)",
    "SYSTEM_BOOT_GET_OPTION_MSG0": "get Boot option (return 0 or 1 or 2)",
    "SYSTEM_BOOT_SET_OPTION_MSG0": "Boot option set to",
    "TIME_GET_UTC_TIME_MSG0": "get UTC time (return tuple)",
    "TIME_GET_LOCAL_TIME_STAMP_MSG0": "get local time stamp since Jan 1, 1970",
    "TIME_GET_LOCAL_TIME_MSG0": "get local time (return tuple)",
    "TIME_GET_TIME_STAMP_MSG0": "get time stamp since",
    "TIME_GET_TIME_STAMP_MSG1": "year",
    "TIME_GET_TIME_STAMP_MSG2": "month",
    "TIME_GET_TIME_STAMP_MSG3": "mday",
    "TIME_GET_TIME_STAMP_MSG4": "hour",
    "TIME_GET_TIME_STAMP_MSG5": "minute",
    "TIME_GET_TIME_STAMP_MSG6": "second",
    "TIME_GET_TIME_STAMP_MSG7": "weekday",
    "TIME_GET_TIME_STAMP_MSG8": "yearday",
    "TIME_SLEEP_SECOND_MSG0": "Sleep",
    "TIME_SLEEP_SECOND_MSG1": "seconds",
    "TIME_SLEEP_MILLISECOND_MSG0": "Sleep",
    "TIME_SLEEP_MILLISECOND_MSG1": "milliseconds",
    "TIME_SLEEP_MICROSECOND_MSG0": "Sleep",
    "TIME_SLEEP_MICROSECOND_MSG1": "microseconds",
    "TIME_GET_TICKS_MS_MSG0": "get ticks in milliseconds",
    "TIME_GET_TICKS_US_MSG0": "get ticks in microseconds",
    "TIME_GET_TICKS_CPU_MSG0": "get CPU ticks count",
    "TIME_GET_TICKS_ADD_MSG0": "ticks",
    "TIME_GET_TICKS_ADD_MSG1": "add delta",
    "TIME_GET_TICKS_DIFF_MSG0": "ticks diff",
    "TIME_GET_SYSTEM_TIME_MSG0": "get system uptime in seconds",
    "TIME_GET_TIMEZONE_MSG0": "get timezone (return string)",
    "TIME_SET_TIMEZONE_MSG0": "Set timezone",
    "BLE_UART_SERVER_INIT_MSG0": "Init BLE Uart server",
    "BLE_UART_SERVER_INIT_MSG1": "name",
    "BLE_UART_SERVER_DEINIT_MSG0": "BLE Uart server deinit",
    "BLE_UART_SERVER_AVAILABLE_CHAR_MSG0": "BLE Uart server count of available",
    "BLE_UART_SERVER_READ_ALL_MSG0": "BLE Uart server read all",
    "BLE_UART_SERVER_READ_BYTES_MSG0": "BLE Uart server read",
    "BLE_UART_SERVER_READ_BYTES_MSG1": "bytes",
    "BLE_UART_SERVER_READ_LINE_MSG0": "BLE Uart server read line",
    "BLE_UART_SERVER_READ_RAW_DATA_MSG0": "BLE Uart server read a Raw Data (0 ~ 255)",
    "BLE_UART_SERVER_CLOSE_MSG0": "BLE Uart server close",
    "BLE_UART_SERVER_WRITE_MSG0": "BLE Uart server write",
    "BLE_UART_SERVER_WRITE_LINE_MSG0": "BLE Uart server write line",
    "BLE_UART_SERVER_WRITE_VAR_MSG0": "BLE Uart server write",
    "BLE_UART_SERVER_WRITE_LIST_TUPLE_MSG0": "BLE Uart server write list or tuple",
    "BLE_UART_SERVER_WRITE_LIST_MSG0": "BLE Uart server write Raw Data",
    "BLE_UART_CLIENT_INIT_MSG0": "Init BLE Uart client",
    "BLE_UART_CLIENT_DEINIT_MSG0": "BLE Uart client deinit",
    "BLE_UART_CLIENT_IS_CONNECTED_MSG0": "BLE Uart client is connected",
    "BLE_UART_CLIENT_AVAILABLE_CHAR_MSG0": "BLE Uart client count of available",
    "BLE_UART_CLIENT_READ_ALL_MSG0": "BLE Uart client read all",
    "BLE_UART_CLIENT_READ_BYTES_MSG0": "BLE Uart client read",
    "BLE_UART_CLIENT_READ_BYTES_MSG1": "bytes",
    "BLE_UART_CLIENT_READ_LINE_MSG0": "BLE Uart client read line",
    "BLE_UART_CLIENT_READ_RAW_DATA_MSG0": "BLE Uart client read a Raw Data (0 ~ 255)",
    "BLE_UART_CLIENT_CONNECT_MSG0": "BLE Uart client connect to",
    "BLE_UART_CLIENT_CONNECT_MSG1": "timeout",
    "BLE_UART_CLIENT_CLOSE_MSG0": "BLE Uart client close",
    "BLE_UART_CLIENT_WRITE_MSG0": "BLE Uart client write",
    "BLE_UART_CLIENT_WRITE_LINE_MSG0": "BLE Uart client write line",
    "BLE_UART_CLIENT_WRITE_VAR_MSG0": "BLE Uart client write",
    "BLE_UART_CLIENT_WRITE_LIST_TUPLE_MSG0": "BLE Uart client write list or tuple",
    "BLE_UART_CLIENT_WRITE_LIST_MSG0": "BLE Uart client write Raw Data",
    "BLE_UART_CLIENT_SCAN_CALLBACK_MSG0": "When BLE Uart client scan to",
    "BLE_UART_CLIENT_SCAN_CALLBACK_MSG1": "addr type",
    "BLE_UART_CLIENT_SCAN_CALLBACK_MSG2": "addr",
    "BLE_UART_CLIENT_SCAN_CALLBACK_MSG3": "name",
    "WLAN_STA_INIT_MSG0": "Init WLAN STA",
    "WLAN_STA_SET_ACTIVE_MSG0": "WLAN STA active",
    "WLAN_STA_CONNECT_MSG0": "WLAN STA connect to SSID",
    "WLAN_STA_CONNECT_MSG1": "password",
    "WLAN_STA_DISCONNECT_MSG0": "WLAN STA disconnect",
    "WLAN_STA_GET_RSSI_MSG0": "WLAN STA get RSSI",
    "WLAN_STA_GET_STATUS_MSG0": "WLAN STA get connect status",
    "WLAN_STA_STATUS_MSG0": "connect status",
    "WLAN_STA_IS_CONNECTED_MSG0": "WLAN STA is connected",
    "WLAN_STA_GET_LOCALIP_MSG0": "WLAN STA get local IP",
    "WLAN_STA_GET_SUBNET_MSG0": "WLAN STA get subnet",
    "WLAN_STA_GET_GATEWAY_MSG0": "WLAN STA get gateway",
    "WLAN_STA_GET_DNS_MSG0": "WLAN STA get DNS",
    "WLAN_STA_GET_MAC_MSG0": "WLAN STA get MAC address",
    "WLAN_STA_GET_DHCP_HOSTNAME_MSG0": "WLAN STA get DHCP hostname",
    "WLAN_STA_SET_DHCP_HOSTNAME_MSG0": "WLAN STA set DHCP hostname to",
    "WLAN_STA_GET_RECONNECTS_MSG0": "WLAN STA get reconnects (return int)",
    "WLAN_STA_SET_RECONNECTS_MSG0": "WLAN STA set reconnects to",
    "WLAN_STA_GET_TXPOWER_MSG0": "WLAN STA get tx power (return float)",
    "WLAN_STA_SET_TXPOWER_MSG0": "WLAN STA set tx power to",
    "WLAN_STA_SCAN_FOR_EACH_MSG0": "for each item",
    "WLAN_STA_SCAN_FOR_EACH_MSG1": "in list WLAN STA scan",
    "WLAN_STA_SCAN_FOR_EACH_MSG2": "do",
    "WLAN_STA_SCAN_GET_VALUE_MSG0": "get",
    "WLAN_STA_SCAN_GET_VALUE_MSG1": "AP",
    "WLAN_AP_INIT_MSG0": "Init WLAN AP",
    "WLAN_AP_SET_ACTIVE_MSG0": "WLAN AP active",
    "WLAN_AP_IS_CONNECTED_MSG0": "WLAN AP is connected",
    "WLAN_AP_GET_SSID_MSG0": "WLAN AP get SSID",
    "WLAN_AP_SET_SSID_MSG0": "WLAN AP set SSID to",
    "WLAN_AP_GET_PASSWORD_MSG0": "WLAN AP get password",
    "WLAN_AP_SET_PASSWORD_MSG0": "WLAN AP set password to",
    "WLAN_AP_GET_LOCALIP_MSG0": "WLAN AP get local IP",
    "WLAN_AP_GET_SUBNET_MSG0": "WLAN AP get subnet",
    "WLAN_AP_GET_GATEWAY_MSG0": "WLAN AP get gateway",
    "WLAN_AP_GET_DNS_MSG0": "WLAN AP get DNS",
    "WLAN_AP_GET_MAC_MSG0": "WLAN AP get MAC address",
    "WLAN_AP_GET_HIDDEN_MSG0": "WLAN AP get hidden status",
    "WLAN_AP_SET_HIDDEN_MSG0": "WLAN AP set hidden status",
    "WLAN_AP_GET_AUTHMODE_MSG0": "WLAN AP get auth mode (return int)",
    "WLAN_AP_SET_AUTHMODE_MSG0": "WLAN AP set auth mode to",
    "WLAN_AP_AUTHMODE_VALUE_MSG0": "auth mode",
    "WLAN_AP_GET_CHANNEL_MSG0": "WLAN AP get channel",
    "WLAN_AP_SET_CHANNEL_MSG0": "WLAN AP set channel to",
    "WLAN_AP_SET_CHANNEL_MSG1": "(1 ~ 13)",
    "WLAN_AP_GET_DHCP_HOSTNAME_MSG0": "WLAN AP get DHCP hostname",
    "WLAN_AP_SET_DHCP_HOSTNAME_MSG0": "WLAN AP set DHCP hostname to",
    "WLAN_AP_GET_MAX_CLIENTS_MSG0": "WLAN AP get max client num",
    "WLAN_AP_SET_MAX_CLIENTS_MSG0": "WLAN AP set max client num to",
    "WLAN_AP_SET_MAX_CLIENTS_MSG1": "(1 ~ 10)",
    "WLAN_AP_GET_TXPOWER_MSG0": "WLAN AP get tx power",
    "WLAN_AP_SET_TXPOWER_MSG0": "WLAN AP set tx power to",
    "WLAN_AP_SCAN_FOR_EACH_MSG0": "for each item",
    "WLAN_AP_SCAN_FOR_EACH_MSG1": "in list WLAN AP get stations",
    "WLAN_AP_SCAN_FOR_EACH_MSG2": "do",
    "WLAN_AP_SCAN_GET_VALUE_MSG0": "get",
    "WLAN_AP_SCAN_GET_VALUE_MSG1": "MAC address",
    "NVS_OPEN_MSG0": "open",
    "NVS_OPEN_MSG1": "namespace",
    "NVS_GET_I8_MSG0": "get INT8 value for key",
    "NVS_GET_I8_MSG1": "(return -128 ~ 127)",
    "NVS_SET_I8_MSG0": "set key",
    "NVS_SET_I8_MSG1": "to INT8 value",
    "NVS_SET_I8_MSG2": "(-128 ~ 127)",
    "NVS_GET_I32_MSG0": "get INT32 value for key",
    "NVS_GET_I32_MSG1": "(return -2,147,483,648 ~ 2,147,483,647)",
    "NVS_SET_I32_MSG0": "set key",
    "NVS_SET_I32_MSG1": "to INT32 value",
    "NVS_SET_I32_MSG2": "(-2,147,483,648 ~ 2,147,483,647)",
    "NVS_GET_U8_MSG0": "get UINT8 value for key",
    "NVS_GET_U8_MSG1": "(return 0 ~ 255)",
    "NVS_SET_U8_MSG0": "set key",
    "NVS_SET_U8_MSG1": "to UINT8 value",
    "NVS_SET_U8_MSG2": "(0 ~ 255)",
    "NVS_GET_U16_MSG0": "get UINT16 value for key",
    "NVS_GET_U16_MSG1": "(return 0 ~ 65535)",
    "NVS_SET_U16_MSG0": "set key",
    "NVS_SET_U16_MSG1": "to UINT16 value",
    "NVS_SET_U16_MSG2": "(0 ~ 65535)",
    "NVS_GET_U32_MSG0": "get UINT32 value for key",
    "NVS_GET_U32_MSG1": "(return 0 ~ 4,294,967,295)",
    "NVS_SET_U32_MSG0": "set key",
    "NVS_SET_U32_MSG1": "to UINT32 value",
    "NVS_SET_U32_MSG2": "(0 ~ 4,294,967,295)",
    "NVS_GET_STR_MSG0": "get str value for key",
    "NVS_SET_STR_MSG0": "set key",
    "NVS_SET_STR_MSG1": "to str value",
    "NVS_GET_BLOB_MSG0": "get binary blob value for key",
    "NVS_SET_BLOB_MSG0": "set key",
    "NVS_SET_BLOB_MSG1": "to binary blob value",
    "NVS_COMMIT_MSG0": "commits changes to flash",
    "NVS_ERASE_KEY_MSG0": "erase key",
    "POWER_SET_EXT_OUTPUT_MSG0": "Set external port power to",
    "POWER_SET_EXT_OUTPUT_MSG1": "mode",
    "POWER_SET_EXT_OUTPUT_PORT_MSG0": "Set port",
    "POWER_SET_EXT_OUTPUT_PORT_MSG1": "power output",
    "POWER_GET_EXT_OUTPUT_MSG0": "is external port in output mode (return True or False)",
    "POWER_SET_USB_OUTPUT_MSG0": "Set USB port power to",
    "POWER_SET_USB_OUTPUT_MSG1": "mode",
    "POWER_GET_USB_OUTPUT_MSG0": "is USB port in output mode (return True or False)",
    "POWER_SET_LED_BRIGHTNESS_MSG0": "Set power LED brightness",
    "POWER_SET_LED_BRIGHTNESS_MSG1": "(0 ~ 255)",
    "POWER_SHUT_DOWN_MSG0": "Turn off the device",
    "POWER_SET_TIMER_SLEEP_SECOND_MSG0": "Turn off the device and wakeup after",
    "POWER_SET_TIMER_SLEEP_SECOND_MSG1": "(1 ~ 15300) seconds",
    "POWER_SET_TIMER_SLEEP_HOUR_MSG0": "Turn off the device and set it to wakeup at",
    "POWER_SET_TIMER_SLEEP_HOUR_MSG1": "hours (0 ~ 23)",
    "POWER_SET_TIMER_SLEEP_HOUR_MSG2": "minutes (0 ~ 59)",
    "POWER_SET_TIMER_SLEEP_HOUR_MSG3": "every day",
    "POWER_SET_TIMER_SLEEP_DAY_MSG0": "Turn off the device and schedule it to wakeup on",
    "POWER_SET_TIMER_SLEEP_DAY_MSG1": "weekday (0 ~ 6)",
    "POWER_SET_TIMER_SLEEP_DAY_MSG2": "date (1 ~ 31)",
    "POWER_SET_TIMER_SLEEP_DAY_MSG3": "hours (0 ~ 23)",
    "POWER_SET_TIMER_SLEEP_DAY_MSG4": "minutes (0 ~ 59)",
    "POWER_SET_DEEP_SLEEP_MSG0": "Enter deep sleep mode and wakeup after",
    "POWER_SET_DEEP_SLEEP_MSG1": "microseconds, with <touch/click> wakeup",
    "POWER_SET_LIGHT_SLEEP_MSG0": "Enter light sleep mode and wakeup after",
    "POWER_SET_LIGHT_SLEEP_MSG1": "microseconds, with <touch/click> wakeup",
    "POWER_GET_BATTERY_LEVEL_MSG0": "get battery capacity percentage (return int)",
    "POWER_SET_BATTERY_CHARGE_MSG0": "Turn battery charge",
    "POWER_SET_CHARGE_CURRENT_MSG0": "Set battery charge current",
    "POWER_SET_CHARGE_CURRENT_MSG1": "(0 ~ 2000) mA",
    "POWER_SET_CHARGE_VOLTAGE_MSG0": "Set battery charge voltage",
    "POWER_SET_CHARGE_VOLTAGE_MSG1": "(4100 ~ 4600) mV",
    "POWER_IS_CHARGING_MSG0": "is battery charging (return True or False)",
    "POWER_GET_BATTERY_VOLTAGE_MSG0": "get battery voltage in millivolt (return int)",
    "POWER_GET_BATTERY_CURRENT_MSG0": "Power get battery current (return int)",
    "POWER_GET_KEY_STATE_MSG0": "get power key state (return int)",
    "POWER_SET_VIBRATION_MSG0": "Set vibration strength",
    "POWER_SET_VIBRATION_MSG1": "(0 ~ 255)",
    "POWER_GET_PORT_VBUS_MSG0": "get port",
    "POWER_GET_PORT_VBUS_MSG1": "Vbus in Volt (return float)",
    "POWER_GET_PORT_CURRENT_MSG0": "get port",
    "POWER_GET_PORT_CURRENT_MSG1": "current in mA (return float)",
    "M5BLE_INIT_MSG0": "Init BLE",
    "M5BLE_GET_MTU_MSG0": "BLE get mtu",
    "M5BLE_DEINIT_MSG0": "BLE deinit",
    "M5BLE_CLIENT_GET_SERVICES_MSG0": "BLE client get services (return list)",
    "M5BLE_CLIENT_GET_CHARACTERISTICS_MSG0": "BLE client get characteristics with service UUID",
    "M5BLE_CLIENT_GET_CHARACTERISTICS_MSG1": "(return list)",
    "M5BLE_CLIENT_GET_AVAILABLE_CHAR_MSG0": "BLE client number of bytes available",
    "M5BLE_CLIENT_GET_AVAILABLE_CHAR_MSG1": "characteristic UUID",
    "M5BLE_CLIENT_GET_AVAILABLE_CHAR_MSG2": "service UUID",
    "M5BLE_CLIENT_READ_MSG0": "BLE client read",
    "M5BLE_CLIENT_READ_MSG1": "characteristic UUID",
    "M5BLE_CLIENT_READ_MSG2": "service UUID",
    "M5BLE_CLIENT_READ_MSG3": "bytes",
    "M5BLE_CLIENT_READ_ALL_MSG0": "BLE client read all",
    "M5BLE_CLIENT_READ_ALL_MSG1": "characteristic UUID",
    "M5BLE_CLIENT_READ_ALL_MSG2": "service UUID",
    "M5BLE_CLIENT_SET_MTU_MSG0": "BLE client set the maximum transmission unit",
    "M5BLE_CLIENT_SET_CURRENT_SERVICE_UUID_MSG0": "BLE client set current service UUID",
    "M5BLE_CLIENT_SCAN_MSG0": "BLE client connect on found",
    "M5BLE_CLIENT_SCAN_MSG1": "timeout (ms)",
    "M5BLE_CLIENT_SCAN_MSG2": "automatically connect",
    "M5BLE_CLIENT_SCAN_MSG3": "name prefix",
    "M5BLE_CLIENT_CONNECT_MSG0": "BLE client connect",
    "M5BLE_CLIENT_CONNECT_MSG1": "address type",
    "M5BLE_CLIENT_CONNECT_MSG2": "address",
    "M5BLE_CLIENT_WRITE_MSG0": "BLE client write data",
    "M5BLE_CLIENT_WRITE_MSG1": "characteristic UUID",
    "M5BLE_CLIENT_WRITE_MSG2": "service UUID",
    "M5BLE_CLIENT_CLOSE_MSG0": "BLE client close",
    "M5BLE_CLIENT_ON_CONNECTED_MSG0": "When BLE client on connected",
    "M5BLE_CLIENT_ON_CONNECTED_MSG1": "client",
    "M5BLE_CLIENT_ON_DISCONNECTED_MSG0": "When BLE client on disconnected",
    "M5BLE_CLIENT_ON_DISCONNECTED_MSG1": "client",
    "M5BLE_CLIENT_ON_DISCONNECTED_MSG2": "conn handle",
    "M5BLE_CLIENT_ON_DISCONNECTED_MSG3": "addr type",
    "M5BLE_CLIENT_ON_DISCONNECTED_MSG4": "addr",
    "M5BLE_CLIENT_ON_SERVER_FOUND_MSG0": "When BLE client on server found",
    "M5BLE_CLIENT_ON_SERVER_FOUND_MSG1": "client",
    "M5BLE_CLIENT_ON_SERVER_FOUND_MSG2": "name",
    "M5BLE_CLIENT_ON_SERVER_FOUND_MSG3": "addr type",
    "M5BLE_CLIENT_ON_SERVER_FOUND_MSG4": "addr",
    "M5BLE_CLIENT_ON_SERVER_FOUND_MSG5": "adv type",
    "M5BLE_CLIENT_ON_SERVER_FOUND_MSG6": "rssi",
    "M5BLE_CLIENT_ON_SERVER_FOUND_MSG7": "adv data",
    "M5BLE_CLIENT_ON_SCAN_FINISHED_MSG0": "When BLE client on scan finished",
    "M5BLE_CLIENT_ON_SCAN_FINISHED_MSG1": "client",
    "M5BLE_CLIENT_ON_SCAN_FINISHED_MSG2": "scan result",
    "M5BLE_CLIENT_ON_READ_COMPLETE_MSG0": "When BLE client on read complete",
    "M5BLE_CLIENT_ON_READ_COMPLETE_MSG1": "client",
    "M5BLE_CLIENT_ON_READ_COMPLETE_MSG2": "conn handle",
    "M5BLE_CLIENT_ON_READ_COMPLETE_MSG3": "value handle",
    "M5BLE_CLIENT_ON_READ_COMPLETE_MSG4": "char data",
    "M5BLE_CLIENT_ON_NOTIFY_MSG0": "When BLE client on notify",
    "M5BLE_CLIENT_ON_NOTIFY_MSG1": "client",
    "M5BLE_SERVER_CLEAR_SERVICES_MSG0": "BLE server clear services",
    "M5BLE_SERVER_ADD_SERVICE_MSG0": "BLE server add service",
    "M5BLE_SERVER_ADD_SERVICE_MSG1": "service UUID",
    "M5BLE_SERVER_ADD_SERVICE_MSG2": "characteristics",
    "M5BLE_SERVER_CREATE_CHARACTERISTIC_MSG0": "BLE server create characteristics",
    "M5BLE_SERVER_CREATE_CHARACTERISTIC_MSG1": "characteristic UUID",
    "M5BLE_SERVER_CREATE_CHARACTERISTIC_MSG2": "is readable",
    "M5BLE_SERVER_CREATE_CHARACTERISTIC_MSG3": "can notify",
    "M5BLE_SERVER_CREATE_CHARACTERISTIC_MSG4": "is writable",
    "M5BLE_SERVER_START_MSG0": "BLE server start service interval",
    "M5BLE_SERVER_START_MSG1": "us",
    "M5BLE_SERVER_GET_CLIENT_MSG0": "BLE server get client with index",
    "M5BLE_SERVER_GET_CLIENT_LIST_MSG0": "BLE server get clients (return list)",
    "M5BLE_SERVER_ON_RECEIVE_MSG0": "When BLE server received data",
    "M5BLE_SERVER_ON_RECEIVE_MSG1": "server",
    "M5BLE_SERVER_ON_RECEIVE_MSG2": "connected client handle",
    "M5BLE_SERVER_ON_CONNECTED_MSG0": "When client connected to server",
    "M5BLE_SERVER_ON_CONNECTED_MSG1": "server",
    "M5BLE_SERVER_ON_CONNECTED_MSG2": "connected client handle",
    "M5BLE_SERVER_ON_DISCONNECTED_MSG0": "When client disconnected from server",
    "M5BLE_SERVER_ON_DISCONNECTED_MSG1": "server",
    "M5BLE_SERVER_ON_DISCONNECTED_MSG2": "connected client handle",
    "M5BLE_HANDLE_GET_AVAILABLE_CHAR_MSG0": "number of bytes available with char UUID",
    "M5BLE_HANDLE_CLOSE_MSG0": "close",
    "M5BLE_HANDLE_READ_MSG0": "read",
    "M5BLE_HANDLE_READ_MSG1": "bytes with characteristic UUID",
    "M5BLE_HANDLE_READ_ALL_MSG0": "read all with characteristic UUID",
    "M5BLE_HANDLE_WRITE_MSG0": "write data",
    "M5BLE_HANDLE_WRITE_MSG1": "with characteristic UUID",
    "JSON_DUMSP_TO_JSON_MSG0": "dumps",
    "JSON_DUMSP_TO_JSON_MSG1": "to json",
    "JSON_LOADS_JSON_MSG0": "loads json",
    "EZDATA_INIT_MSG0": "Init",
    "EZDATA_INIT_MSG1": "device token",
    "EZDATA_INIT_MSG2": "key",
    "EZDATA_INIT_DATASET_KEY_MSG0": "Init",
    "EZDATA_INIT_DATASET_KEY_MSG1": "dataset",
    "EZDATA_INIT_DATASET_KEY_MSG2": "key",
    "EZDATA_INIT_DATA_TOKEN_MSG0": "Init",
    "EZDATA_INIT_DATA_TOKEN_MSG1": "data token",
    "EZDATA_GET_VALUE_MSG0": "get value",
    "EZDATA_GET_HISTORY_MSG0": "get history record (return list)",
    "EZDATA_SET_VALUE_MSG0": "set value",
    "EZDATA_SET_VALUE_FILE_MSG0": "set value (file)",
    "EZDATA_SAVE_FILE_MSG0": "save file to",
    "EZDATA_DELETE_KEY_MSG0": "delete key",
    "EZDATA_GET_UPDATE_TIME_MSG0": "get update time (return Unix timestamp)",
    "EZDATA_HAS_NEW_DATA_MSG0": "has new data (return True or False)",
    "EZDATA_FOR_EACH_LIST_MSG0": "for each item",
    "EZDATA_FOR_EACH_LIST_MSG1": "in EzData list of device",
    "EZDATA_FOR_EACH_LIST_MSG2": "do",
    "EZDATA_FOR_EACH_GET_KEY_MSG0": "get",
    "EZDATA_FOR_EACH_GET_KEY_MSG1": "key",
    "EZDATA_FOR_EACH_GET_VALUE_MSG0": "get",
    "EZDATA_FOR_EACH_GET_VALUE_MSG1": "value",
    "CAMERA_IMAGE_DISP_TO_LCD_MSG0": "camera display to screen",
    "CAMERA_IMAGE_CAPTURE_TO_JPG_MSG0": "get quality",
    "CAMERA_IMAGE_CAPTURE_TO_JPG_MSG1": "(1 ~ 100) camera jpg image (return bytes)",
    "CAMERA_IMAGE_CAPTURE_TO_BMP_MSG0": "get camera bmp image (return bytes)",
    "CAMERA_IMAGE_DEINIT_MSG0": "camera deinit",
    "CAMERA_IMAGE_SET_CONTRAST_MSG0": "camera set contrast",
    "CAMERA_IMAGE_SET_CONTRAST_MSG1": "(-2 ~ 2)",
    "CAMERA_IMAGE_SET_HMIRROR_MSG0": "camera set horizontal mirror",
    "CAMERA_IMAGE_SET_GLOBAL_GAIN_MSG0": "camera set global gain",
    "CAMERA_IMAGE_SET_GLOBAL_GAIN_MSG1": "(0x0 ~ 0x3F)",
    "CAMERA_IMAGE_SET_VFLIP_MSG0": "camera set vertical flip",
    "CAMERA_IMAGE_SET_COLORBAR_MSG0": "camera set colorbar",
    "CAMERA_IMAGE_SET_POSITION_MSG0": "camera set",
    "CAMERA_IMAGE_SET_POSITION_MSG1": "x",
    "CAMERA_IMAGE_SET_POSITION_MSG2": "y",
    "CAMERA_IMAGE_SET_POSITION_MSG3": "max width",
    "CAMERA_IMAGE_SET_POSITION_MSG4": "max height",
    "CAMERA_IMAGE_SET_VISIBLE_MSG0": "camera",
    "PIN_INIT_MSG0": "Init",
    "PIN_INIT_MSG1": "mode",
    "PIN_INIT_MSG2": "pull",
    "PIN_ON_MSG0": "on",
    "PIN_OFF_MSG0": "off",
    "PIN_SET_VALUE_MSG0": "Set",
    "PIN_SET_VALUE_MSG1": "value",
    "PIN_SET_VALUE_MSG2": "(0 or 1)",
    "PIN_GET_VALUE_MSG0": "get",
    "PIN_GET_VALUE_MSG1": "value",
    "PIN_INIT_INPUT_MSG0": "Init Pin",
    "PIN_UNUSED_MSG0": "Pin unused",
    "ADC_INIT_MSG0": "Init",
    "ADC_INIT_MSG1": "attenuation",
    "ADC_SET_ATTEN_MSG0": "Set",
    "ADC_SET_ATTEN_MSG1": "atten",
    "ADC_SET_WIDTH_MSG0": "Set",
    "ADC_SET_WIDTH_MSG1": "width",
    "ADC_READ_MSG0": "read",
    "ADC_READ_U16_MSG0": "read",
    "ADC_READ_U16_MSG1": "u16",
    "ADC_READ_UV_MSG0": "read",
    "ADC_READ_UV_MSG1": "microvolts",
    "ADC_INIT_INPUT_MSG0": "Init Pin",
    "PWM_INIT_MSG0": "Init",
    "PWM_INIT_MSG1": "freq",
    "PWM_SET_DUTY_MSG0": "Set",
    "PWM_SET_DUTY_MSG1": "duty",
    "PWM_SET_DUTY_MSG2": "(0 ~ 1023)",
    "PWM_SET_DUTY_U16_MSG0": "Set",
    "PWM_SET_DUTY_U16_MSG1": "duty u16",
    "PWM_SET_DUTY_U16_MSG2": "(0 ~ 65536)",
    "PWM_SET_FREQ_MSG0": "Set",
    "PWM_SET_FREQ_MSG1": "freq",
    "PWM_SET_FREQ_MSG2": "Hz (1 ~ 40000000)",
    "PWM_GET_FREQ_MSG0": "get",
    "PWM_GET_FREQ_MSG1": "freq",
    "PWM_GET_DUTY_MSG0": "get",
    "PWM_GET_DUTY_MSG1": "duty",
    "PWM_GET_DUTY_U16_MSG0": "get",
    "PWM_GET_DUTY_U16_MSG1": "duty u16",
    "PWM_DEINIT_MSG0": "deinit",
    "PWM_INIT_INPUT_MSG0": "Init Pin",
    "PWM_INIT_INPUT_MSG1": "freq",
    "PWM_INIT_INPUT_MSG2": "Hz (1 ~ 40000000)",
    "PWM_INIT_INPUT_MSG3": "(0 ~ 1023)",
    "PWM_INIT_INPUT_MSG4": "(0 ~ 65536)",
    "BUTTON_IS_HOLDING_MSG0": "is holding",
    "BUTTON_IS_PRESSED_MSG0": "is pressed",
    "BUTTON_IS_RELEASED_MSG0": "is released",
    "BUTTON_WAS_CLICKED_MSG0": "was clicked",
    "BUTTON_WAS_DOUBLE_CLICKED_MSG0": "was double clicked",
    "BUTTON_WAS_HOLD_MSG0": "was hold",
    "BUTTON_WAS_PRESSED_MSG0": "was pressed",
    "BUTTON_WAS_RELEASED_MSG0": "was released",
    "BUTTON_WAS_SINGLE_CLICKED_MSG0": "was single clicked",
    "BUTTON_CALLBACK_MSG0": "When button",
    "BUTTON_CALLBACK_MSG1": "was",
    "BUTTON_INIT_MSG0": "Init button (pin)",
    "BUTTON_INIT_MSG1": "mode",
    "BUTTON_INIT_MSG2": "pull",
    "BUTTON_TICK_MSG0": "update in loop",
    "PIN_BUTTON_IS_HOLDING_MSG0": "is holding",
    "PIN_BUTTON_IS_PRESSED_MSG0": "is pressed",
    "PIN_BUTTON_IS_RELEASED_MSG0": "is released",
    "PIN_BUTTON_WAS_CLICKED_MSG0": "is clicked",
    "PIN_BUTTON_WAS_DOUBLE_CLICKED_MSG0": "is double clicked",
    "PIN_BUTTON_CALLBACK_MSG0": "When button",
    "PIN_BUTTON_CALLBACK_MSG1": "was",
    "PIN_BUTTON_INIT_MSG0": "Init button (pin)",
    "PIN_BUTTON_INIT_MSG1": "mode",
    "PIN_BUTTON_INIT_MSG2": "pull",
    "PIN_BUTTON_TICK_MSG0": "update in loop",
    "PIN_BUTTON_WAS_HOLD_MSG0": "was hold",
    "PIN_BUTTON_WAS_PRESSED_MSG0": "was pressed",
    "PIN_BUTTON_WAS_RELEASED_MSG0": "was released",
    "PIN_BUTTON_WAS_SINGLE_CLICKED_MSG0": "was single clicked",
    "UART_INIT_MSG0": "Init UART",
    "UART_INIT_MSG1": "with",
    "UART_INIT_MSG2": "baudrate",
    "UART_INIT_MSG3": "bits",
    "UART_INIT_MSG4": "parity",
    "UART_INIT_MSG5": "stop",
    "UART_INIT_MSG6": "TX",
    "UART_INIT_MSG7": "RX",
    "UART_INIT_SETUP_MSG0": "UART",
    "UART_INIT_SETUP_MSG1": "setup",
    "UART_INIT_SETUP_MSG2": "baudrate",
    "UART_INIT_SETUP_MSG3": "bits",
    "UART_INIT_SETUP_MSG4": "parity",
    "UART_INIT_SETUP_MSG5": "stop",
    "UART_INIT_SETUP_MSG6": "TX",
    "UART_INIT_SETUP_MSG7": "RX",
    "UART_DEINIT_MSG0": "UART",
    "UART_DEINIT_MSG1": "deinit",
    "UART_AVAILABLE_CHAR_MSG0": "UART",
    "UART_AVAILABLE_CHAR_MSG1": "count of available",
    "UART_READ_ALL_MSG0": "UART",
    "UART_READ_ALL_MSG1": "read all",
    "UART_READ_BYTES_MSG0": "UART",
    "UART_READ_BYTES_MSG1": "read",
    "UART_READ_BYTES_MSG2": "bytes",
    "UART_READ_LINE_MSG0": "UART",
    "UART_READ_LINE_MSG1": "read line",
    "UART_READ_RAW_DATA_MSG0": "UART",
    "UART_READ_RAW_DATA_MSG1": "read a Raw Data (0 ~ 255)",
    "UART_READ_INTO_MSG0": "UART",
    "UART_READ_INTO_MSG1": "read into buf",
    "UART_READ_BYTES_INTO_MSG0": "UART",
    "UART_READ_BYTES_INTO_MSG1": "read",
    "UART_READ_BYTES_INTO_MSG2": "bytes into buf",
    "UART_WRITE_MSG0": "UART",
    "UART_WRITE_MSG1": "write",
    "UART_WRITE_LINE_MSG0": "UART",
    "UART_WRITE_LINE_MSG1": "write line",
    "UART_WRITE_VAR_MSG0": "UART",
    "UART_WRITE_VAR_MSG1": "write",
    "UART_WRITE_LIST_TUPLE_MSG0": "UART",
    "UART_WRITE_LIST_TUPLE_MSG1": "write list or tuple",
    "UART_WRITE_LIST_MSG0": "UART",
    "UART_WRITE_LIST_MSG1": "write Raw Data",
    "UART_SET_READ_INTO_MSG0": "UART",
    "UART_SET_READ_INTO_MSG1": "read into buf",
    "UART_SET_READ_BYTES_INTO_MSG0": "UART",
    "UART_SET_READ_BYTES_INTO_MSG1": "read",
    "UART_SET_READ_BYTES_INTO_MSG2": "bytes into buf",
    "IMU_GET_ACCEL_VAR_MSG0": "IMU get X",
    "IMU_GET_ACCEL_VAR_MSG1": "Y",
    "IMU_GET_ACCEL_VAR_MSG2": "Z",
    "IMU_GET_ACCEL_VAR_MSG3": "of accel",
    "IMU_GET_GYRO_VAR_MSG0": "IMU get X",
    "IMU_GET_GYRO_VAR_MSG1": "Y",
    "IMU_GET_GYRO_VAR_MSG2": "Z",
    "IMU_GET_GYRO_VAR_MSG3": "of gyro",
    "IMU_GET_MAG_VAR_MSG0": "IMU get X",
    "IMU_GET_MAG_VAR_MSG1": "Y",
    "IMU_GET_MAG_VAR_MSG2": "Z",
    "IMU_GET_MAG_VAR_MSG3": "of mag",
    "RGB_INIT_MSG0": "RGB init",
    "RGB_SET_INDEX_COLOR_MSG0": "set index",
    "RGB_SET_INDEX_COLOR_MSG1": "color",
    "RGB_FILL_COLOR_MSG0": "fill color",
    "RGB_SET_BRIGHTNESS_MSG0": "set brightness",
    "RGB_SET_BRIGHTNESS_MSG1": "% (0 ~ 100)",
    "RGB_SET_PORT_COLOR_MSG0": "set",
    "RGB_SET_PORT_COLOR_MSG1": "LED color",
    "RGB_ATOM_MATRIX_COLOR_MSG0": "set Atom Matrix",
    "I2C_INIT_MSG0": "Init",
    "I2C_INIT_MSG1": "SCL",
    "I2C_INIT_MSG2": "SDA",
    "I2C_INIT_MSG3": "freq",
    "I2C_SCAN_MSG0": "scan device (return 7-bit address list)",
    "I2C_START_MSG0": "generate START condition",
    "I2C_STOP_MSG0": "generate STOP condition",
    "I2C_READINTO_MSG0": "read into buf",
    "I2C_READINTO_MSG1": "NACK",
    "I2C_READFROM_MSG0": "read from addr",
    "I2C_READFROM_MSG1": "nbytes",
    "I2C_READFROM_MSG2": "STOP",
    "I2C_READFROM_MSG3": "(return bytes)",
    "I2C_READFROM_INTO_MSG0": "read from addr",
    "I2C_READFROM_INTO_MSG1": "into buf",
    "I2C_READFROM_INTO_MSG2": "STOP",
    "I2C_READFROM_MEM_MSG0": "read from addr",
    "I2C_READFROM_MEM_MSG1": "memory addr",
    "I2C_READFROM_MEM_MSG2": "nbytes",
    "I2C_READFROM_MEM_MSG3": "(return bytes)",
    "I2C_READFROM_MEM_INTO_MSG0": "read from addr",
    "I2C_READFROM_MEM_INTO_MSG1": "memory addr",
    "I2C_READFROM_MEM_INTO_MSG2": "into buf",
    "I2C_WRITE_RETURN_MSG0": "write buf",
    "I2C_WRITE_RETURN_MSG1": "(return nbytes written)",
    "I2C_WRITE_MSG0": "write buf",
    "I2C_WRITETO_MSG0": "write buf",
    "I2C_WRITETO_MSG1": "to addr",
    "I2C_WRITETO_MSG2": "stop",
    "I2C_WRITETO_RETURN_MSG0": "write buf",
    "I2C_WRITETO_RETURN_MSG1": "to addr",
    "I2C_WRITETO_RETURN_MSG2": "stop",
    "I2C_WRITETO_RETURN_MSG3": "(return nbytes written)",
    "I2C_WRITETO_MEM_MSG0": "write buf",
    "I2C_WRITETO_MEM_MSG1": "to addr",
    "I2C_WRITETO_MEM_MSG2": "memory addr",
    "SPEAKER_STOP_MSG0": "Speaker play stop",
    "SPEAKER_TONE_MSG0": "Speaker play tone freq",
    "SPEAKER_TONE_MSG1": "millisecond",
    "SPEAKER_PLAYWAV_MSG0": "Speaker play WAV (bytearray / bytes)",
    "SPEAKER_GET_VOLUME_MSG0": "Speaker get volume (return 0~255)",
    "SPEAKER_SET_VOLUME_MSG0": "Speaker set volume",
    "SPEAKER_SET_VOLUME_MSG1": "(0 ~ 255)",
    "SPEAKER_GET_CONFIG_MSG0": "Speaker get config",
    "SPEAKER_GET_CONFIG_MSG1": "(return int)",
    "SPEAKER_GET_CONFIG_RETURN_BOOLEAN_MSG0": "Speaker get config",
    "SPEAKER_GET_CONFIG_RETURN_BOOLEAN_MSG1": "(return True or False)",
    "SPEAKER_SET_CONFIG_MSG0": "Speaker config",
    "SPEAKER_SET_CONFIG_MSG1": "to",
    "SPEAKER_SET_CONFIG_BOOLEAN_MSG0": "Speaker config",
    "SPEAKER_SET_CONFIG_BOOLEAN_MSG1": "to",
    "SPEAKER_USER_CONFIG_MSG0": "Speaker config",
    "SPEAKER_USER_CONFIG_MSG1": "Data pin",
    "SPEAKER_USER_CONFIG_MSG2": "Data pin",
    "SPEAKER_USER_CONFIG_MSG3": "BCK pin",
    "SPEAKER_USER_CONFIG_MSG4": "WS pin",
    "SPEAKER_USER_CONFIG_MSG5": "Sample rate (Hz)",
    "SPEAKER_USER_CONFIG_MSG6": "Stereo",
    "SPEAKER_USER_CONFIG_MSG7": "DMA buf length",
    "SPEAKER_USER_CONFIG_MSG8": "DMA buf count",
    "SPEAKER_USER_CONFIG_MSG9": "Task priority",
    "SPEAKER_USER_CONFIG_MSG10": "Task pinned core",
    "SPEAKER_USER_CONFIG_MSG11": "I2S port",
    "SPEAKER_BEGIN_MSG0": "Speaker begin",
    "SPEAKER_BEGIN_RETURN_MSG0": "Speaker begin (return True or False)",
    "SPEAKER_END_MSG0": "Speaker end",
    "SPEAKER_IS_RUNNING_MSG0": "Speaker is running",
    "SPEAKER_IS_ENABLED_MSG0": "Speaker is enabled",
    "SPEAKER_IS_PLAYING_MSG0": "Speaker is playing",
    "SPEAKER_GET_PLAYING_CHANNELS_MSG0": "Speaker get playing channels (return int)",
    "SPEAKER_SET_VOLUME_PERCENTAGE_MSG0": "Speaker set volume",
    "SPEAKER_SET_VOLUME_PERCENTAGE_MSG1": "%",
    "SPEAKER_GET_VOLUME_PERCENTAGE_MSG0": "Speaker get volume percentage (return float)",
    "SPEAKER_SET_ALL_CHANNEL_VOLUME_MSG0": "Speaker set all channel volume",
    "SPEAKER_SET_ALL_CHANNEL_VOLUME_MSG1": "(0 ~ 255)",
    "SPEAKER_SET_CHANNEL_VOLUME_MSG0": "Speaker set channel",
    "SPEAKER_SET_CHANNEL_VOLUME_MSG1": "volume",
    "SPEAKER_SET_CHANNEL_VOLUME_MSG2": "(0 ~ 255)",
    "SPEAKER_GET_CHANNEL_VOLUME_MSG0": "Speaker get channel",
    "SPEAKER_GET_CHANNEL_VOLUME_MSG1": "volume (return int)",
    "SPEAKER_PLAY_RAW_MSG0": "Speaker play PCM (bytearray / bytes)",
    "SPEAKER_PLAY_RAW_MSG1": "sample rate (Hz)",
    "SPEAKER_PLAY_RAW_RETURN_MSG0": "Speaker play PCM (bytearray / bytes)",
    "SPEAKER_PLAY_RAW_RETURN_MSG1": "sample rate (Hz)",
    "SPEAKER_PLAY_RAW_RETURN_MSG2": "(return True or False)",
    "TIMER_INIT_MSG0": "New",
    "TIMER_SET_MODE_MSG0": "mode",
    "TIMER_SET_MODE_MSG1": "period",
    "TIMER_SET_MODE_MSG2": "milliseconds",
    "TIMER_DEINIT_MSG0": "deinit",
    "TIMER_CALLBACK_MSG0": "callback",
    "DISPLAY_CONFIG_MSG0": "User Display config",
    "DISPLAY_CONFIG_MSG1": "type",
    "DISPLAY_CONFIG_MSG2": "resolution",
    "DISPLAY_CONFIG_MSG3": "color",
    "DISPLAY_CONFIG_MSG4": "SPI Bus",
    "DISPLAY_CONFIG_MSG5": "pin config",
    "DISPLAY_CONFIG_MSG6": "backlight",
    "DISPLAY_CONFIG_RESOLUTION_MSG0": "width",
    "DISPLAY_CONFIG_RESOLUTION_MSG1": "height",
    "DISPLAY_CONFIG_RESOLUTION_MSG2": "offset x",
    "DISPLAY_CONFIG_RESOLUTION_MSG3": "offset y",
    "DISPLAY_CONFIG_COLOR_ORDER_MSG0": "invert",
    "DISPLAY_CONFIG_COLOR_ORDER_MSG1": "RGB order",
    "DISPLAY_CONFIG_SPI_BUS_MSG0": "SPI host ID",
    "DISPLAY_CONFIG_SPI_BUS_MSG1": "SPI freq",
    "DISPLAY_CONFIG_SPI_BUS_MSG2": "sclk",
    "DISPLAY_CONFIG_SPI_BUS_MSG3": "mosi",
    "DISPLAY_CONFIG_SPI_BUS_MSG4": "miso",
    "DISPLAY_CONFIG_SPI_BUS_MSG5": "dc",
    "DISPLAY_CONFIG_SPI_BUS_MSG6": "cs",
    "DISPLAY_CONFIG_SPI_BUS_MSG7": "rst",
    "DISPLAY_CONFIG_SPI_BUS_MSG8": "busy",
    "DISPLAY_CONFIG_BACKLIGHT_MSG0": "Pin",
    "DISPLAY_CONFIG_BACKLIGHT_MSG1": "invert",
    "DISPLAY_CONFIG_BACKLIGHT_MSG2": "PWM freq",
    "DISPLAY_CONFIG_BACKLIGHT_MSG3": "PWM channel",
    "TOUCH_GET_COUNT_MSG0": "get touch count (return int)",
    "TOUCH_GET_X_MSG0": "get touch coordinate X (return int)",
    "TOUCH_GET_Y_MSG0": "get touch coordinate Y (return int)",
    "TOUCH_GET_POINT_MSG0": "get touch point Raw (return tuple)",
    "TOUCH_GET_POINT_VAR_MSG0": "get X",
    "TOUCH_GET_POINT_VAR_MSG1": "Y",
    "TOUCH_GET_POINT_VAR_MSG2": "of point",
    "ALS_GET_LUS_MSG0": "get lux (return int)",
    "WDT_INIT_MSG0": "Init WDT timeout",
    "WDT_INIT_MSG1": "milliseconds",
    "WDT_FEED_MSG0": "WDT feed",
    "RTC_INIT_MSG0": "Init RTC",
    "RTC_SET_UTC_TIME_MSG0": "Set UTC time",
    "RTC_SET_UTC_TIME_MSG1": "year",
    "RTC_SET_UTC_TIME_MSG2": "month",
    "RTC_SET_UTC_TIME_MSG3": "mday",
    "RTC_SET_UTC_TIME_MSG4": "hour",
    "RTC_SET_UTC_TIME_MSG5": "minute",
    "RTC_SET_UTC_TIME_MSG6": "second",
    "RTC_SET_UTC_TIME_MSG7": "microsecond",
    "RTC_GET_UTC_TIME_MSG0": "get UTC time (return tuple)",
    "RTC_GET_LOCAL_TIME_MSG0": "get local time (return tuple)",
    "RTC_GET_TIMEZONE_MSG0": "get timezone (return string)",
    "RTC_SET_TIMEZONE_MSG0": "Set timezone",
    "I2S_INIT_MSG0": "Init",
    "I2S_INIT_MSG1": "SCK",
    "I2S_INIT_MSG2": "WS",
    "I2S_INIT_MSG3": "SD",
    "I2S_INIT_MSG4": "mode",
    "I2S_INIT_MSG5": "bits",
    "I2S_INIT_MSG6": "format",
    "I2S_INIT_MSG7": "rate",
    "I2S_INIT_MSG8": "ibuf",
    "I2S_DEINIT_MSG0": "deinit",
    "I2S_READINTO_MSG0": "read into buf",
    "I2S_READINTO_MSG1": "(return length)",
    "I2S_WRITE_MSG0": "write buf",
    "SPI_INIT_MSG0": "Init",
    "SPI_INIT_MSG1": "baudrate",
    "SPI_INIT_MSG2": "SCK",
    "SPI_INIT_MSG3": "MISO",
    "SPI_INIT_MSG4": "MOSI",
    "SPI_INIT_MSG5": "firstbit",
    "SPI_INIT_MSG6": "mode",
    "SPI_DEINIT_MSG0": "deinit",
    "SPI_READINTO_MSG0": "read into buf",
    "SPI_READ_MSG0": "read nbytes",
    "SPI_READ_MSG1": "(return bytes)",
    "SPI_WRITE_MSG0": "write buf",
    "SPI_WRITE_READINTO_MSG0": "write buf",
    "SPI_WRITE_READINTO_MSG1": "read buf",
    "SDCARD_INIT_MSG0": "Init SDCard with",
    "SDCARD_INIT_MSG1": "slot",
    "SDCARD_INIT_MSG2": "SCK",
    "SDCARD_INIT_MSG3": "MISO",
    "SDCARD_INIT_MSG4": "MOSI",
    "SDCARD_INIT_MSG5": "CS",
    "SDCARD_INIT_MSG6": "freq",
    "SDCARD_CHDIR_MSG0": "SDCard change current dir",
    "SDCARD_GET_CWD_MSG0": "SDCard get current dir",
    "SDCARD_LISTDIR_MSG0": "SDCard listdir",
    "SDCARD_MKDIR_MSG0": "SDCard mkdir",
    "SDCARD_REMOVE_MSG0": "SDCard remove",
    "SDCARD_RMDIR_MSG0": "SDCard rmdir",
    "SDCARD_RENAME_MSG0": "SDCard rename",
    "SDCARD_RENAME_MSG1": "to",
    "SDCARD_IS_FILE_MSG0": "is file",
    "SDCARD_IS_DIRECTORY_MSG0": "is directory",
    "SDCARD_IS_EXIST_MSG0": "is exist in",
    "IR_INIT_MSG0": "Init IR",
    "IR_SEND_DATA_MSG0": "IR send addr",
    "IR_SEND_DATA_MSG1": "data",
    "ROTARY_INIT_MSG0": "Rotary init",
    "ROTARY_GET_STATUS_MSG0": "had rotated (return True or False)",
    "ROTARY_GET_VALUE_MSG0": "get value (return int)",
    "ROTARY_GET_INCREMENTS_MSG0": "get increments (return int)",
    "ROTARY_SET_VALUE_MSG0": "set value",
    "ROTARY_RESET_VALUE_MSG0": "reset value",
    "RFID_INIT_MSG0": "RFID init",
    "RFID_IS_NEW_CARD_PRESENT_MSG0": "is new card present (return True or False)",
    "RFID_READ_CARD_UID_MSG0": "read card uid (return bytearray)",
    "RFID_READ_MSG0": "read from addr",
    "RFID_READ_MSG1": "(return bytearray)",
    "RFID_WRITE_MSG0": "write buffer",
    "RFID_WRITE_MSG1": "to addr",
    "RFID_WRITE_RETURN_MSG0": "write buffer",
    "RFID_WRITE_RETURN_MSG1": "to addr",
    "RFID_WRITE_RETURN_MSG2": "(return int)",
    "RFID_CLOSE_MSG0": "close",
    "MATRIXKEYBOARD_INIT_MSG0": "Init keyboard",
    "MATRIXKEYBOARD_GET_KEY_MSG0": "get keyboard key value (return int)",
    "MATRIXKEYBOARD_GET_STRING_MSG0": "get keyboard key string (return string)",
    "MATRIXKEYBOARD_IS_PRESSED_MSG0": "has keyboard pressed (return True or False)",
    "MATRIXKEYBOARD_KEYCODE_MSG0": "KeyCode",
    "MATRIXKEYBOARD_CALLBACK_MSG0": "When keyboard was pressed",
    "MATRIXKEYBOARD_TICK_MSG0": "Keyboard update in loop",
    "HARDWARE_CAN_INIT_MSG0": "Init CAN with",
    "HARDWARE_CAN_INIT_MSG1": "mode",
    "HARDWARE_CAN_INIT_MSG2": "TX",
    "HARDWARE_CAN_INIT_MSG3": "RX",
    "HARDWARE_CAN_INIT_MSG4": "prescaler",
    "HARDWARE_CAN_INIT_MSG5": "sjw",
    "HARDWARE_CAN_INIT_MSG6": "bs1",
    "HARDWARE_CAN_INIT_MSG7": "bs2",
    "HARDWARE_CAN_INIT_MSG8": "triple sampling",
    "HARDWARE_CAN_DEINIT_MSG0": "CAN deinit",
    "HARDWARE_CAN_RESTART_MSG0": "CAN restart",
    "HARDWARE_CAN_GET_STATE_MSG0": "CAN get state (return int)",
    "HARDWARE_CAN_GET_INFO_MSG0": "CAN get error status information",
    "HARDWARE_CAN_ANY_MSG0": "CAN count of available (return True or False)",
    "HARDWARE_CAN_RECV_MESSAGE_MSG0": "CAN read message timeout",
    "HARDWARE_CAN_RECV_MESSAGE_MSG1": "(return tuple)",
    "HARDWARE_CAN_RECV_MESSAGE_INFO_MSG0": "CAN read message into",
    "HARDWARE_CAN_RECV_MESSAGE_INFO_MSG1": "timeout",
    "HARDWARE_CAN_SEND_DATA_MSG0": "CAN send",
    "HARDWARE_CAN_SEND_DATA_MSG1": "id",
    "HARDWARE_CAN_SEND_DATA_MSG2": "timeout",
    "HARDWARE_CAN_SEND_DATA_MSG3": "rtr",
    "HARDWARE_CAN_SEND_DATA_MSG4": "extframe",
    "MQTT_SET_CLIENT_MSG0": "Set MQTT client id",
    "MQTT_SET_CLIENT_MSG1": "server",
    "MQTT_SET_CLIENT_MSG2": "port",
    "MQTT_SET_CLIENT_MSG3": "user",
    "MQTT_SET_CLIENT_MSG4": "password",
    "MQTT_SET_CLIENT_MSG5": "keepalive (0 ~ 65535)",
    "MQTT_SET_CLIENT_MSG6": "SSL",
    "MQTT_SET_CLIENT_MSG7": "server hostname",
    "MQTT_SET_CLIENT_MSG8": "key file",
    "MQTT_SET_CLIENT_MSG9": "cert file",
    "MQTT_SET_LAST_WILL_MSG0": "Set last will topic",
    "MQTT_SET_LAST_WILL_MSG1": "msg",
    "MQTT_CONNECT_MSG0": "MQTT connect clean session",
    "MQTT_DISCONNECT_MSG0": "MQTT disconnect",
    "MQTT_RECONNECT_MSG0": "MQTT reconnect",
    "MQTT_PUBLISH_TOPIC_MSG0": "MQTT publish topic",
    "MQTT_PUBLISH_TOPIC_MSG1": "msg",
    "MQTT_PUBLISH_TOPIC_MSG2": "QoS",
    "MQTT_PUBLISH_TOPIC_MSG3": "(0 or 1)",
    "MQTT_WAIT_MSG_MSG0": "MQTT apply for messaging",
    "MQTT_SUBSCRIBE_MSG0": "MQTT subscribe",
    "MQTT_SUBSCRIBE_MSG1": "with topic",
    "MQTT_SUBSCRIBE_MSG2": "QoS",
    "MQTT_SUBSCRIBE_MSG3": "(0 or 1)",
    "MQTT_GET_TOPIC_MSG0": "get topic (return bytes)",
    "MQTT_GET_MSG_MSG0": "get msg (return bytes)",
    "HTTP_REQUEST_MSG0": "HTTP request",
    "HTTP_REQUEST_MSG1": "method",
    "HTTP_REQUEST_MSG2": "URL",
    "HTTP_REQUEST_MSG3": "headers",
    "HTTP_REQUEST_MSG4": "data",
    "HTTP_GET_STATUS_CODE_MSG0": "get status code (return int)",
    "HTTP_GET_REASON_MSG0": "get reason (return bytes)",
    "HTTP_GET_HEADERS_MSG0": "get headers (return map)",
    "HTTP_GET_CONTENT_MSG0": "get content (return bytes)",
    "HTTP_GET_TEXT_MSG0": "get text (return bytes)",
    "HTTP_GET_JSON_MSG0": "get json (return json object)",
    "HTTP_CLOSE_MSG0": "HTTP close",
    "UDP_SERVER_START_MSG0": "UDP server start",
    "UDP_SERVER_START_MSG1": "IP address",
    "UDP_SERVER_START_MSG2": "port",
    "UDP_SERVER_CLOSE_MSG0": "UDP server close",
    "UDP_SERVER_RECV_MSG0": "UDP server receive",
    "UDP_SERVER_RECV_MSG1": "bytes",
    "UDP_SERVER_READ_MSG0": "UDP server read",
    "UDP_SERVER_READ_MSG1": "bytes",
    "UDP_SERVER_RECVFROM_MSG0": "UDP server receive",
    "UDP_SERVER_RECVFROM_MSG1": "bytes (return tuple)",
    "UDP_SERVER_SEND_MSG0": "UDP server send",
    "UDP_SERVER_WRITE_MSG0": "UDP server write",
    "UDP_SERVER_SENDTO_MSG0": "UDP server send",
    "UDP_SERVER_SENDTO_MSG1": "to client",
    "UDP_SERVER_SET_SOCKOPT_MSG0": "UDP server set address reuse",
    "UDP_CLIENT_START_MSG0": "UDP client start",
    "UDP_CLIENT_START_MSG1": "IP address",
    "UDP_CLIENT_START_MSG2": "port",
    "UDP_CLIENT_CLOSE_MSG0": "UDP client close",
    "UDP_CLIENT_RECV_MSG0": "UDP client receive",
    "UDP_CLIENT_RECV_MSG1": "bytes",
    "UDP_CLIENT_READ_MSG0": "UDP client read",
    "UDP_CLIENT_READ_MSG1": "bytes",
    "UDP_CLIENT_SEND_MSG0": "UDP client send",
    "UDP_CLIENT_WRITE_MSG0": "UDP client write",
    "UDP_CLIENT_SET_SOCKOPT_MSG0": "UDP client set address reuse",
    "TCP_SERVER_START_MSG0": "TCP server start",
    "TCP_SERVER_START_MSG1": "IP address",
    "TCP_SERVER_START_MSG2": "port",
    "TCP_SERVER_START_MSG3": "listen",
    "TCP_SERVER_ACCEPT_MSG0": "TCP server accept client connect",
    "TCP_SERVER_CLOSE_MSG0": "TCP server close",
    "TCP_SERVER_CLOSE_CLIENT_MSG0": "Close",
    "TCP_SERVER_CLOSE_CLIENT_MSG1": "client connection",
    "TCP_SERVER_RECV_MSG0": "receive",
    "TCP_SERVER_RECV_MSG1": "bytes",
    "TCP_SERVER_READ_MSG0": "read",
    "TCP_SERVER_READ_MSG1": "bytes",
    "TCP_SERVER_SEND_MSG0": "send",
    "TCP_SERVER_WRITE_MSG0": "write",
    "TCP_SERVER_SET_SOCKOPT_MSG0": "TCP server set address reuse",
    "TCP_SERVER_SET_BLOCKING_MSG0": "TCP server set blocking mode",
    "TCP_SERVER_SET_TIMEOUT_MSG0": "TCP server set timeout",
    "TCP_SERVER_SET_TIMEOUT_MSG1": "(0 ~ 100)",
    "TCP_CLIENT_START_MSG0": "TCP client start",
    "TCP_CLIENT_START_MSG1": "IP address",
    "TCP_CLIENT_START_MSG2": "port",
    "TCP_CLIENT_CLOSE_MSG0": "TCP client close",
    "TCP_CLIENT_RECV_MSG0": "TCP client receive",
    "TCP_CLIENT_RECV_MSG1": "bytes",
    "TCP_CLIENT_READ_MSG0": "TCP client read",
    "TCP_CLIENT_READ_MSG1": "bytes",
    "TCP_CLIENT_READLINE_MSG0": "TCP client read line (return bytes)",
    "TCP_CLIENT_SEND_MSG0": "TCP client send",
    "TCP_CLIENT_WRITE_MSG0": "TCP client write",
    "TCP_CLIENT_SET_BLOCKING_MSG0": "TCP client set blocking mode",
    "TCP_CLIENT_SET_TIMEOUT_MSG0": "TCP client set timeout",
    "TCP_CLIENT_SET_TIMEOUT_MSG1": "(0 ~ 100)",
    "FILEIO_OPEN_MSG0": "open",
    "FILEIO_OPEN_MSG1": "path",
    "FILEIO_OPEN_MSG2": "mode",
    "FILEIO_CLOSE_MSG0": "close",
    "FILEIO_FLUSH_MSG0": "flush",
    "FILEIO_READ_MSG0": "read",
    "FILEIO_READ_MSG1": "bytes (return bytes)",
    "FILEIO_READ_INTO_MSG0": "read into buf",
    "FILEIO_READ_INTO_MSG1": "(return length)",
    "FILEIO_READ_LINE_MSG0": "read line (return bytes)",
    "FILEIO_READ_ALL_LINE_MSG0": "read all lines (return list)",
    "FILEIO_SEEK_MSG0": "set offset",
    "FILEIO_SEEK_MSG1": "whence",
    "FILEIO_TELL_MSG0": "get current position",
    "FILEIO_WRITE_MSG0": "write buf",
    "FILEIO_WRITE_OUTPUT_MSG0": "write buf",
    "FILEIO_WRITE_OUTPUT_MSG1": "(return length)",
    "FILEIO_WRITE_NEWLINE_MSG0": "write newline",
    "DUALKMETER_INIT_MSG0": "Init DualKmeter",
    "DUALKMETER_INIT_MSG1": "I2C address",
    "DUALKMETER_INIT_MSG2": "(0x11 ~ 0x20)",
    "DUALKMETER_GET_THERMOCOUPLE_TEMPERATURE_MSG0": "get",
    "DUALKMETER_GET_THERMOCOUPLE_TEMPERATURE_MSG1": "thermocouple temperature",
    "DUALKMETER_GET_THERMOCOUPLE_TEMPERATURE_MSG2": "(return float)",
    "DUALKMETER_GET_KMETER_TEMPERATURE_MSG0": "get",
    "DUALKMETER_GET_KMETER_TEMPERATURE_MSG1": "internal temperature",
    "DUALKMETER_GET_KMETER_TEMPERATURE_MSG2": "(return float)",
    "DUALKMETER_GET_KMETER_CHANNEL_MSG0": "get",
    "DUALKMETER_GET_KMETER_CHANNEL_MSG1": "selected kmeter channel (return 0 or 1)",
    "DUALKMETER_SET_KMETER_CHANNEL_MSG0": "Set",
    "DUALKMETER_SET_KMETER_CHANNEL_MSG1": "kmeter channel",
    "DUALKMETER_IS_READY_MSG0": "is ready temperature measurement",
    "DUALKMETER_GET_THERMOCOUPLE_TEMPERATURE_STRING_MSG0": "get",
    "DUALKMETER_GET_THERMOCOUPLE_TEMPERATURE_STRING_MSG1": "thermocouple temperature",
    "DUALKMETER_GET_THERMOCOUPLE_TEMPERATURE_STRING_MSG2": "(return string)",
    "DUALKMETER_GET_KMETER_TEMPERATURE_STRING_MSG0": "get",
    "DUALKMETER_GET_KMETER_TEMPERATURE_STRING_MSG1": "internal temperature",
    "DUALKMETER_GET_KMETER_TEMPERATURE_STRING_MSG2": "(return string)",
    "DUALKMETER_GET_FW_VER_MSG0": "get",
    "DUALKMETER_GET_FW_VER_MSG1": "firmware version",
    "DUALKMETER_SET_ADDRESS_MSG0": "Set",
    "DUALKMETER_SET_ADDRESS_MSG1": "I2C address",
    "DUALKMETER_SET_ADDRESS_MSG2": "(0x11 ~ 0x20)",
    "RELAY4_INIT_MSG0": "Init 4Relay",
    "RELAY4_INIT_MSG1": "I2C address",
    "RELAY4_INIT_MSG2": "(0x1 ~ 0x7f)",
    "RELAY4_GET_STATUS_MSG0": "get",
    "RELAY4_GET_STATUS_MSG1": "relay",
    "RELAY4_GET_STATUS_MSG2": "status (return 0 or 1)",
    "RELAY4_SET_STATUS_MSG0": "Set",
    "RELAY4_SET_STATUS_MSG1": "relay",
    "RELAY4_SET_STATUS_MSG2": "state",
    "RELAY4_SET_ALL_STATUS_MSG0": "Set",
    "RELAY4_SET_ALL_STATUS_MSG1": "all relay state",
    "RELAY4_GET_ADC_8BIT_VOLTAGE_MSG0": "get",
    "RELAY4_GET_ADC_8BIT_VOLTAGE_MSG1": "ADC 8bit voltage value (V, return 0 ~ 26)",
    "RELAY4_GET_ADC_8BIT_RAW_MSG0": "get",
    "RELAY4_GET_ADC_8BIT_RAW_MSG1": "ADC 8bit raw value (return 0 ~ 255)",
    "RELAY4_GET_ADC_12BIT_VOLTAGE_MSG0": "get",
    "RELAY4_GET_ADC_12BIT_VOLTAGE_MSG1": "ADC 12bit voltage value (V, return 0 ~ 26)",
    "RELAY4_GET_ADC_12BIT_RAW_MSG0": "get",
    "RELAY4_GET_ADC_12BIT_RAW_MSG1": "ADC 12bit raw value (return 0 ~ 4095)",
    "RELAY4_SET_ADDRESS_MSG0": "Set",
    "RELAY4_SET_ADDRESS_MSG1": "I2C address",
    "RELAY4_SET_ADDRESS_MSG2": "(0x1 ~ 0x7f)",
    "ENCODER4MOTOR_INIT_MSG0": "Init 4EncoderMotor",
    "ENCODER4MOTOR_INIT_MSG1": "I2C address",
    "ENCODER4MOTOR_INIT_MSG2": "(0x01 ~ 0x7f)",
    "ENCODER4MOTOR_SET_MOTOR_MODE_MSG0": "Set",
    "ENCODER4MOTOR_SET_MOTOR_MODE_MSG1": "motor",
    "ENCODER4MOTOR_SET_MOTOR_MODE_MSG2": "mode",
    "ENCODER4MOTOR_SET_ALL_MOTORS_MODE_MSG0": "Set",
    "ENCODER4MOTOR_SET_ALL_MOTORS_MODE_MSG1": "all motors mode",
    "ENCODER4MOTOR_GET_MOTOR_ENCODER_VALUE_MSG0": "get",
    "ENCODER4MOTOR_GET_MOTOR_ENCODER_VALUE_MSG1": "motor",
    "ENCODER4MOTOR_GET_MOTOR_ENCODER_VALUE_MSG2": "encoder value (return int)",
    "ENCODER4MOTOR_SET_MOTOR_ENCODER_VALUE_MSG0": "Set",
    "ENCODER4MOTOR_SET_MOTOR_ENCODER_VALUE_MSG1": "motor",
    "ENCODER4MOTOR_SET_MOTOR_ENCODER_VALUE_MSG2": "encoder value",
    "ENCODER4MOTOR_GET_ENCODER_MODE_DIRECTION_MSG0": "get",
    "ENCODER4MOTOR_GET_ENCODER_MODE_DIRECTION_MSG1": "encoder mode direction (return int)",
    "ENCODER4MOTOR_SET_ENCODER_MODE_DIRECTION_MSG0": "Set",
    "ENCODER4MOTOR_SET_ENCODER_MODE_DIRECTION_MSG1": "encoder mode direction",
    "ENCODER4MOTOR_SET_ADDRESS_MSG0": "Set",
    "ENCODER4MOTOR_SET_ADDRESS_MSG1": "I2C address",
    "ENCODER4MOTOR_SET_ADDRESS_MSG2": "(0x01 ~ 0x7f)",
    "ENCODER4MOTOR_GET_VIN_CURRENT_FLOAT_VALUE_MSG0": "get",
    "ENCODER4MOTOR_GET_VIN_CURRENT_FLOAT_VALUE_MSG1": "Vin current value (A, return float)",
    "ENCODER4MOTOR_GET_VIN_CURRENT_INT_VALUE_MSG0": "get",
    "ENCODER4MOTOR_GET_VIN_CURRENT_INT_VALUE_MSG1": "Vin current value (mA, return int)",
    "ENCODER4MOTOR_GET_VIN_ADC_8BIT_RAW_VALUE_MSG0": "get",
    "ENCODER4MOTOR_GET_VIN_ADC_8BIT_RAW_VALUE_MSG1": "Vin adc 8bit raw value (return int)",
    "ENCODER4MOTOR_GET_VIN_ADC_12BIT_RAW_VALUE_MSG0": "get",
    "ENCODER4MOTOR_GET_VIN_ADC_12BIT_RAW_VALUE_MSG1": "Vin adc 12bit raw value (return int)",
    "ENCODER4MOTOR_GET_VIN_VOLTAGE_MSG0": "get",
    "ENCODER4MOTOR_GET_VIN_VOLTAGE_MSG1": "Vin voltage value (return int)",
    "ENCODER4MOTOR_GET_DEVICE_SPEC_DETAIL_MSG0": "get",
    "ENCODER4MOTOR_GET_DEVICE_SPEC_DETAIL_MSG1": "spec detail (return int)",
    "ENCODER4MOTOR_SET_MOTOR_PWM_DUTYCYCLE_MSG0": "Set",
    "ENCODER4MOTOR_SET_MOTOR_PWM_DUTYCYCLE_MSG1": "motor",
    "ENCODER4MOTOR_SET_MOTOR_PWM_DUTYCYCLE_MSG2": "PWM dutycycle",
    "ENCODER4MOTOR_SET_MOTOR_PWM_DUTYCYCLE_MSG3": "(-127 ~ 127)",
    "ENCODER4MOTOR_SET_POSITION_ENCODER_VALUE_MSG0": "Set",
    "ENCODER4MOTOR_SET_POSITION_ENCODER_VALUE_MSG1": "motor",
    "ENCODER4MOTOR_SET_POSITION_ENCODER_VALUE_MSG2": "position encoder value",
    "ENCODER4MOTOR_SET_POSITION_MAX_SPEED_VALUE_MSG0": "Set",
    "ENCODER4MOTOR_SET_POSITION_MAX_SPEED_VALUE_MSG1": "motor",
    "ENCODER4MOTOR_SET_POSITION_MAX_SPEED_VALUE_MSG2": "position maximum speed value",
    "ENCODER4MOTOR_SET_POSITION_MAX_SPEED_VALUE_MSG3": "(-127 ~ 127)",
    "ENCODER4MOTOR_SET_POSITION_PID_VALUE_MSG0": "Set",
    "ENCODER4MOTOR_SET_POSITION_PID_VALUE_MSG1": "motor",
    "ENCODER4MOTOR_SET_POSITION_PID_VALUE_MSG2": "position control P",
    "ENCODER4MOTOR_SET_POSITION_PID_VALUE_MSG3": "I",
    "ENCODER4MOTOR_SET_POSITION_PID_VALUE_MSG4": "D",
    "ENCODER4MOTOR_SET_POSITION_PID_VALUE_MSG5": "value",
    "ENCODER4MOTOR_GET_POSITION_PID_VALUE_MSG0": "get",
    "ENCODER4MOTOR_GET_POSITION_PID_VALUE_MSG1": "motor",
    "ENCODER4MOTOR_GET_POSITION_PID_VALUE_MSG2": "position control PID value (return list)",
    "ENCODER4MOTOR_GET_SPEED_PID_VALUE_MSG0": "get",
    "ENCODER4MOTOR_GET_SPEED_PID_VALUE_MSG1": "motor",
    "ENCODER4MOTOR_GET_SPEED_PID_VALUE_MSG2": "speed control PID value (return int)",
    "ENCODER4MOTOR_GET_MOTOR_SPEED_VALUE_MSG0": "get",
    "ENCODER4MOTOR_GET_MOTOR_SPEED_VALUE_MSG1": "motor",
    "ENCODER4MOTOR_GET_MOTOR_SPEED_VALUE_MSG2": "speed value (return int)",
    "ENCODER4MOTOR_SET_SPEED_PID_VALUE_MSG0": "Set",
    "ENCODER4MOTOR_SET_SPEED_PID_VALUE_MSG1": "motor",
    "ENCODER4MOTOR_SET_SPEED_PID_VALUE_MSG2": "speed control P",
    "ENCODER4MOTOR_SET_SPEED_PID_VALUE_MSG3": "I",
    "ENCODER4MOTOR_SET_SPEED_PID_VALUE_MSG4": "D",
    "ENCODER4MOTOR_SET_SPEED_PID_VALUE_MSG5": "value",
    "ENCODER4MOTOR_SET_SPEED_POINT_VALUE_MSG0": "Set",
    "ENCODER4MOTOR_SET_SPEED_POINT_VALUE_MSG1": "motor",
    "ENCODER4MOTOR_SET_SPEED_POINT_VALUE_MSG2": "speed point value",
    "ENCODER4MOTOR_SET_SPEED_POINT_VALUE_MSG3": "(-127 ~ 127)",
    "PPS_INIT_MSG0": "Init PPS",
    "PPS_INIT_MSG1": "I2C address",
    "PPS_INIT_MSG2": "(0x01 ~ 0x7f)",
    "PPS_SET_OUTPUT_MSG0": "Set the output mode of",
    "PPS_SET_OUTPUT_MSG1": "to",
    "PPS_ENABLE_OUTPUT_MSG0": "Enable the output of",
    "PPS_DISABLE_OUTPUT_MSG0": "Disable the output of",
    "PPS_SET_OUTPUT_VOLTAGE_MSG0": "Set the output voltage of",
    "PPS_SET_OUTPUT_VOLTAGE_MSG1": "to",
    "PPS_SET_OUTPUT_VOLTAGE_MSG2": "(V, 0.0 ~ 30.0)",
    "PPS_SET_OUTPUT_CURRENT_MSG0": "Set the output current of",
    "PPS_SET_OUTPUT_CURRENT_MSG1": "to",
    "PPS_SET_OUTPUT_CURRENT_MSG2": "(A, 0.0 ~ 5.0)",
    "PPS_READ_PSU_RUNNING_MODE_MSG0": "read the PSU running mode of",
    "PPS_READ_PSU_RUNNING_MODE_MSG1": "(return int)",
    "PPS_READ_OUTPUT_CURRENT_MSG0": "read the output current of",
    "PPS_READ_OUTPUT_CURRENT_MSG1": "(return float)",
    "PPS_READ_OUTPUT_VOLTAGE_MSG0": "read the output voltage of",
    "PPS_READ_OUTPUT_VOLTAGE_MSG1": "(return float)",
    "PPS_READ_INPUT_VOLTAGE_MSG0": "read the input voltage of",
    "PPS_READ_INPUT_VOLTAGE_MSG1": "(return float)",
    "PPS_READ_DATA_UPDATE_FLAG_MSG0": "read the data update flag of",
    "PPS_READ_DATA_UPDATE_FLAG_MSG1": "(return int)",
    "PPS_READ_MCU_TEMPERATURE_MSG0": "read the MCU temperature of",
    "PPS_READ_MCU_TEMPERATURE_MSG1": "(return float)",
    "PPS_READ_MODULE_ID_MSG0": "read the module ID of",
    "PPS_READ_MODULE_ID_MSG1": "(return int)",
    "PPS_READ_UID_MSG0": "read the unique identifier (UID) of",
    "PPS_READ_UID_MSG1": "(return bytearray)",
    "PPS_GET_I2C_ADDRESS_MSG0": "get the current I2C address of",
    "PPS_GET_I2C_ADDRESS_MSG1": "(return int)",
    "PPS_SET_I2C_ADDRESS_MSG0": "Set",
    "PPS_SET_I2C_ADDRESS_MSG1": "I2C address",
    "PPS_SET_I2C_ADDRESS_MSG2": "(0x1 ~ 0x7f)",
    "MODULE_DISPLAY_INIT_MSG0": "Module Display config",
    "MODULE_DISPLAY_INIT_MSG1": "size",
    "MODULE_DISPLAY_INIT_MSG2": "refresh rate",
    "MODULE_DISPLAY_INIT_MSG3": "scale",
    "MODULE_DISPLAY_INIT_MSG4": "pixel clock",
    "MODULE_DISPLAY_CONFIG_SIZE_MSG0": "width",
    "MODULE_DISPLAY_CONFIG_SIZE_MSG1": "height",
    "MODULE_DISPLAY_CONFIG_SCALE_MSG0": "width",
    "MODULE_DISPLAY_CONFIG_SCALE_MSG1": "height",
    "MODULE_RCA_INIT_MSG0": "Module RCA config",
    "MODULE_RCA_INIT_MSG1": "size",
    "MODULE_RCA_INIT_MSG2": "output",
    "MODULE_RCA_INIT_MSG3": "signal type",
    "MODULE_RCA_INIT_MSG4": "use psram",
    "MODULE_RCA_INIT_MSG5": "pin dac",
    "MODULE_RCA_INIT_MSG6": "output level",
    "MODULE_RCA_CONFIG_SIZE_MSG0": "width",
    "MODULE_RCA_CONFIG_SIZE_MSG1": "height",
    "MODULE_RCA_CONFIG_OUTPUT_MSG0": "width",
    "MODULE_RCA_CONFIG_OUTPUT_MSG1": "height",
    "ATOM_SOCKET_INIT_MSG0": "Init ATOM Socket",
    "ATOM_SOCKET_INIT_MSG1": "TX pin",
    "ATOM_SOCKET_INIT_MSG2": "RX pin",
    "ATOM_SOCKET_INIT_MSG3": "relay pin",
    "ATOM_SOCKET_GET_DATA_MSG0": "get data timeout",
    "ATOM_SOCKET_GET_DATA_MSG1": "ms from ATOM Socket (return tuple)",
    "ATOM_SOCKET_GET_VOLTAGE_MSG0": "get voltage from ATOM Socket (V, return float)",
    "ATOM_SOCKET_GET_CURRENT_MSG0": "get current from ATOM Socket (A, return float)",
    "ATOM_SOCKET_GET_POWER_MSG0": "get power from ATOM Socket (W, return float)",
    "ATOM_SOCKET_GET_PF_MSG0": "get power factor from ATOM Socket (return int)",
    "ATOM_SOCKET_GET_INSPECTING_POWER_MSG0": "calculate the inspecting power of ATOM Socket (W, return float)",
    "ATOM_SOCKET_GET_POWER_FACTOR_MSG0": "calculate the power factor of ATOM Socket (return float)",
    "ATOM_SOCKET_GET_KWH_MSG0": "get the accumulated energy measurement in KWh from ATOM Socket (return float)",
    "ATOM_SOCKET_SET_RELAY_MSG0": "Set the relay status of ATOM Socket to",
    "ATOM_SOCKET_START_RECEIVE_DATA_MSG0": "Start receiving data from ATOM Socket",
    "ATOM_SOCKET_RECEIVE_DATA_EVENT_MSG0": "When ATOM Socket receive data",
    "ATOM_SOCKET_RECEIVE_DATA_EVENT_MSG1": "voltage",
    "ATOM_SOCKET_RECEIVE_DATA_EVENT_MSG2": "current",
    "ATOM_SOCKET_RECEIVE_DATA_EVENT_MSG3": "power",
    "ATOM_SOCKET_RECEIVE_DATA_EVENT_MSG4": "KWh",
    "ATOM_SOCKET_STOP_RECEIVE_DATA_MSG0": "Stop receiving data from ATOM Socket",
    "UNIT_ENV_INIT_MSG0": "初期化 %1",
    "UNIT_ENVPRO_INIT_MSG0": "初期化",
    "UNIT_ENVPRO_GET_GAS_RESISTANCE_MSG0": "取得",
    "UNIT_ENVPRO_GET_GAS_RESISTANCE_MSG1": "ガス抵抗(kΩ:float)",
    "UNIT_ENVPRO_GET_ALTITUDE_MSG0": "取得",
    "UNIT_ENVPRO_GET_ALTITUDE_MSG1": "標高(m:float)",
    "UNIT_ENVPRO_GET_IIR_FILTER_COEFFICIENT_MSG0": "取得",
    "UNIT_ENVPRO_GET_IIR_FILTER_COEFFICIENT_MSG1": "IIRフィルタ係数(int)",
    "UNIT_ENVPRO_GET_OVER_SAMPLING_RATE_MSG0": "取得",
    "UNIT_ENVPRO_GET_OVER_SAMPLING_RATE_MSG1": "oversampling rate (return int)",
    "UNIT_ENVPRO_SET_IIR_FILTER_COEFFICIENT_MSG0": "設定 IIRフィルタ係数",
    "UNIT_ENVPRO_SET_IIR_FILTER_COEFFICIENT_MSG1": "(0 ~ 127)",
    "UNIT_ENVPRO_SET_OVER_SAMPLING_RATE_MSG0": "設定",
    "UNIT_ENVPRO_SET_OVER_SAMPLING_RATE_MSG1": "オーバーサンプリングレート",
    "UNIT_ENVPRO_SET_OVER_SAMPLING_RATE_MSG2": "(1 ~ 16)",
    "UNIT_PAHUB_INIT_MSG0": "Init",
    "UNIT_PAHUB_SELECT_CHANNEL_MSG0": "select channel",
    "UNIT_PAHUB_RELEASE_CHANNEL_MSG0": "release channel",
    "UNIT_PAHUB_SCAN_MSG0": "scan",
    "UNIT_PAHUB_START_MSG0": "start",
    "UNIT_PAHUB_STOP_MSG0": "stop",
    "UNIT_PAHUB_READINTO_MSG0": "readinto",
    "UNIT_PAHUB_READINTO_MSG1": "NACK",
    "UNIT_PAHUB_WRITE_RETURN_MSG0": "write",
    "UNIT_PAHUB_WRITE_MSG0": "write",
    "UNIT_PAHUB_READFROM_MSG0": "read from",
    "UNIT_PAHUB_READFROM_MSG1": "addr",
    "UNIT_PAHUB_READFROM_MSG2": "nbytes",
    "UNIT_PAHUB_READFROM_MSG3": "stop",
    "UNIT_PAHUB_READFROM_INTO_MSG0": "read from",
    "UNIT_PAHUB_READFROM_INTO_MSG1": "addr",
    "UNIT_PAHUB_READFROM_INTO_MSG2": "into",
    "UNIT_PAHUB_READFROM_INTO_MSG3": "stop",
    "UNIT_PAHUB_WRITETO_MSG0": "write",
    "UNIT_PAHUB_WRITETO_MSG1": "addr",
    "UNIT_PAHUB_WRITETO_MSG2": "stop",
    "UNIT_PAHUB_WRITETO_RETURN_MSG0": "write",
    "UNIT_PAHUB_WRITETO_RETURN_MSG1": "addr",
    "UNIT_PAHUB_WRITETO_RETURN_MSG2": "stop",
    "UNIT_PAHUB_READFROM_MEM_MSG0": "read from addr",
    "UNIT_PAHUB_READFROM_MEM_MSG1": "mem addr",
    "UNIT_PAHUB_READFROM_MEM_MSG2": "nbytes",
    "UNIT_PAHUB_READFROM_MEM_INTO_MSG0": "read from addr",
    "UNIT_PAHUB_READFROM_MEM_INTO_MSG1": "mem addr",
    "UNIT_PAHUB_READFROM_MEM_INTO_MSG2": "into buf",
    "UNIT_PAHUB_WRITETO_MEM_MSG0": "write buf",
    "UNIT_PAHUB_WRITETO_MEM_MSG1": "to addr",
    "UNIT_PAHUB_WRITETO_MEM_MSG2": "mem addr",
    "UNIT_COLOR_INIT_MSG0": "初期化",
    "UNIT_COLOR_GET_LUX_MSG0": "",
    "UNIT_COLOR_GET_LUX_MSG1": "LUX値",
    "UNIT_COLOR_GET_TEMPERATURE_MSG0": "",
    "UNIT_COLOR_GET_TEMPERATURE_MSG1": "色温度",
    "UNIT_COLOR_GET_RGB_TYPE_MSG0": "",
    "UNIT_COLOR_GET_RGB_TYPE_MSG1": "RGB(バイト表現)",
    "UNIT_COLOR_GET_COLOR_MSG0": "",
    "UNIT_COLOR_GET_COLOR_MSG1": "色",
    "UNIT_COLOR_GET_COLOR565_MSG0": "",
    "UNIT_COLOR_GET_COLOR565_MSG1": "色(565形式)",
    "UNIT_COLOR_GET_COLOR_RAW_MSG0": "",
    "UNIT_COLOR_GET_COLOR_RAW_MSG1": "色(raw形式)",
    "UNIT_COLOR_GET_ACTIVE_MSG0": "get",
    "UNIT_COLOR_GET_ACTIVE_MSG1": "active",
    "UNIT_COLOR_SET_ACTIVE_MSG0": "active",
    "UNIT_COLOR_GET_INTEGRATION_TIME_MSG0": "get",
    "UNIT_COLOR_GET_INTEGRATION_TIME_MSG1": "integration time",
    "UNIT_COLOR_SET_INTEGRATION_TIME_MSG0": "integration time",
    "UNIT_COLOR_GET_GAIN_MSG0": "",
    "UNIT_COLOR_GET_GAIN_MSG1": "ゲイン",
    "UNIT_COLOR_SET_GAIN_MSG0": "ゲイン",
    "UNIT_COLOR_GET_CYCLES_MSG0": "get",
    "UNIT_COLOR_GET_CYCLES_MSG1": "cycles",
    "UNIT_COLOR_SET_CYCLES_MSG0": "cycles",
    "UNIT_COLOR_GET_MIN_VALUE_MSG0": "",
    "UNIT_COLOR_GET_MIN_VALUE_MSG1": "最小値",
    "UNIT_COLOR_SET_MIN_VALUE_MSG0": "最小値",
    "UNIT_COLOR_SET_MIN_VALUE_MSG1": "(0 ~ 65535)",
    "UNIT_COLOR_GET_MAX_VALUE_MSG0": "",
    "UNIT_COLOR_GET_MAX_VALUE_MSG1": "最大値",
    "UNIT_COLOR_SET_MAX_VALUE_MSG0": "最大値",
    "UNIT_COLOR_SET_MAX_VALUE_MSG1": "(0 ~ 65535)",
    "UNIT_COLOR_GET_GLASS_ATTENUATION_MSG0": "",
    "UNIT_COLOR_GET_GLASS_ATTENUATION_MSG1": "ガラス減衰",
    "UNIT_COLOR_SET_GLASS_ATTENUATION_MSG0": "ガラス減衰",
    "UNIT_COLOR_GET_INTERRUPT_MSG0": "get",
    "UNIT_COLOR_GET_INTERRUPT_MSG1": "interrupt",
    "UNIT_COLOR_CLEAR_INTERRUPT_MSG0": "clear interrupt",
    "UNIT_COLOR_GET_COLOR_R_MSG0": "",
    "UNIT_COLOR_GET_COLOR_R_MSG1": "R(int)",
    "UNIT_COLOR_GET_COLOR_G_MSG0": "",
    "UNIT_COLOR_GET_COLOR_G_MSG1": "G(int)",
    "UNIT_COLOR_GET_COLOR_B_MSG0": "",
    "UNIT_COLOR_GET_COLOR_B_MSG1": "B(int)",
    "UNIT_COLOR_GET_COLOR_H_MSG0": "",
    "UNIT_COLOR_GET_COLOR_H_MSG1": "Hue(int)",
    "UNIT_COLOR_GET_COLOR_S_MSG0": "",
    "UNIT_COLOR_GET_COLOR_S_MSG1": "Saturation(float)",
    "UNIT_COLOR_GET_COLOR_V_MSG0": "",
    "UNIT_COLOR_GET_COLOR_V_MSG1": "Value(float)",
    "UNIT_TOF_INIT_MSG0": "%1 初期化",
    "UNIT_TOF_GET_DATA_STATUS_MSG0": "%1 データ取得可能状態(True or False)",
    "UNIT_TOF_GET_DISTANCE_MSG0": "%1 距離(cm:float)",
    "UNIT_TOF_GET_RANGE_MSG0": "%1 範囲(mm:int)",
    "UNIT_TOF_GET_CONTINUOUS_MODE_MSG0": "%1 連続モードか(True or False)",
    "UNIT_TOF_GET_MEASUREMENT_TIMING_BUDGET_MSG0": "%1 measurement timing budget (return int)",
    "UNIT_TOF_SET_MEASUREMENT_TIMING_BUDGET_MSG0": "%1 measurement timing budget %2 に設定",
    "UNIT_TOF_SET_ADDRESS_MSG0": "%1 アドレスを %2 に設定",
    "UNIT_TOF_GET_SIGNAL_RATE_LIMIT_MSG0": "get %1 signal rate limit (return float)",
    "UNIT_TOF_SET_SIGNAL_RATE_LIMIT_MSG0": "%1 signal rate limit %2 MCPS (0.0 ~ 511.99)",
    "UNIT_TOF_START_CONTINUOUS_MSG0": "%1 連続モードを開始",
    "UNIT_TOF_STOP_CONTINUOUS_MSG0": "%1 連続モードを停止",
    "UNIT_ADC_INIT_MSG0": "Init %1",
    "UNIT_ADC_GET_VALUE_MSG0": "get %1 value (return int)",
    "UNIT_ADC_GET_VOLTAGE_MSG0": "get %1 voltage (return float)",
    "UNIT_ADC_GET_RAW_VALUE_MSG0": "get %1 raw value (return int)",
    "UNIT_ADC_GET_OPERATING_MODE_MSG0": "get %1 operating mode (return 0 or 1)",
    "UNIT_ADC_SET_OPERATING_MODE_MSG0": "%1 operating mode %2",
    "UNIT_ADC_GET_DATA_RATE_MSG0": "get %1 data rate (return int)",
    "UNIT_ADC_SET_DATA_RATE_MSG0": "%1 data rate %2",
    "UNIT_ADC_GET_GAIN_MSG0": "get %1 gain (return int)",
    "UNIT_ADC_SET_GAIN_MSG0": "%1 gain %2",
    "UNIT_ADCV11_INIT_MSG0": "Init %1",
    "UNIT_ADCV11_GET_VOLTAGE_MSG0": "get %1 voltage (return float)",
    "UNIT_ADCV11_GET_ADC_RAW_VALUE_MSG0": "get %1 16 bit ADC raw value (return int)",
    "UNIT_ADCV11_SET_GAIN_MSG0": "%1 set gain x%2",
    "UNIT_ADCV11_SET_SAMPLE_RATE_MSG0": "%1 set sample rate %2",
    "UNIT_ADCV11_SET_MODE_MSG0": "%1 set mode %2",
    "UNIT_ADCV11_START_SINGLE_CONVERSION_MSG0": "%1 start single conversion",
    "UNIT_DAC_INIT_MSG0": "Init %1",
    "UNIT_DAC_GET_VALUE_MSG0": "get %1 DAC value (return int)",
    "UNIT_DAC_SET_VALUE_MSG0": "%1 DAC value %2 (0 ~ 65535)",
    "UNIT_DAC_GET_VOLTAGE_MSG0": "get %1 voltage (return float)",
    "UNIT_DAC_SET_VOLTAGE_MSG0": "%1 voltage %2 (0 ~ 3.3)",
    "UNIT_DAC_GET_RAW_VALUE_MSG0": "get %1 raw value (return int)",
    "UNIT_DAC_SET_RAW_VALUE_MSG0": "%1 raw value %2 (0 ~ 4095)",
    "UNIT_DAC_GET_NORMALIZED_VALUE_MSG0": "get %1 normalized value (return 0.0 ~ 1.0)",
    "UNIT_DAC_SET_NORMALIZED_VALUE_MSG0": "%1 normalized value %2 (0.0 ~ 1.0)",
    "UNIT_DAC_SAVE_TO_EEPROM_MSG0": "%1 save to eeprom",
    "UNIT_EXTIO_INIT_MSG0": "Init",
    "UNIT_EXTIO_SET_PORT_MODE_MSG0": "set port mode",
    "UNIT_EXTIO_DIGIT_READ_PORT_MSG0": "get",
    "UNIT_EXTIO_DIGIT_READ_PORT_MSG1": "port digit value",
    "UNIT_EXTIO_DIGIT_WRITE_PORT_MSG0": "set digit value",
    "UNIT_EXTIO_DIGIT_WRITE_PORT_MSG1": "(0 ~ 255)",
    "UNIT_EXTIO_SET_PIN_MODE_MSG0": "set",
    "UNIT_EXTIO_SET_PIN_MODE_MSG1": "mode",
    "UNIT_EXTIO_DIGIT_WRITE_MSG0": "set",
    "UNIT_EXTIO_DIGIT_WRITE_MSG1": "value",
    "UNIT_EXTIO_DIGIT_WRITE_MSG2": "(0 or 1)",
    "UNIT_EXTIO_DIGIT_READ_MSG0": "get",
    "UNIT_EXTIO_DIGIT_READ_MSG1": "value",
    "UNIT_EXTIO2_INIT_MSG0": "Init",
    "UNIT_EXTIO2_GET_CONFIG_MODE_MSG0": "get",
    "UNIT_EXTIO2_GET_CONFIG_MODE_MSG1": "mode (return 0~4)",
    "UNIT_EXTIO2_READ_INPUT_PIN_MSG0": "get",
    "UNIT_EXTIO2_READ_INPUT_PIN_MSG1": "value (return 0 or 1)",
    "UNIT_EXTIO2_READ_ADC8_PIN_MSG0": "get",
    "UNIT_EXTIO2_READ_ADC8_PIN_MSG1": "adc 8b (return 0~255)",
    "UNIT_EXTIO2_READ_ADC12_PIN_MSG0": "get",
    "UNIT_EXTIO2_READ_ADC12_PIN_MSG1": "adc 12b (return 0~4095)",
    "UNIT_EXTIO2_READ_SERVO_ANGLE_MSG0": "get",
    "UNIT_EXTIO2_READ_SERVO_ANGLE_MSG1": "servo angle (return 0~180)",
    "UNIT_EXTIO2_READ_SERVO_PULSE_MSG0": "get",
    "UNIT_EXTIO2_READ_SERVO_PULSE_MSG1": "servo pulse (return 500~2500)",
    "UNIT_EXTIO2_READ_RGB_LED_MSG0": "get",
    "UNIT_EXTIO2_READ_RGB_LED_MSG1": "RGB888 (return 0~0xfffff)",
    "UNIT_EXTIO2_READ_FW_VERSION_MSG0": "get",
    "UNIT_EXTIO2_READ_FW_VERSION_MSG1": "firmware version",
    "UNIT_EXTIO2_GET_ADDRESS_MSG0": "get",
    "UNIT_EXTIO2_GET_ADDRESS_MSG1": "I2C address (return 0x01~0x7f)",
    "UNIT_EXTIO2_SET_CONFIG_MODE_MSG0": "set",
    "UNIT_EXTIO2_SET_CONFIG_MODE_MSG1": "mode",
    "UNIT_EXTIO2_SET_OUTPUT_PIN_MSG0": "set",
    "UNIT_EXTIO2_SET_OUTPUT_PIN_MSG1": "value",
    "UNIT_EXTIO2_SET_OUTPUT_PIN_INPUT_MSG0": "set",
    "UNIT_EXTIO2_SET_OUTPUT_PIN_INPUT_MSG1": "value",
    "UNIT_EXTIO2_SET_OUTPUT_PIN_INPUT_MSG2": "(0 or 1)",
    "UNIT_EXTIO2_SET_SERVO_ANGLE_MSG0": "set",
    "UNIT_EXTIO2_SET_SERVO_ANGLE_MSG1": "servo angle",
    "UNIT_EXTIO2_SET_SERVO_ANGLE_MSG2": "(0 ~ 180)",
    "UNIT_EXTIO2_SET_SERVO_PULSE_MSG0": "set",
    "UNIT_EXTIO2_SET_SERVO_PULSE_MSG1": "servo pulse",
    "UNIT_EXTIO2_SET_SERVO_PULSE_MSG2": "(500 ~ 2500)",
    "UNIT_EXTIO2_SET_RGB_LED_MSG0": "set",
    "UNIT_EXTIO2_SET_RGB_LED_MSG1": "RGB",
    "UNIT_EXTIO2_SET_ADDRESS_MSG0": "set I2C address",
    "UNIT_EXTIO2_SET_ADDRESS_MSG1": "(0x01 ~ 0x7f)",
    "UNIT_EARTH_INIT_MSG0": "%1 初期化",
    "UNIT_EARTH_SET_CALIBRATE_MSG0": "%1 キャリブレーション最小値(0 ~ 3300) %2 最大値(0 ~ 3300) %3",
    "UNIT_EARTH_GET_HUMIDITY_MSG0": "%1 湿度(0.0~1.0)",
    "UNIT_EARTH_GET_ANALOG_VALUE_MSG0": "%1 アナログ値(0~65535)",
    "UNIT_EARTH_GET_VOLTAGE_MV_MSG0": "%1 電圧(mV:0~3300)",
    "UNIT_EARTH_GET_DIGITAL_VALUE_MSG0": "%1 デジタル値(0 or 1)",
    "UNIT_ANGLE_INIT_MSG0": "%1 初期化",
    "UNIT_ANGLE_GET_VOLTAGE_MSG0": "電圧(float) %1 を取得",
    "UNIT_ANGLE_GET_ANALOG_MSG0": "アナログ値 %1 (0~65535の範囲)を取得",
    "UNIT_RGB_INIT_MSG0": "%1 の個数を %2 で初期化",
    "UNIT_RGB_SET_INDEX_COLOR_MSG0": "%1 %2 番目のRGB LEDを色 %3 で設定",
    "UNIT_RGB_SET_FILL_COLOR_MSG0": "%1 RGB LEDを全て色 %2 で設定",
    "UNIT_RGB_SET_BRIGHTNESS_MSG0": "%1 set brightness %2 % (0 ~ 100)",
    "UNIT_FINGER_INIT_MSG0": "Init",
    "UNIT_FINGER_SLEEP_MSG0": "sleep",
    "UNIT_FINGER_GET_ADD_MODE_MSG0": "get",
    "UNIT_FINGER_GET_ADD_MODE_MSG1": "add mode (return 0 or 1)",
    "UNIT_FINGER_SET_ADD_MODE_MSG0": "Set",
    "UNIT_FINGER_SET_ADD_MODE_MSG1": "add mode",
    "UNIT_FINGER_ADD_USER_MSG0": "add user",
    "UNIT_FINGER_ADD_USER_MSG1": "(0 ~ 149) permission",
    "UNIT_FINGER_ADD_USER_RETURN_MSG0": "add user",
    "UNIT_FINGER_ADD_USER_RETURN_MSG1": "(0 ~ 149) permission",
    "UNIT_FINGER_ADD_USER_RETURN_MSG2": "(return -1 or 0~149)",
    "UNIT_FINGER_DELETE_USER_MSG0": "delete user",
    "UNIT_FINGER_DELETE_USER_MSG1": "(0 ~ 149)",
    "UNIT_FINGER_DELETE_ALL_USER_MSG0": "delete all user",
    "UNIT_FINGER_GET_USER_COUNT_MSG0": "get",
    "UNIT_FINGER_GET_USER_COUNT_MSG1": "user count",
    "UNIT_FINGER_GET_USER_CAPACITY_MSG0": "get",
    "UNIT_FINGER_GET_USER_CAPACITY_MSG1": "user capacity",
    "UNIT_FINGER_COMPARE_ID_MSG0": "compare user",
    "UNIT_FINGER_COMPARE_ID_MSG1": "(0 ~ 149)",
    "UNIT_FINGER_COMPARE_ID_MSG2": "(return True or False)",
    "UNIT_FINGER_COMPARE_FINGER_MSG0": "compare finger (return -1 or 0~149)",
    "UNIT_FINGER_GET_USER_LIST_MSG0": "get",
    "UNIT_FINGER_GET_USER_LIST_MSG1": "user list",
    "UNIT_FINGER_GET_USER_INFO_MSG0": "get",
    "UNIT_FINGER_GET_USER_INFO_MSG1": "user",
    "UNIT_FINGER_GET_USER_INFO_MSG2": "(0 ~ 149) info",
    "UNIT_FINGER_GET_USER_INFO_MSG3": "(return None or tuple)",
    "UNIT_FINGER_GET_USER_PERMISSION_MSG0": "get",
    "UNIT_FINGER_GET_USER_PERMISSION_MSG1": "user",
    "UNIT_FINGER_GET_USER_PERMISSION_MSG2": "(0 ~ 149) permission",
    "UNIT_FINGER_GET_USER_PERMISSION_MSG3": "(return -1 or 1,2,3)",
    "UNIT_FINGER_GET_USER_CHARACTERISTIC_MSG0": "get",
    "UNIT_FINGER_GET_USER_CHARACTERISTIC_MSG1": "user",
    "UNIT_FINGER_GET_USER_CHARACTERISTIC_MSG2": "(0 ~ 149) characteristic",
    "UNIT_FINGER_ADD_USER_INFO_MSG0": "add user",
    "UNIT_FINGER_ADD_USER_INFO_MSG1": "(0 ~ 149) permission",
    "UNIT_FINGER_ADD_USER_INFO_MSG2": "characteristic",
    "UNIT_FINGER_GET_MATCH_LEVEL_MSG0": "get",
    "UNIT_FINGER_GET_MATCH_LEVEL_MSG1": "match level (return 0~9)",
    "UNIT_FINGER_SET_MATCH_LEVEL_MSG0": "Set",
    "UNIT_FINGER_SET_MATCH_LEVEL_MSG1": "match level",
    "UNIT_FINGER_SET_MATCH_LEVEL_MSG2": "(0 ~ 9)",
    "UNIT_PIR_INIT_MSG0": "初期化",
    "UNIT_PIR_ENABLE_IRQ_MSG0": "IRQを有効化",
    "UNIT_PIR_DISABLE_IRQ_MSG0": "IRQを無効化",
    "UNIT_PIR_CALLBACK_MSG0": "PIR",
    "UNIT_PIR_CALLBACK_MSG1": "が",
    "UNIT_PIR_GET_STATUS_MSG0": "取得",
    "UNIT_PIR_GET_STATUS_MSG1": "状態(True or False)",
    "UNIT_IR_INIT_MSG0": "初期化",
    "UNIT_IR_SEND_ADDR_MSG0": "アドレス",
    "UNIT_IR_SEND_ADDR_MSG1": "(0 ~ 255)",
    "UNIT_IR_SEND_ADDR_MSG2": "データ",
    "UNIT_IR_SEND_ADDR_MSG3": "(0 ~ 255)を送付",
    "UNIT_IR_CALLBACK_MSG0": "",
    "UNIT_IR_CALLBACK_MSG1": "データ",
    "UNIT_IR_CALLBACK_MSG2": "(0 ~ 255)",
    "UNIT_IR_CALLBACK_MSG3": "アドレス",
    "UNIT_IR_CALLBACK_MSG4": "(0 ~ 255)を受け取る",
    "UNIT_DUAL_BUTTON_INIT_MSG0": "初期化",
    "UNIT_DUAL_BUTTON_CALLBACK_MSG0": "以下の場合:",
    "UNIT_DUAL_BUTTON_CALLBACK_MSG1": "ボタンが",
    "UNIT_DUAL_BUTTON_TICK_MSG0": "ループ中に更新",
    "UNIT_NCIR_INIT_MSG0": "Init %1",
    "UNIT_NCIR_GET_AMBIENT_TEMPERATURE_MSG0": "get %1 ambient temperature (°C, return float)",
    "UNIT_NCIR_GET_OBJECT_TEMPERATURE_MSG0": "get %1 object temperature (°C, return float)",
    "UNIT_RELAY_INIT_MSG0": "Init %1",
    "UNIT_RELAY_ON_MSG0": "Set %1 on",
    "UNIT_RELAY_OFF_MSG0": "Set %1 off",
    "UNIT_RELAY_SET_STATUS_MSG0": "Set %1 status %2",
    "UNIT_RELAY_GET_VALUE_MSG0": "get %1 status (return True or False)",
    "UNIT_LIGHT_INIT_MSG0": "初期化",
    "UNIT_LIGHT_GET_DIGITAL_VALUE_MSG0": "",
    "UNIT_LIGHT_GET_DIGITAL_VALUE_MSG1": "デジタル値(0 or 1)を取得",
    "UNIT_LIGHT_GET_ANALOG_VALUE_MSG0": "",
    "UNIT_LIGHT_GET_ANALOG_VALUE_MSG1": "アナログ値(0~65535)を取得",
    "UNIT_LIGHT_GET_OHM_MSG0": "",
    "UNIT_LIGHT_GET_OHM_MSG1": "抵抗値(int)を取得",
    "UNIT_DLIGHT_INIT_MSG0": "%1 初期化",
    "UNIT_DLIGHT_GET_LUX_MSG0": "%1 LUX値(float)",
    "UNIT_DLIGHT_CONFIGURE_MSG0": "%1 モード %2 解像度 %3 に設定",
    "UNIT_CARDKB_INIT_MSG0": "Init",
    "UNIT_CARDKB_GET_KEY_MSG0": "get",
    "UNIT_CARDKB_GET_KEY_MSG1": "key value (return int)",
    "UNIT_CARDKB_GET_STRING_MSG0": "get",
    "UNIT_CARDKB_GET_STRING_MSG1": "key string (return string)",
    "UNIT_CARDKB_IS_PRESSED_MSG0": "has",
    "UNIT_CARDKB_IS_PRESSED_MSG1": "pressed (return True or False)",
    "UNIT_CARDKB_KEYCODE_MSG0": "KeyCode",
    "UNIT_CARDKB_CALLBACK_MSG0": "When keyboard",
    "UNIT_CARDKB_CALLBACK_MSG1": "was pressed",
    "UNIT_CARDKB_TICK_MSG0": "update in loop",
    "UNIT_ENCODER8_INIT_MSG0": "Init",
    "UNIT_ENCODER8_INIT_MSG1": "I2C address",
    "UNIT_ENCODER8_INIT_MSG2": "(0x01 ~ 0x7f)",
    "UNIT_ENCODER8_GET_DEVICE_STATUS_MSG0": "get",
    "UNIT_ENCODER8_GET_DEVICE_STATUS_MSG1": "device status",
    "UNIT_ENCODER8_GET_COUNTER_VALUE_MSG0": "get",
    "UNIT_ENCODER8_GET_COUNTER_VALUE_MSG1": "channel",
    "UNIT_ENCODER8_GET_COUNTER_VALUE_MSG2": "counter value",
    "UNIT_ENCODER8_GET_INCREMENT_VALUE_MSG0": "get",
    "UNIT_ENCODER8_GET_INCREMENT_VALUE_MSG1": "channel",
    "UNIT_ENCODER8_GET_INCREMENT_VALUE_MSG2": "increment value",
    "UNIT_ENCODER8_GET_BUTTON_STATUS_MSG0": "get",
    "UNIT_ENCODER8_GET_BUTTON_STATUS_MSG1": "channel",
    "UNIT_ENCODER8_GET_BUTTON_STATUS_MSG2": "button status",
    "UNIT_ENCODER8_GET_SWITCH_STATUS_MSG0": "get",
    "UNIT_ENCODER8_GET_SWITCH_STATUS_MSG1": "switch status",
    "UNIT_ENCODER8_SET_COUNTER_VALUE_MSG0": "Set",
    "UNIT_ENCODER8_SET_COUNTER_VALUE_MSG1": "channel",
    "UNIT_ENCODER8_SET_COUNTER_VALUE_MSG2": "counter value",
    "UNIT_ENCODER8_RESET_COUNTER_VALUE_MSG0": "Reset",
    "UNIT_ENCODER8_RESET_COUNTER_VALUE_MSG1": "channel",
    "UNIT_ENCODER8_RESET_COUNTER_VALUE_MSG2": "counter value",
    "UNIT_ENCODER8_SET_I2C_ADDR_MSG0": "Set",
    "UNIT_ENCODER8_SET_I2C_ADDR_MSG1": "I2C address",
    "UNIT_ENCODER8_SET_I2C_ADDR_MSG2": "(0x01 ~ 0x7f)",
    "UNIT_ENCODER8_SET_RGB_LED_MSG0": "Set",
    "UNIT_ENCODER8_SET_RGB_LED_MSG1": "channel",
    "UNIT_ENCODER8_SET_RGB_LED_MSG2": "RGB LED color",
    "UNIT_ENCODER8_SET_RGB_LED_FROM_MSG0": "Set",
    "UNIT_ENCODER8_SET_RGB_LED_FROM_MSG1": "channel from",
    "UNIT_ENCODER8_SET_RGB_LED_FROM_MSG2": "to",
    "UNIT_ENCODER8_SET_RGB_LED_FROM_MSG3": "LED color",
    "UNIT_LORAWAN470_INIT_MSG0": "Init",
    "UNIT_LORAWAN470_GET_ABP_CONFIG_MSG0": "get",
    "UNIT_LORAWAN470_GET_ABP_CONFIG_MSG1": "ABP config (return tuple)",
    "UNIT_LORAWAN470_GET_OTAA_CONFIG_MSG0": "get",
    "UNIT_LORAWAN470_GET_OTAA_CONFIG_MSG1": "OTAA config (return tuple)",
    "UNIT_LORAWAN470_CHECK_JOIN_STATUS_MSG0": "check",
    "UNIT_LORAWAN470_CHECK_JOIN_STATUS_MSG1": "join status",
    "UNIT_LORAWAN470_CHECK_UPLINK_STATUS_MSG0": "check",
    "UNIT_LORAWAN470_CHECK_UPLINK_STATUS_MSG1": "uplink data status",
    "UNIT_LORAWAN470_CHECK_DOWNLINK_DATA_MSG0": "check and receive",
    "UNIT_LORAWAN470_CHECK_DOWNLINK_DATA_MSG1": "downlink data",
    "UNIT_LORAWAN470_SET_UART_PORT_MSG0": "Set",
    "UNIT_LORAWAN470_SET_UART_PORT_MSG1": "core uart ID num",
    "UNIT_LORAWAN470_SET_JOIN_MODE_MSG0": "Set",
    "UNIT_LORAWAN470_SET_JOIN_MODE_MSG1": "join mode",
    "UNIT_LORAWAN470_STOP_JOIN_NETWORK_MSG0": "Stop",
    "UNIT_LORAWAN470_STOP_JOIN_NETWORK_MSG1": "join LoRaWAN network",
    "UNIT_LORAWAN470_SET_UPLINK_PORT_MSG0": "Set",
    "UNIT_LORAWAN470_SET_UPLINK_PORT_MSG1": "uplink app port",
    "UNIT_LORAWAN470_SET_UPLINK_PORT_MSG2": "(1 ~ 233)",
    "UNIT_LORAWAN470_CONFIG_MSG0": "Config",
    "UNIT_LORAWAN470_CONFIG_MSG1": "frequency band mask",
    "UNIT_LORAWAN470_CONFIG_MSG2": "RX window param: ",
    "UNIT_LORAWAN470_CONFIG_MSG3": "RX1 offset",
    "UNIT_LORAWAN470_CONFIG_MSG4": "RX2 datarate",
    "UNIT_LORAWAN470_CONFIG_MSG5": "RX2 FREQ(Hz)",
    "UNIT_LORAWAN470_CONFIG_MSG6": "class mode",
    "UNIT_LORAWAN470_CONFIG_MSG7": "uplink downlink",
    "UNIT_LORAWAN470_START_JOIN_NETWORK_MSG0": "Start",
    "UNIT_LORAWAN470_START_JOIN_NETWORK_MSG1": "join LoRaWAN network",
    "UNIT_LORAWAN470_START_JOIN_NETWORK_MSG2": "period (seconds) (7 ~ 255)",
    "UNIT_LORAWAN470_START_JOIN_NETWORK_MSG3": "maximum number of attempts (1 ~ 256)",
    "UNIT_LORAWAN470_CONFIG_MODE_MSG0": "config",
    "UNIT_LORAWAN470_SEND_DATA_PAYLOAD_MSG0": "send data payload",
    "UNIT_GPS_INIT_MSG0": "Init",
    "UNIT_GPS_GET_TIME_MSG0": "get",
    "UNIT_GPS_GET_TIME_MSG1": "time (string)",
    "UNIT_GPS_GET_DATE_MSG0": "get",
    "UNIT_GPS_GET_DATE_MSG1": "date (string)",
    "UNIT_GPS_GET_LATITUDE_MSG0": "get",
    "UNIT_GPS_GET_LATITUDE_MSG1": "latitude (string: ddmm.mmmmm<W/E>)",
    "UNIT_GPS_GET_LONGITUDE_MSG0": "get",
    "UNIT_GPS_GET_LONGITUDE_MSG1": "longitude (string: dddmm.mmmmm<S/N>)",
    "UNIT_GPS_GET_ALTITUDE_MSG0": "get",
    "UNIT_GPS_GET_ALTITUDE_MSG1": "altitude (string: meter)",
    "UNIT_GPS_GET_LATITUDE_DECIMAL_MSG0": "get",
    "UNIT_GPS_GET_LATITUDE_DECIMAL_MSG1": "latitude decimal (float:dd.dddd)",
    "UNIT_GPS_GET_LONGITUDE_DECIMAL_MSG0": "get",
    "UNIT_GPS_GET_LONGITUDE_DECIMAL_MSG1": "longitude decimal (float:dd.dddd)",
    "UNIT_GPS_GET_SATELLITE_NUM_MSG0": "get",
    "UNIT_GPS_GET_SATELLITE_NUM_MSG1": "satellite num (string)",
    "UNIT_GPS_GET_POSITIONING_QUALITY_MSG0": "get",
    "UNIT_GPS_GET_POSITIONING_QUALITY_MSG1": "positioning quality (string)",
    "UNIT_GPS_GET_SPEED_MSG0": "get",
    "UNIT_GPS_GET_SPEED_MSG1": "speed",
    "UNIT_GPS_GET_SPEED_MSG2": "(string)",
    "UNIT_GPS_GET_COURSE_MSG0": "get",
    "UNIT_GPS_GET_COURSE_MSG1": "course (string)",
    "UNIT_GPS_SET_UART_ID_MSG0": "Set",
    "UNIT_GPS_SET_UART_ID_MSG1": "core UART id num",
    "UNIT_GPS_SET_TIME_ZONE_MSG0": "Set",
    "UNIT_GPS_SET_TIME_ZONE_MSG1": "time zone",
    "UNIT_HBRIDGE_INIT_MSG0": "Init",
    "UNIT_HBRIDGE_INIT_MSG1": "I2C address",
    "UNIT_HBRIDGE_INIT_MSG2": "(0x20 ~ 0x2f)",
    "UNIT_HBRIDGE_GET_CONFIGURE_VALUE_MSG0": "get",
    "UNIT_HBRIDGE_GET_CONFIGURE_VALUE_MSG1": "configure value",
    "UNIT_HBRIDGE_GET_ADC_VALUE_MSG0": "get",
    "UNIT_HBRIDGE_GET_ADC_VALUE_MSG1": "value resolution",
    "UNIT_HBRIDGE_GET_FW_VERSION_MSG0": "get",
    "UNIT_HBRIDGE_GET_FW_VERSION_MSG1": "firmware version",
    "UNIT_HBRIDGE_SET_DIRECTION_MSG0": "Set",
    "UNIT_HBRIDGE_SET_DIRECTION_MSG1": "direction",
    "UNIT_HBRIDGE_SET_8BIT_PWM_MSG0": "Set",
    "UNIT_HBRIDGE_SET_8BIT_PWM_MSG1": "PWM duty cycle 8bit value",
    "UNIT_HBRIDGE_SET_8BIT_PWM_MSG2": "(0 ~ 255)",
    "UNIT_HBRIDGE_SET_16BIT_PWM_MSG0": "Set",
    "UNIT_HBRIDGE_SET_16BIT_PWM_MSG1": "PWM duty cycle 16bit value",
    "UNIT_HBRIDGE_SET_16BIT_PWM_MSG2": "(0 ~ 65535)",
    "UNIT_HBRIDGE_SET_PWM_FREQ_MSG0": "Set",
    "UNIT_HBRIDGE_SET_PWM_FREQ_MSG1": "PWM frequency",
    "UNIT_HBRIDGE_SET_PWM_FREQ_MSG2": "(100 ~ 10000)",
    "UNIT_HBRIDGE_GET_VIN_CURRENT_MSG0": "get",
    "UNIT_HBRIDGE_GET_VIN_CURRENT_MSG1": "vin current (float) in amps",
    "UNIT_HBRIDGE_SET_PERCENTAGE_PWM_MSG0": "Set",
    "UNIT_HBRIDGE_SET_PERCENTAGE_PWM_MSG1": "PWM duty cycle",
    "UNIT_HBRIDGE_SET_PERCENTAGE_PWM_MSG2": "(%)  resolution",
    "UNIT_PBHUB_INIT_MSG0": "Init",
    "UNIT_PBHUB_INIT_MSG1": "I2C address",
    "UNIT_PBHUB_DIGITAL_READ_MSG0": "get digital value CH",
    "UNIT_PBHUB_DIGITAL_READ_MSG1": "IO",
    "UNIT_PBHUB_DIGITAL_READ_MSG2": "(return 0 or 1)",
    "UNIT_PBHUB_ANALOG_READ_MSG0": "get analog value CH",
    "UNIT_PBHUB_DIGITAL_WRITE_MSG0": "set digital value CH",
    "UNIT_PBHUB_DIGITAL_WRITE_MSG1": "IO",
    "UNIT_PBHUB_DIGITAL_WRITE_MSG2": "value",
    "UNIT_PBHUB_DIGITAL_WRITE_MSG3": "(0 ~ 1)",
    "UNIT_PBHUB_SET_RGB_LED_MSG0": "RGB pixel LED CH",
    "UNIT_PBHUB_SET_RGB_LED_MSG1": "total LED",
    "UNIT_PBHUB_SET_RGB_LED_COLOR_MSG0": "RGB pixel LED CH",
    "UNIT_PBHUB_SET_RGB_LED_COLOR_MSG1": "LED num",
    "UNIT_PBHUB_SET_RGB_LED_COLOR_MSG2": "color",
    "UNIT_PBHUB_SET_RGB_LED_BEGIN_COLOR_MSG0": "RGB pixel LED CH",
    "UNIT_PBHUB_SET_RGB_LED_BEGIN_COLOR_MSG1": "begin",
    "UNIT_PBHUB_SET_RGB_LED_BEGIN_COLOR_MSG2": "number",
    "UNIT_PBHUB_SET_RGB_LED_BEGIN_COLOR_MSG3": "color",
    "UNIT_PBHUB_SET_RGB_LED_BRIGHTNESS_MSG0": "RGB pixel LED CH",
    "UNIT_PBHUB_SET_RGB_LED_BRIGHTNESS_MSG1": "brightness",
    "UNIT_PBHUB_SET_RGB_LED_BRIGHTNESS_MSG2": "(0 ~ 100)",
    "UNIT_PBHUB_SET_I2C_ADDRESS_MSG0": "Set",
    "UNIT_PBHUB_SET_I2C_ADDRESS_MSG1": "I2C address",
    "UNIT_PBHUB_SERVO_ANGLE_MSG0": "servo CH",
    "UNIT_PBHUB_SERVO_ANGLE_MSG1": "IO",
    "UNIT_PBHUB_SERVO_ANGLE_MSG2": "angle",
    "UNIT_PBHUB_SERVO_ANGLE_MSG3": "(0 ~ 180)",
    "UNIT_PBHUB_SERVO_PULSE_MSG0": "servo CH",
    "UNIT_PBHUB_SERVO_PULSE_MSG1": "IO",
    "UNIT_PBHUB_SERVO_PULSE_MSG2": "pulse",
    "UNIT_PBHUB_SERVO_PULSE_MSG3": "(500 ~ 2500)",
    "UNIT_PBHUB_PWM_WRITE_MSG0": "set PWM write CH",
    "UNIT_PBHUB_PWM_WRITE_MSG1": "IO",
    "UNIT_PBHUB_PWM_WRITE_MSG2": "duty cycle",
    "UNIT_PBHUB_PWM_WRITE_MSG3": "%",
    "UNIT_PBHUB_PWM_READ_MSG0": "get PWM duty cycle CH",
    "UNIT_PBHUB_PWM_READ_MSG1": "IO",
    "UNIT_PBHUB_PWM_READ_MSG2": "(return 0 ~ 100%)",
    "UNIT_PBHUB_READ_STATUS_MSG0": "get device information",
    "UNIT_UWB_INIT_MSG0": "Init",
    "UNIT_UWB_INIT_MSG1": "as",
    "UNIT_UWB_INIT_MSG2": "with ID",
    "UNIT_UWB_INIT_MSG3": "(0 ~ 3)",
    "UNIT_UWB_SET_UART_ID_MSG0": "Set",
    "UNIT_UWB_SET_UART_ID_MSG1": "core uart ID num",
    "UNIT_UWB_SET_UART_ID_MSG2": "(1 ~ 2)",
    "UNIT_UWB_SET_TAG_MODE_MSG0": "Set",
    "UNIT_UWB_SET_TAG_MODE_MSG1": "to tag mode",
    "UNIT_UWB_SET_MEASURING_INTERVAL_MSG0": "Set",
    "UNIT_UWB_SET_MEASURING_INTERVAL_MSG1": "range interval",
    "UNIT_UWB_SET_MEASURING_INTERVAL_MSG2": "(5 ~ 50) times before value output",
    "UNIT_UWB_MEASUREMENT_CONTINUOUS_MSG0": "continuous value output",
    "UNIT_UWB_SET_ANCHOR_MODE_MSG0": "Set",
    "UNIT_UWB_SET_ANCHOR_MODE_MSG1": "to anchor mode with ID",
    "UNIT_UWB_SET_ANCHOR_MODE_MSG2": "(0 ~ 3)",
    "UNIT_UWB_CHECK_DEVICE_MSG0": "check",
    "UNIT_UWB_CHECK_DEVICE_MSG1": "device available (return True or False)",
    "UNIT_UWB_GET_DEVICE_ID_MSG0": "get",
    "UNIT_UWB_GET_DEVICE_ID_MSG1": "device ID (return string)",
    "UNIT_UWB_GET_VERSION_MSG0": "get",
    "UNIT_UWB_GET_VERSION_MSG1": "firmware version (return string)",
    "UNIT_UWB_GET_DISTANCE_MEASURE_MSG0": "get",
    "UNIT_UWB_GET_DISTANCE_MEASURE_MSG1": "distance (in Meter) to anchor ID",
    "UNIT_UWB_GET_DISTANCE_MEASURE_MSG2": "(0 ~ 3) (return float)",
    "UNIT_UWB_UPDATED_MEASURED_MSG0": "updated new distance value (in use loop)",
    "UNIT_UWB_RESET_MSG0": "Device reset",
    "UNIT_UWB_START_MEASURING_MSG0": "start measuring",
    "UNIT_UWB_STOP_MEASURING_MSG0": "stop measuring",
    "UNIT_UWB_GET_MEASURING_DATA_LIST_MSG0": "get",
    "UNIT_UWB_GET_MEASURING_DATA_LIST_MSG1": "measuring data list (return list)",
    "UNIT_UWB_GET_MEASURING_DATA_LIST_NUM_MSG0": "get",
    "UNIT_UWB_GET_MEASURING_DATA_LIST_NUM_MSG1": "measuring data list",
    "UNIT_UWB_GET_MEASURING_DATA_LIST_NUM_MSG2": "(return string)",
    "UNIT_AC_MEASURE_INIT_MSG0": "Init",
    "UNIT_AC_MEASURE_INIT_MSG1": "I2C address",
    "UNIT_AC_MEASURE_INIT_MSG2": "(0x01 ~ 0x7f)",
    "UNIT_AC_MEASURE_IS_READY_MSG0": "is data ready (return True or False)",
    "UNIT_AC_MEASURE_GET_VOLTAGE_MSG0": "get",
    "UNIT_AC_MEASURE_GET_VOLTAGE_MSG1": "voltage (in volts) (return string)",
    "UNIT_AC_MEASURE_GET_CURRENT_MSG0": "get",
    "UNIT_AC_MEASURE_GET_CURRENT_MSG1": "current (in Amps) (return string)",
    "UNIT_AC_MEASURE_GET_ACTIVE_POWER_MSG0": "get",
    "UNIT_AC_MEASURE_GET_ACTIVE_POWER_MSG1": "active power (in Watts) (return string)",
    "UNIT_AC_MEASURE_GET_POWER_FACTOR_MSG0": "get",
    "UNIT_AC_MEASURE_GET_POWER_FACTOR_MSG1": "power factor (return string)",
    "UNIT_AC_MEASURE_GET_APPARENT_POWER_MSG0": "get",
    "UNIT_AC_MEASURE_GET_APPARENT_POWER_MSG1": "apparent power (in VA) (return string)",
    "UNIT_AC_MEASURE_GET_KWH_MSG0": "get",
    "UNIT_AC_MEASURE_GET_KWH_MSG1": "KW/H (return string)",
    "UNIT_AC_MEASURE_GET_VOLTAGE_RAW_MSG0": "get",
    "UNIT_AC_MEASURE_GET_VOLTAGE_RAW_MSG1": "voltage × 100 (in Volts) (return int)",
    "UNIT_AC_MEASURE_GET_CURRENT_RAW_MSG0": "get",
    "UNIT_AC_MEASURE_GET_CURRENT_RAW_MSG1": "current × 100 (in Amps) (return int)",
    "UNIT_AC_MEASURE_GET_ACTIVE_POWER_RAW_MSG0": "get",
    "UNIT_AC_MEASURE_GET_ACTIVE_POWER_RAW_MSG1": "active power × 100 (in Watts) (return int)",
    "UNIT_AC_MEASURE_GET_APPARENT_POWER_RAW_MSG0": "get",
    "UNIT_AC_MEASURE_GET_APPARENT_POWER_RAW_MSG1": "apparent power × 100 (in VA) (return int)",
    "UNIT_AC_MEASURE_GET_POWER_FACTOR_RAW_MSG0": "get",
    "UNIT_AC_MEASURE_GET_POWER_FACTOR_RAW_MSG1": "power factor × 100 (return int)",
    "UNIT_AC_MEASURE_GET_KWH_RAW_MSG0": "get",
    "UNIT_AC_MEASURE_GET_KWH_RAW_MSG1": "KW/H × 100 (return int)",
    "UNIT_AC_MEASURE_GET_VOLTAGE_COEFFICIENT_MSG0": "get",
    "UNIT_AC_MEASURE_GET_VOLTAGE_COEFFICIENT_MSG1": "voltage coefficient (return int)",
    "UNIT_AC_MEASURE_GET_CURRENT_COEFFICIENT_MSG0": "get",
    "UNIT_AC_MEASURE_GET_CURRENT_COEFFICIENT_MSG1": "current coefficient (return int)",
    "UNIT_AC_MEASURE_GET_FW_VERSION_MSG0": "get",
    "UNIT_AC_MEASURE_GET_FW_VERSION_MSG1": "firmware version (return string)",
    "UNIT_AC_MEASURE_SET_VOLTAGE_COEFFICIENT_MSG0": "Set",
    "UNIT_AC_MEASURE_SET_VOLTAGE_COEFFICIENT_MSG1": "voltage coefficient",
    "UNIT_AC_MEASURE_SET_VOLTAGE_COEFFICIENT_MSG2": "(0 ~ 255)",
    "UNIT_AC_MEASURE_SET_CURRENT_COEFFICIENT_MSG0": "Set",
    "UNIT_AC_MEASURE_SET_CURRENT_COEFFICIENT_MSG1": "current coefficient",
    "UNIT_AC_MEASURE_SET_CURRENT_COEFFICIENT_MSG2": "(0 ~ 255)",
    "UNIT_AC_MEASURE_SAVE_COEFFICIENT_MSG0": "save voltage and current coefficient in flash",
    "UNIT_AC_MEASURE_SET_ADDRESS_MSG0": "Set",
    "UNIT_AC_MEASURE_SET_ADDRESS_MSG1": "I2C address",
    "UNIT_AC_MEASURE_SET_ADDRESS_MSG2": "(0x01 ~ 0x7f)",
    "UNIT_RS485_INIT_MSG0": "Init",
    "UNIT_RS485_CONFIGURE_MSG0": "Configure",
    "UNIT_RS485_CONFIGURE_MSG1": "UART",
    "UNIT_RS485_CONFIGURE_MSG2": "baudrate",
    "UNIT_RS485_CONFIGURE_MSG3": "data bits",
    "UNIT_RS485_CONFIGURE_MSG4": "stop bits",
    "UNIT_RS485_CONFIGURE_MSG5": "parity",
    "UNIT_RS485_CONFIGURE_MSG6": "TX pin",
    "UNIT_RS485_CONFIGURE_MSG7": "RX pin",
    "UNIT_RS485_CONFIGURE_MSG8": "ctrl pin",
    "UNIT_RS485_READ_ALL_BYTES_MSG0": "read all bytes (return bytes)",
    "UNIT_RS485_READ_BYTES_MSG0": "read",
    "UNIT_RS485_READ_BYTES_MSG1": "bytes (return bytes)",
    "UNIT_RS485_READ_LINE_MSG0": "read line (return bytes)",
    "UNIT_RS485_REMAIN_CACHE_MSG0": "number of bytes available",
    "UNIT_RS485_WRITE_MSG0": "write",
    "UNIT_RS485_WRITE_LINE_MSG0": "write a line",
    "UNIT_RS485_WRITE_LIST_BYTES_MSG0": "write list of bytes",
    "UNIT_RS485_READ_COILS_MSG0": "read coils",
    "UNIT_RS485_READ_COILS_MSG1": "slave address (0 ~ 247)",
    "UNIT_RS485_READ_COILS_MSG2": "starting address (0 ~ 9999)",
    "UNIT_RS485_READ_COILS_MSG3": "coil qty",
    "UNIT_RS485_READ_COILS_MSG4": "timeout",
    "UNIT_RS485_READ_COILS_MSG5": "(return list)",
    "UNIT_RS485_READ_DISCRETE_INPUTS_MSG0": "read discrete inputs",
    "UNIT_RS485_READ_DISCRETE_INPUTS_MSG1": "slave address (0 ~ 247)",
    "UNIT_RS485_READ_DISCRETE_INPUTS_MSG2": "starting address (0 ~ 9999)",
    "UNIT_RS485_READ_DISCRETE_INPUTS_MSG3": "input qty",
    "UNIT_RS485_READ_DISCRETE_INPUTS_MSG4": "timeout",
    "UNIT_RS485_READ_DISCRETE_INPUTS_MSG5": "(return list)",
    "UNIT_RS485_READ_HOLDING_REGISTERS_MSG0": "read holding registers",
    "UNIT_RS485_READ_HOLDING_REGISTERS_MSG1": "slave address (0 ~ 247)",
    "UNIT_RS485_READ_HOLDING_REGISTERS_MSG2": "starting address (0 ~ 9999)",
    "UNIT_RS485_READ_HOLDING_REGISTERS_MSG3": "register qty",
    "UNIT_RS485_READ_HOLDING_REGISTERS_MSG4": "signed",
    "UNIT_RS485_READ_HOLDING_REGISTERS_MSG5": "timeout",
    "UNIT_RS485_READ_HOLDING_REGISTERS_MSG6": "(return list)",
    "UNIT_RS485_READ_INPUT_REGISTERS_MSG0": "read input registers",
    "UNIT_RS485_READ_INPUT_REGISTERS_MSG1": "slave address (0 ~ 247)",
    "UNIT_RS485_READ_INPUT_REGISTERS_MSG2": "starting address (0 ~ 9999)",
    "UNIT_RS485_READ_INPUT_REGISTERS_MSG3": "register qty",
    "UNIT_RS485_READ_INPUT_REGISTERS_MSG4": "signed",
    "UNIT_RS485_READ_INPUT_REGISTERS_MSG5": "timeout",
    "UNIT_RS485_READ_INPUT_REGISTERS_MSG6": "(return list)",
    "UNIT_RS485_WRITE_SINGLE_COIL_MSG0": "write single coil",
    "UNIT_RS485_WRITE_SINGLE_COIL_MSG1": "slave address (0 ~ 247)",
    "UNIT_RS485_WRITE_SINGLE_COIL_MSG2": "output address (0 ~ 9999)",
    "UNIT_RS485_WRITE_SINGLE_COIL_MSG3": "output",
    "UNIT_RS485_WRITE_SINGLE_COIL_MSG4": "timeout",
    "UNIT_RS485_WRITE_SINGLE_REGISTER_MSG0": "write single register",
    "UNIT_RS485_WRITE_SINGLE_REGISTER_MSG1": "slave address (0 ~ 247)",
    "UNIT_RS485_WRITE_SINGLE_REGISTER_MSG2": "register address (0 ~ 9999)",
    "UNIT_RS485_WRITE_SINGLE_REGISTER_MSG3": "register value",
    "UNIT_RS485_WRITE_SINGLE_REGISTER_MSG4": "signed",
    "UNIT_RS485_WRITE_SINGLE_REGISTER_MSG5": "timeout",
    "UNIT_RS485_WRITE_MULTIPLE_COILS_MSG0": "write multiple coils",
    "UNIT_RS485_WRITE_MULTIPLE_COILS_MSG1": "slave address (0 ~ 247)",
    "UNIT_RS485_WRITE_MULTIPLE_COILS_MSG2": "starting address (0 ~ 9999)",
    "UNIT_RS485_WRITE_MULTIPLE_COILS_MSG3": "output value",
    "UNIT_RS485_WRITE_MULTIPLE_COILS_MSG4": "timeout",
    "UNIT_RS485_WRITE_MULTIPLE_REGISTER_MSG0": "write multiple register",
    "UNIT_RS485_WRITE_MULTIPLE_REGISTER_MSG1": "slave address (0 ~ 247)",
    "UNIT_RS485_WRITE_MULTIPLE_REGISTER_MSG2": "starting address (0 ~ 9999)",
    "UNIT_RS485_WRITE_MULTIPLE_REGISTER_MSG3": "register value",
    "UNIT_RS485_WRITE_MULTIPLE_REGISTER_MSG4": "signed",
    "UNIT_RS485_WRITE_MULTIPLE_REGISTER_MSG5": "timeout",
    "UNIT_ULTRASONIC_INIT_MSG0": "初期化",
    "UNIT_ULTRASONIC_GET_DISTANCE_MSG0": "",
    "UNIT_ULTRASONIC_GET_DISTANCE_MSG1": "目標の距離",
    "UNIT_ULTRASONIC_GET_DISTANCE_MSG2": "(float)を取得",
    "UNIT_SONIC_IO_INIT_MSG0": "初期化",
    "UNIT_SONIC_IO_GET_DISTANCE_MSG0": "",
    "UNIT_SONIC_IO_GET_DISTANCE_MSG1": "目標の距離(float)",
    "UNIT_SONIC_IO_GET_DISTANCE_MSG2": "を取得",
    "UNIT_LIMIT_INIT_MSG0": "初期化",
    "UNIT_LIMIT_INIT_MSG1": "active low",
    "UNIT_LIMIT_INIT_MSG2": "type",
    "UNIT_LIMIT_CALLBACK_MSG0": "",
    "UNIT_LIMIT_CALLBACK_MSG1": "が",
    "UNIT_LIMIT_TICK_MSG0": "ループでの更新",
    "UNIT_LIMIT_GET_COUNTER_VALUE_MSG0": "",
    "UNIT_LIMIT_GET_COUNTER_VALUE_MSG1": "現在値(int)を取得",
    "UNIT_LIMIT_RESET_COUNTER_VALUE_MSG0": "",
    "UNIT_LIMIT_RESET_COUNTER_VALUE_MSG1": "カウンタ値をリセット",
    "UNIT_OP_INIT_MSG0": "Init",
    "UNIT_OP_INIT_MSG1": "active low",
    "UNIT_OP_INIT_MSG2": "type",
    "UNIT_OP_GET_SWITCH_VALUE_MSG0": "get",
    "UNIT_OP_GET_SWITCH_VALUE_MSG1": "switch value (return 0 ~ 1)",
    "UNIT_OP_GET_COUNTER_VALUE_MSG0": "get",
    "UNIT_OP_GET_COUNTER_VALUE_MSG1": "counter value (return int)",
    "UNIT_OP_RESET_COUNTER_VALUE_MSG0": "Reset",
    "UNIT_OP_RESET_COUNTER_VALUE_MSG1": "counter value",
    "UNIT_OP_CALLBACK_MSG0": "When",
    "UNIT_OP_CALLBACK_MSG1": "was",
    "UNIT_OP_BUTTON_TICK_MSG0": "update in loop",
    "UNIT_RFID_INIT_MSG0": "初期化",
    "UNIT_RFID_IS_NEW_CARD_PRESENT_MSG0": "新しいカードがあるか(True or False)",
    "UNIT_RFID_READ_CARD_UID_MSG0": "カードのUID(bytearray)を取得",
    "UNIT_RFID_READ_MSG0": "アドレス(bytearray)を取得",
    "UNIT_RFID_READ_MSG1": "",
    "UNIT_RFID_WRITE_MSG0": "write buffer",
    "UNIT_RFID_WRITE_MSG1": "to addr",
    "UNIT_RFID_WRITE_RETURN_MSG0": "write buffer",
    "UNIT_RFID_WRITE_RETURN_MSG1": "to addr",
    "UNIT_RFID_WRITE_RETURN_MSG2": "(return int)",
    "UNIT_RFID_CLOSE_MSG0": "close",
    "UNIT_WEIGHT_INIT_MSG0": "Init",
    "UNIT_WEIGHT_GET_RAW_VALUE_MSG0": "get",
    "UNIT_WEIGHT_GET_RAW_VALUE_MSG1": "raw weight value (return int)",
    "UNIT_WEIGHT_GET_SCALE_VALUE_MSG0": "get",
    "UNIT_WEIGHT_GET_SCALE_VALUE_MSG1": "scale weight value (gm, return int)",
    "UNIT_WEIGHT_SET_TARE_MSG0": "set tare",
    "UNIT_WEIGHT_SET_CALIBRATE_SCALE_MSG0": "set calibrate scale weight",
    "UNIT_WEIGHT_SET_CALIBRATE_SCALE_MSG1": "gm",
    "UNIT_SCALES_INIT_MSG0": "Init",
    "UNIT_SCALES_INIT_MSG1": "I2C address",
    "UNIT_SCALES_INIT_MSG2": "(0x01 ~ 0x7f)",
    "UNIT_SCALES_GET_BUTTON_STATUS_MSG0": "get",
    "UNIT_SCALES_GET_BUTTON_STATUS_MSG1": "button status",
    "UNIT_SCALES_GET_BUTTON_STATUS_MSG2": "(return int)",
    "UNIT_SCALES_SET_BUTTON_OFFSET_MSG0": "set offset with button",
    "UNIT_SCALES_SET_RGBLED_SYNC_MSG0": "set RGB led sync with weight",
    "UNIT_SCALES_SET_RGBLED_COLOR_MSG0": "set RGB led color",
    "UNIT_SCALES_GET_RGB_LED_MSG0": "get",
    "UNIT_SCALES_GET_RGB_LED_MSG1": "RGB led color (return list)",
    "UNIT_SCALES_GET_SCALE_VALUE_MSG0": "get",
    "UNIT_SCALES_GET_SCALE_VALUE_MSG1": "scale",
    "UNIT_SCALES_GET_SCALE_VALUE_MSG2": "value (return int)",
    "UNIT_SCALES_SET_RAW_OFFSET_MSG0": "set Raw ADC offset value",
    "UNIT_SCALES_SET_CURRENT_RAW_OFFSET_MSG0": "set current Raw ADC offset value",
    "UNIT_SCALES_SET_CALIBRATION_ZERO_MSG0": "set calibration zero weight (tare)",
    "UNIT_SCALES_SET_CALIBRATION_LOAD_MSG0": "set calibration load weight",
    "UNIT_SCALES_SET_CALIBRATION_LOAD_MSG1": "gm",
    "UNIT_SCALES_SET_ADDRESS_MSG0": "set I2C address",
    "UNIT_SCALES_SET_ADDRESS_MSG1": "(0x01 ~ 0x7f)",
    "UNIT_SCALES_GET_DEVICE_INFORM_MSG0": "get",
    "UNIT_SCALES_GET_DEVICE_INFORM_MSG1": "device information",
    "UNIT_SCALES_GET_DEVICE_INFORM_MSG2": "(return int)",
    "UNIT_GESTURE_INIT_MSG0": "初期化",
    "UNIT_GESTURE_GET_HAND_GESTURES_MSG0": "手のジェスチャー値(0 ~ 512)を取得",
    "UNIT_GESTURE_GET_TEXT_DESCRIPTION_MSG0": "ジェスチャーのテキスト表現(string)を取得",
    "UNIT_GESTURE_GET_TEXT_DESCRIPTION_MSG1": "",
    "UNIT_GESTURE_MOVEMENTS_MSG0": "移動方向",
    "UNIT_GESTURE_MOVEMENTS_MSG1": "(0 ~ 512)",
    "UNIT_GESTURE_SET_GESTURE_HIGHRATE_MSG0": "ハイレートモード",
    "UNIT_THERMAL_INIT_MSG0": "Init",
    "UNIT_THERMAL_GET_MAX_TEMPERATURE_MSG0": "get",
    "UNIT_THERMAL_GET_MAX_TEMPERATURE_MSG1": "maximum temperature in pixel array (return float)",
    "UNIT_THERMAL_GET_MIN_TEMPERATURE_MSG0": "get",
    "UNIT_THERMAL_GET_MIN_TEMPERATURE_MSG1": "minimum temperature in pixel array (return float)",
    "UNIT_THERMAL_GET_MIDPOINT_TEMPERATURE_MSG0": "get",
    "UNIT_THERMAL_GET_MIDPOINT_TEMPERATURE_MSG1": "midpoint temperature in pixel array (return float)",
    "UNIT_THERMAL_GET_PIXEL_TEMPERATURE_MSG0": "get",
    "UNIT_THERMAL_GET_PIXEL_TEMPERATURE_MSG1": "temperature in pixel array x",
    "UNIT_THERMAL_GET_PIXEL_TEMPERATURE_MSG2": "y",
    "UNIT_THERMAL_GET_PIXEL_TEMPERATURE_MSG3": "position (return float)",
    "UNIT_THERMAL_GET_TEMPERATURE_BUFFER_MSG0": "get",
    "UNIT_THERMAL_GET_TEMPERATURE_BUFFER_MSG1": "pixel array buffer (return list)",
    "UNIT_THERMAL_GET_REFRESH_RATE_MSG0": "get",
    "UNIT_THERMAL_GET_REFRESH_RATE_MSG1": "refresh rate in Hz (return int)",
    "UNIT_THERMAL_SET_REFRESH_RATE_MSG0": "set refresh rate",
    "UNIT_THERMAL_SET_REFRESH_RATE_MSG1": "in Hz",
    "UNIT_THERMAL_UPDATE_TEMPERATURE_BUFFER_MSG0": "update temperature pixel buffer (in loop)",
    "UNIT_DAC2_INIT_MSG0": "Init",
    "UNIT_DAC2_INIT_MSG1": "I2C address",
    "UNIT_DAC2_INIT_MSG2": "(0x0 ~ 0x7f)",
    "UNIT_DAC2_SET_VOLTAGE_RANGE_MSG0": "Set",
    "UNIT_DAC2_SET_VOLTAGE_RANGE_MSG1": "output voltage range",
    "UNIT_DAC2_SET_VOLTAGE_MSG0": "Set",
    "UNIT_DAC2_SET_VOLTAGE_MSG1": "channel",
    "UNIT_DAC2_SET_VOLTAGE_MSG2": "output voltage",
    "UNIT_DAC2_SET_VOLTAGE_MSG3": "(V)",
    "UNIT_DAC2_SET_VOLTAGE_BOTH_MSG0": "Set",
    "UNIT_DAC2_SET_VOLTAGE_BOTH_MSG1": "channel0 output voltage",
    "UNIT_DAC2_SET_VOLTAGE_BOTH_MSG2": "(V)",
    "UNIT_DAC2_SET_VOLTAGE_BOTH_MSG3": "channel1 output voltage",
    "UNIT_DAC2_SET_VOLTAGE_BOTH_MSG4": "(V)",
    "UNIT_MINISCALES_INIT_MSG0": "初期化",
    "UNIT_MINISCALES_GET_ADC_MSG0": "",
    "UNIT_MINISCALES_GET_ADC_MSG1": "生ADC値(int)",
    "UNIT_MINISCALES_GET_WEIGHT_MSG0": "",
    "UNIT_MINISCALES_GET_WEIGHT_MSG1": "重さ(g:float)",
    "UNIT_MINISCALES_GET_BUTTON_MSG0": "",
    "UNIT_MINISCALES_GET_BUTTON_MSG1": "ボタンの状態(True or False)",
    "UNIT_MINISCALES_GET_LOW_PASS_FILTER_MSG0": "",
    "UNIT_MINISCALES_GET_LOW_PASS_FILTER_MSG1": "ローパスフィルタの状態(True or False)",
    "UNIT_MINISCALES_GET_AVERAGE_FILTER_LEVEL_MSG0": "",
    "UNIT_MINISCALES_GET_AVERAGE_FILTER_LEVEL_MSG1": "平均フィルタレベル(0 ~ 50)",
    "UNIT_MINISCALES_GET_EMA_FILTER_ALPHA_MSG0": "",
    "UNIT_MINISCALES_GET_EMA_FILTER_ALPHA_MSG1": "EMAフィルタのalpha値(0 ~ 99)",
    "UNIT_MINISCALES_RESET_MSG0": "リセット",
    "UNIT_MINISCALES_SET_LOW_PASS_FILTER_MSG0": "ローパスフィルタを設定",
    "UNIT_MINISCALES_SET_AVERAGE_FILTER_MSG0": "平均フィルタレベル(0 ~ 50)を設定",
    "UNIT_MINISCALES_SET_AVERAGE_FILTER_MSG1": "",
    "UNIT_MINISCALES_SET_EMA_FILTER_ALPHA_MSG0": "EMAフィルタのalpha値(0 ~ 99)を設定",
    "UNIT_MINISCALES_SET_EMA_FILTER_ALPHA_MSG1": "",
    "UNIT_MINISCALES_SET_RGB_LED_COLOR_MSG0": "RGB LEDの色を設定",
    "UNIT_MINISCALES_CALIBRATE_MSG0": "キャリブレーション",
    "UNIT_MINISCALES_CALIBRATE_MSG1": "weight1 (グラムで)",
    "UNIT_MINISCALES_CALIBRATE_MSG2": "weight1 adc",
    "UNIT_MINISCALES_CALIBRATE_MSG3": "weight2 (グラムで)",
    "UNIT_MINISCALES_CALIBRATE_MSG4": "weight2 adc",
    "UNIT_SYNTH_INIT_MSG0": "Init",
    "UNIT_SYNTH_INIT_MSG1": "UART",
    "UNIT_SYNTH_SET_NOTE_ON_MSG0": "set note on channel",
    "UNIT_SYNTH_SET_NOTE_ON_MSG1": "pitch",
    "UNIT_SYNTH_SET_NOTE_ON_MSG2": "(0 ~ 127)",
    "UNIT_SYNTH_SET_NOTE_ON_MSG3": "velocity",
    "UNIT_SYNTH_SET_NOTE_ON_MSG4": "(0 ~ 127)",
    "UNIT_SYNTH_SET_NOTE_ON_PITCH_MSG0": "set note on channel",
    "UNIT_SYNTH_SET_NOTE_ON_PITCH_MSG1": "pitch",
    "UNIT_SYNTH_SET_NOTE_ON_PITCH_MSG2": "velocity",
    "UNIT_SYNTH_SET_NOTE_ON_PITCH_MSG3": "(0 ~ 127)",
    "UNIT_SYNTH_SET_NOTE_OFF_MSG0": "set note off channel",
    "UNIT_SYNTH_SET_NOTE_OFF_MSG1": "pitch",
    "UNIT_SYNTH_SET_NOTE_OFF_MSG2": "(0 ~ 127)",
    "UNIT_SYNTH_SET_CHANGE_INSTRUMENT_MSG0": "set instrument bank",
    "UNIT_SYNTH_SET_CHANGE_INSTRUMENT_MSG1": "channel",
    "UNIT_SYNTH_SET_CHANGE_INSTRUMENT_MSG2": "program",
    "UNIT_SYNTH_SET_CHANGE_INSTRUMENT_MSG3": "(1 ~ 128)",
    "UNIT_SYNTH_SET_INSTRUMENT_GENERAL_MIDI_MSG0": "set general instrument channel",
    "UNIT_SYNTH_SET_INSTRUMENT_GENERAL_MIDI_MSG1": "name",
    "UNIT_SYNTH_SET_INSTRUMENT_VARIATION_MSG0": "set MT-32 instrument channel",
    "UNIT_SYNTH_SET_INSTRUMENT_VARIATION_MSG1": "name",
    "UNIT_SYNTH_SET_DRUMS_INSTRUMENT_MSG0": "set drums instrument name",
    "UNIT_SYNTH_SET_DRUMS_INSTRUMENT_MSG1": "velocity",
    "UNIT_SYNTH_SET_DRUMS_INSTRUMENT_MSG2": "(0 ~ 127)",
    "UNIT_SYNTH_SET_PITCH_BEND_MSG0": "set pitch bend channel",
    "UNIT_SYNTH_SET_PITCH_BEND_MSG1": "value",
    "UNIT_SYNTH_SET_PITCH_BEND_MSG2": "(0 ~ 1023)",
    "UNIT_SYNTH_SET_PITCH_BEND_RANGE_MSG0": "set pitch bend range channel",
    "UNIT_SYNTH_SET_PITCH_BEND_RANGE_MSG1": "value",
    "UNIT_SYNTH_SET_PITCH_BEND_RANGE_MSG2": "(0 ~ 255)",
    "UNIT_SYNTH_MIDI_RESET_MSG0": "reset",
    "UNIT_SYNTH_SET_CHANNEL_VOLUME_MSG0": "set channel",
    "UNIT_SYNTH_SET_CHANNEL_VOLUME_MSG1": "volume",
    "UNIT_SYNTH_SET_CHANNEL_VOLUME_MSG2": "(0 ~ 127)",
    "UNIT_SYNTH_SET_ALL_NOTES_OFF_MSG0": "set all notes off channel",
    "UNIT_SYNTH_SET_MASTER_VOLUME_MSG0": "set master volume",
    "UNIT_SYNTH_SET_MASTER_VOLUME_MSG1": "(0 ~ 127)",
    "UNIT_SYNTH_SET_ALL_DRUMS_MSG0": "set all channels drums",
    "UNIT_SYNTH_SET_REVERB_MSG0": "set reverb",
    "UNIT_SYNTH_SET_REVERB_MSG1": "channel",
    "UNIT_SYNTH_SET_REVERB_MSG2": "program",
    "UNIT_SYNTH_SET_REVERB_MSG3": "level (0 ~ 127)",
    "UNIT_SYNTH_SET_REVERB_MSG4": "delay feedback (0 ~ 255)",
    "UNIT_SYNTH_SET_CHORUS_MSG0": "set chorus",
    "UNIT_SYNTH_SET_CHORUS_MSG1": "channel",
    "UNIT_SYNTH_SET_CHORUS_MSG2": "program",
    "UNIT_SYNTH_SET_CHORUS_MSG3": "level (0 ~ 127)",
    "UNIT_SYNTH_SET_CHORUS_MSG4": "feedback (0 ~ 255)",
    "UNIT_SYNTH_SET_CHORUS_MSG5": "chorus delay (0 ~ 255)",
    "UNIT_SYNTH_SET_PAN_MSG0": "set pan channel",
    "UNIT_SYNTH_SET_PAN_MSG1": "value",
    "UNIT_SYNTH_SET_PAN_MSG2": "(0 ~ 127)",
    "UNIT_SYNTH_SET_EQUALIZER_MSG0": "set equalizer",
    "UNIT_SYNTH_SET_EQUALIZER_MSG1": "channel",
    "UNIT_SYNTH_SET_EQUALIZER_MSG2": "band (0 ~ 127)",
    "UNIT_SYNTH_SET_EQUALIZER_MSG3": "low band",
    "UNIT_SYNTH_SET_EQUALIZER_MSG4": "medium low band",
    "UNIT_SYNTH_SET_EQUALIZER_MSG5": "medium high band",
    "UNIT_SYNTH_SET_EQUALIZER_MSG6": "high band",
    "UNIT_SYNTH_SET_EQUALIZER_MSG7": "freq (0 ~ 127)",
    "UNIT_SYNTH_SET_EQUALIZER_MSG8": "low freq",
    "UNIT_SYNTH_SET_EQUALIZER_MSG9": "medium low freq",
    "UNIT_SYNTH_SET_EQUALIZER_MSG10": "medium high freq",
    "UNIT_SYNTH_SET_EQUALIZER_MSG11": "high freq",
    "UNIT_SYNTH_SET_TUNING_MSG0": "set tuning",
    "UNIT_SYNTH_SET_TUNING_MSG1": "channel",
    "UNIT_SYNTH_SET_TUNING_MSG2": "fine tuning (0 ~ 127)",
    "UNIT_SYNTH_SET_TUNING_MSG3": "coarse tuning (0 ~ 127)",
    "UNIT_SYNTH_SET_VIBRATE_MSG0": "set vibrate",
    "UNIT_SYNTH_SET_VIBRATE_MSG1": "channel",
    "UNIT_SYNTH_SET_VIBRATE_MSG2": "rate (0 ~ 127)",
    "UNIT_SYNTH_SET_VIBRATE_MSG3": "depth (0 ~ 127)",
    "UNIT_SYNTH_SET_VIBRATE_MSG4": "delay (0 ~ 127)",
    "UNIT_SYNTH_SET_TVF_MSG0": "set TVF",
    "UNIT_SYNTH_SET_TVF_MSG1": "channel",
    "UNIT_SYNTH_SET_TVF_MSG2": "cutoff freq (0 ~ 127)",
    "UNIT_SYNTH_SET_TVF_MSG3": "resonance (0 ~ 127)",
    "UNIT_SYNTH_SET_ENVELOPE_MSG0": "set envelope time",
    "UNIT_SYNTH_SET_ENVELOPE_MSG1": "channel",
    "UNIT_SYNTH_SET_ENVELOPE_MSG2": "attack (0 ~ 127)",
    "UNIT_SYNTH_SET_ENVELOPE_MSG3": "decay (0 ~ 127)",
    "UNIT_SYNTH_SET_ENVELOPE_MSG4": "release (0 ~ 127)",
    "UNIT_SYNTH_SET_SCALE_TUNING_MSG0": "set scale tuning",
    "UNIT_SYNTH_SET_SCALE_TUNING_MSG1": "channel",
    "UNIT_SYNTH_SET_MOD_WHEEL_MSG0": "set modulation wheel",
    "UNIT_SYNTH_SET_MOD_WHEEL_MSG1": "channel",
    "UNIT_SYNTH_SET_MOD_WHEEL_MSG2": "pitch (0 ~ 127)",
    "UNIT_SYNTH_SET_MOD_WHEEL_MSG3": "TVT cutoff (0 ~ 127)",
    "UNIT_SYNTH_SET_MOD_WHEEL_MSG4": "amplitude (0 ~ 127)",
    "UNIT_SYNTH_SET_MOD_WHEEL_MSG5": "rate (0 ~ 127)",
    "UNIT_SYNTH_SET_MOD_WHEEL_MSG6": "pitch depth (0 ~ 127)",
    "UNIT_SYNTH_SET_MOD_WHEEL_MSG7": "TVF depth (0 ~ 127)",
    "UNIT_SYNTH_SET_MOD_WHEEL_MSG8": "TVA depth (0 ~ 127)",
    "UNIT_SERVOS8_INIT_MSG0": "Init",
    "UNIT_SERVOS8_INIT_MSG1": "I2C address",
    "UNIT_SERVOS8_INIT_MSG2": "(0x01 ~ 0x7f)",
    "UNIT_SERVOS8_GET_MODE_MSG0": "get",
    "UNIT_SERVOS8_GET_MODE_MSG1": "channel",
    "UNIT_SERVOS8_GET_MODE_MSG2": "config mode (return 0 ~ 5)",
    "UNIT_SERVOS8_SET_MODE_MSG0": "set channel",
    "UNIT_SERVOS8_SET_MODE_MSG1": "config mode",
    "UNIT_SERVOS8_GET_DIGITAL_INPUT_MSG0": "get",
    "UNIT_SERVOS8_GET_DIGITAL_INPUT_MSG1": "channel",
    "UNIT_SERVOS8_GET_DIGITAL_INPUT_MSG2": "digital input value (return True or False)",
    "UNIT_SERVOS8_SET_OUTPUT_VALUE_MSG0": "set channel",
    "UNIT_SERVOS8_SET_OUTPUT_VALUE_MSG1": "digital output value",
    "UNIT_SERVOS8_SET_OUTPUT_VALUE_MSG2": "(0 ~ 1)",
    "UNIT_SERVOS8_GET_8BIT_ADC_RAW_MSG0": "get",
    "UNIT_SERVOS8_GET_8BIT_ADC_RAW_MSG1": "channel",
    "UNIT_SERVOS8_GET_8BIT_ADC_RAW_MSG2": "8bit ADC raw value (return 0 ~ 255)",
    "UNIT_SERVOS8_GET_12BIT_ADC_RAW_MSG0": "get",
    "UNIT_SERVOS8_GET_12BIT_ADC_RAW_MSG1": "channel",
    "UNIT_SERVOS8_GET_12BIT_ADC_RAW_MSG2": "12bit ADC raw value (return 0 ~ 4095)",
    "UNIT_SERVOS8_GET_SERVO_ANGLE_MSG0": "get",
    "UNIT_SERVOS8_GET_SERVO_ANGLE_MSG1": "channel",
    "UNIT_SERVOS8_GET_SERVO_ANGLE_MSG2": "servo angle value (return 0 ~ 180)",
    "UNIT_SERVOS8_GET_SERVO_PULSE_MSG0": "get",
    "UNIT_SERVOS8_GET_SERVO_PULSE_MSG1": "channel",
    "UNIT_SERVOS8_GET_SERVO_PULSE_MSG2": "servo pulse value (return 500 ~ 2500)",
    "UNIT_SERVOS8_SET_SERVO_ANGLE_MSG0": "set channel",
    "UNIT_SERVOS8_SET_SERVO_ANGLE_MSG1": "servo angle",
    "UNIT_SERVOS8_SET_SERVO_ANGLE_MSG2": "(0 ~ 180)",
    "UNIT_SERVOS8_SET_SERVO_PULSE_MSG0": "set channel",
    "UNIT_SERVOS8_SET_SERVO_PULSE_MSG1": "servo pulse",
    "UNIT_SERVOS8_SET_SERVO_PULSE_MSG2": "(500 ~ 2500)",
    "UNIT_SERVOS8_GET_RGB_LED_MSG0": "get",
    "UNIT_SERVOS8_GET_RGB_LED_MSG1": "channel",
    "UNIT_SERVOS8_GET_RGB_LED_MSG2": "RGB LED color value (return [0,0,0])",
    "UNIT_SERVOS8_SET_RGB_LED_MSG0": "set channel",
    "UNIT_SERVOS8_SET_RGB_LED_MSG1": "RGB LED color",
    "UNIT_SERVOS8_SET_PWM_DUTYCYCLE_MSG0": "set channel",
    "UNIT_SERVOS8_SET_PWM_DUTYCYCLE_MSG1": "PWM duty cycle",
    "UNIT_SERVOS8_SET_PWM_DUTYCYCLE_MSG2": "%",
    "UNIT_SERVOS8_GET_INPUT_CURRENT_MSG0": "get",
    "UNIT_SERVOS8_GET_INPUT_CURRENT_MSG1": "input current value (return float)",
    "UNIT_SERVOS8_GET_DEVICE_SPEC_DETAIL_MSG0": "get",
    "UNIT_SERVOS8_GET_DEVICE_SPEC_DETAIL_MSG1": "spec detail (return int)",
    "UNIT_SERVOS8_SET_I2C_ADDRESS_MSG0": "set I2C address",
    "UNIT_SERVOS8_SET_I2C_ADDRESS_MSG1": "(0x01 ~ 0x7f)",
    "UNIT_VMETER_INIT_MSG0": "Init",
    "UNIT_VMETER_GET_GAIN_MSG0": "get",
    "UNIT_VMETER_GET_GAIN_MSG1": "ads1115 chip gain value (return int)",
    "UNIT_VMETER_GET_DATA_RATE_MSG0": "get",
    "UNIT_VMETER_GET_DATA_RATE_MSG1": "ads1115 chip data rate (return int)",
    "UNIT_VMETER_GET_OPERATION_MODE_MSG0": "get",
    "UNIT_VMETER_GET_OPERATION_MODE_MSG1": "ads1115 chip operation mode (return int)",
    "UNIT_VMETER_GET_VOLTAGE_MSG0": "get",
    "UNIT_VMETER_GET_VOLTAGE_MSG1": "voltage value (mV, return float)",
    "UNIT_VMETER_GET_ADC_RAW_MSG0": "get",
    "UNIT_VMETER_GET_ADC_RAW_MSG1": "ADC raw value (return int)",
    "UNIT_VMETER_SET_GAIN_MSG0": "set ads1115 chip gain value",
    "UNIT_VMETER_SET_DATA_RATE_MSG0": "set ads1115 chip data rate",
    "UNIT_VMETER_SET_OPERATION_MODE_MSG0": "set operation mode",
    "UNIT_VMETER_SET_MEASUREMENT_RANGE_MSG0": "set max input voltage measurement range",
    "UNIT_VMETER_SET_CALIBRATION_MSG0": "set internal calibration",
    "UNIT_AMETER_INIT_MSG0": "Init %1",
    "UNIT_AMETER_GET_GAIN_MSG0": "get %1 ads1115 chip gain value (return int)",
    "UNIT_AMETER_GET_DATA_RATE_MSG0": "get %1 ads1115 chip data rate (return int)",
    "UNIT_AMETER_GET_OPERATION_MODE_MSG0": "get %1 ads1115 chip operation mode (return int)",
    "UNIT_AMETER_GET_CURRENT_MSG0": "get %1 current value (mA, return float)",
    "UNIT_AMETER_GET_ADC_RAW_MSG0": "get %1 ADC raw value (return int)",
    "UNIT_AMETER_SET_GAIN_MSG0": "%1 set ads1115 chip gain value %2",
    "UNIT_AMETER_SET_DATA_RATE_MSG0": "%1 set ads1115 chip data rate %2",
    "UNIT_AMETER_SET_OPERATION_MODE_MSG0": "%1 set operation mode %2",
    "UNIT_AMETER_SET_MEASUREMENT_RANGE_MSG0": "%1 set max input current measurement range %2",
    "UNIT_AMETER_SET_CALIBRATION_MSG0": "%1 set internal calibration %2",
    "UNIT_LORAE220_INIT_MSG0": "Init",
    "UNIT_LORAE220_CONFIGURE_MSG0": "Configure",
    "UNIT_LORAE220_CONFIGURE_MSG1": "address (0x0000 ~ 0xFFFF)",
    "UNIT_LORAE220_CONFIGURE_MSG2": "channel (0 ~ 30)",
    "UNIT_LORAE220_CONFIGURE_MSG3": "encryption key (0x0000 ~ 0xFFFF)",
    "UNIT_LORAE220_CONFIGURE_MSG4": "data rate",
    "UNIT_LORAE220_CONFIGURE_MSG5": "subpacket Size",
    "UNIT_LORAE220_CONFIGURE_MSG6": "RSSI ambient noise flag",
    "UNIT_LORAE220_CONFIGURE_MSG7": "transmitting power",
    "UNIT_LORAE220_CONFIGURE_MSG8": "RSSI byte flag",
    "UNIT_LORAE220_CONFIGURE_MSG9": "transmission method type",
    "UNIT_LORAE220_CONFIGURE_MSG10": "LBT flag",
    "UNIT_LORAE220_CONFIGURE_MSG11": "WOR cycle",
    "UNIT_LORAE220_START_RECEIVE_MSG0": "start receive data",
    "UNIT_LORAE220_STOP_RECEIVE_MSG0": "stop receive data",
    "UNIT_LORAE220_RECEIVE_MSG0": "receive data timeout",
    "UNIT_LORAE220_RECEIVE_MSG1": "ms (return list [data, rssi])",
    "UNIT_LORAE220_SEND_LINE_MSG0": "send a line",
    "UNIT_LORAE220_SEND_RAW_DATA_MSG0": "send Raw Data",
    "UNIT_LORAE220_SEND_MSG0": "send",
    "UNIT_LORAE220_SEND_MSG1": "address",
    "UNIT_LORAE220_SEND_MSG2": "(0x0000 ~ 0xFFFF)",
    "UNIT_LORAE220_SEND_MSG3": "channel",
    "UNIT_LORAE220_SEND_MSG4": "(0 ~ 30)",
    "UNIT_LORAE220_RECEIVE_DATA_EVENT_MSG0": "When",
    "UNIT_LORAE220_RECEIVE_DATA_EVENT_MSG1": "receive data (bytes)",
    "UNIT_LORAE220_RECEIVE_DATA_EVENT_MSG2": "RSSI (in dB)",
    "UNIT_LORAE220_RECEIVE_DATA_STR_EVENT_MSG1": "receive data (string)",
    "UNIT_RTC_INIT_MSG0": "Init",
    "UNIT_RTC_GET_DATE_TIME_MSG0": "get",
    "UNIT_RTC_GET_DATE_TIME_MSG1": "value (return int)",
    "UNIT_RTC_GET_TIMER_VALUE_MSG0": "get",
    "UNIT_RTC_GET_TIMER_VALUE_MSG1": "timer value (return 0 ~ 255)",
    "UNIT_RTC_SET_DATE_TIME_MSG0": "set time",
    "UNIT_RTC_SET_DATE_TIME_MSG1": "year",
    "UNIT_RTC_SET_DATE_TIME_MSG2": "month",
    "UNIT_RTC_SET_DATE_TIME_MSG3": "date",
    "UNIT_RTC_SET_DATE_TIME_MSG4": "weekday",
    "UNIT_RTC_SET_DATE_TIME_MSG5": "hour",
    "UNIT_RTC_SET_DATE_TIME_MSG6": "minute",
    "UNIT_RTC_SET_DATE_TIME_MSG7": "second",
    "UNIT_RTC_CHECK_IF_ALARM_ON_MSG0": "check if alarm on (return True or False)",
    "UNIT_RTC_CHECK_IF_TIMER_ON_MSG0": "check if timer on (return True or False)",
    "UNIT_RTC_TURN_OFF_ALARM_MSG0": "turn off alarm",
    "UNIT_RTC_TURN_OFF_TIMER_MSG0": "turn off timer",
    "UNIT_RTC_CLEAR_ALARM_FLAG_MSG0": "clear alarm flag",
    "UNIT_RTC_CLEAR_TIMER_FLAG_MSG0": "clear timer flag",
    "UNIT_RTC_SET_DAILY_ALARM_MSG0": "set daily alarm",
    "UNIT_RTC_SET_DAILY_ALARM_MSG1": "hour",
    "UNIT_RTC_SET_DAILY_ALARM_MSG2": "minute",
    "UNIT_RTC_SET_DAILY_ALARM_MSG3": "date",
    "UNIT_RTC_SET_DAILY_ALARM_MSG4": "weekday",
    "UNIT_RTC_SET_TIMER_MODE_MSG0": "set timer mode",
    "UNIT_RTC_SET_TIMER_MODE_MSG1": "value",
    "UNIT_RTC_SET_TIMER_MODE_MSG2": "(0 ~ 255)",
    "UNIT_RTC_SET_INTERNET_TIME_MSG0": "set date and time",
    "UNIT_RTC_SET_INTERNET_TIME_MSG1": "by NTP server host",
    "UNIT_RTC_SET_INTERNET_TIME_MSG2": "time zone",
    "UNIT_RTC_TIME_ZONE_MSG0": "hours",
    "UNIT_RTC_TIME_ZONE_MSG1": "minutes",
    "UNIT_WEIGHTI2C_INIT_MSG0": "Init",
    "UNIT_WEIGHTI2C_INIT_MSG1": "I2C address",
    "UNIT_WEIGHTI2C_INIT_MSG2": "(0x01 ~ 0x7f)",
    "UNIT_WEIGHTI2C_GET_ADC_RAW_MSG0": "get",
    "UNIT_WEIGHTI2C_GET_ADC_RAW_MSG1": "ADC raw value (return int)",
    "UNIT_WEIGHTI2C_GET_WEIGHT_FLOAT_MSG0": "get",
    "UNIT_WEIGHTI2C_GET_WEIGHT_FLOAT_MSG1": "weight in float (return float)",
    "UNIT_WEIGHTI2C_GET_WEIGHT_INT_MSG0": "get",
    "UNIT_WEIGHTI2C_GET_WEIGHT_INT_MSG1": "weight in int (return int)",
    "UNIT_WEIGHTI2C_GET_WEIGHT_STR_MSG0": "get",
    "UNIT_WEIGHTI2C_GET_WEIGHT_STR_MSG1": "weight in string (return string)",
    "UNIT_WEIGHTI2C_GET_LOWPASS_FILTER_MSG0": "get",
    "UNIT_WEIGHTI2C_GET_LOWPASS_FILTER_MSG1": "low pass filter (return True or False)",
    "UNIT_WEIGHTI2C_GET_AVERAGE_FILTER_LEVEL_MSG0": "get",
    "UNIT_WEIGHTI2C_GET_AVERAGE_FILTER_LEVEL_MSG1": "average filter level (return int)",
    "UNIT_WEIGHTI2C_GET_EMA_FILTER_ALPHA_MSG0": "get",
    "UNIT_WEIGHTI2C_GET_EMA_FILTER_ALPHA_MSG1": "EMA filter alpha (return int)",
    "UNIT_WEIGHTI2C_GET_DEVICE_SPEC_MSG0": "get",
    "UNIT_WEIGHTI2C_GET_DEVICE_SPEC_MSG1": "spec detail (return int)",
    "UNIT_WEIGHTI2C_SET_RESET_OFFSET_MSG0": "reset offset value (Tare)",
    "UNIT_WEIGHTI2C_SET_CALIBRATE_MSG0": "set calibration",
    "UNIT_WEIGHTI2C_SET_CALIBRATE_MSG1": "zero weight in grams",
    "UNIT_WEIGHTI2C_SET_CALIBRATE_MSG2": "zero weight adc",
    "UNIT_WEIGHTI2C_SET_CALIBRATE_MSG3": "load weight in grams",
    "UNIT_WEIGHTI2C_SET_CALIBRATE_MSG4": "load weight adc",
    "UNIT_WEIGHTI2C_SET_LOW_PASS_FILTER_MSG0": "set low pass filter",
    "UNIT_WEIGHTI2C_SET_AVERAGE_FILTER_LEVEL_MSG0": "set average filter level value",
    "UNIT_WEIGHTI2C_SET_AVERAGE_FILTER_LEVEL_MSG1": "(0 ~ 50)",
    "UNIT_WEIGHTI2C_SET_EMA_FILTER_ALPHA_MSG0": "set EMA filter alpha value",
    "UNIT_WEIGHTI2C_SET_EMA_FILTER_ALPHA_MSG1": "(0 ~ 99)",
    "UNIT_WEIGHTI2C_SET_I2C_ADDRESS_MSG0": "set I2C address",
    "UNIT_WEIGHTI2C_SET_I2C_ADDRESS_MSG1": "(0x01 ~ 0x7f)",
    "UNIT_KMETERISO_INIT_MSG0": "Init",
    "UNIT_KMETERISO_INIT_MSG1": "I2C address",
    "UNIT_KMETERISO_INIT_MSG2": "(0x01 ~ 0x7f)",
    "UNIT_KMETERISO_GET_THERMO_MSG0": "get",
    "UNIT_KMETERISO_GET_THERMO_MSG1": "sensor temperature format",
    "UNIT_KMETERISO_GET_THERMO_MSG2": "(return float)",
    "UNIT_KMETERISO_GET_INTERNAL_MSG0": "get",
    "UNIT_KMETERISO_GET_INTERNAL_MSG1": "internal temperature format",
    "UNIT_KMETERISO_GET_INTERNAL_MSG2": "(return float)",
    "UNIT_KMETERISO_GET_DATA_AVAILABLE_STATUS_MSG0": "get",
    "UNIT_KMETERISO_GET_DATA_AVAILABLE_STATUS_MSG1": "data is available status (return True or False)",
    "UNIT_KMETERISO_GET_KMETER_THERMO_STRING_MSG0": "get",
    "UNIT_KMETERISO_GET_KMETER_THERMO_STRING_MSG1": "sensor temperature format",
    "UNIT_KMETERISO_GET_KMETER_THERMO_STRING_MSG2": "(return string)",
    "UNIT_KMETERISO_GET_KMETER_INTERNAL_STRING_MSG0": "get",
    "UNIT_KMETERISO_GET_KMETER_INTERNAL_STRING_MSG1": "internal temperature format",
    "UNIT_KMETERISO_GET_KMETER_INTERNAL_STRING_MSG2": "(return string)",
    "UNIT_KMETERISO_GET_DEVICE_SPEC_MSG0": "get",
    "UNIT_KMETERISO_GET_DEVICE_SPEC_MSG1": "spec detail (return int)",
    "UNIT_KMETERISO_SET_I2C_ADDRESS_MSG0": "set I2C address",
    "UNIT_KMETERISO_SET_I2C_ADDRESS_MSG1": "(0x01 ~ 0x7f)",
    "UNIT_THERMAL2_INIT_MSG0": "Init",
    "UNIT_THERMAL2_GET_BUTTON_STATE_MSG0": "get",
    "UNIT_THERMAL2_GET_BUTTON_STATE_MSG1": "button",
    "UNIT_THERMAL2_GET_BUTTON_STATE_MSG2": "state (return True or False)",
    "UNIT_THERMAL2_GET_TEMP_ALARM_STATUS_MSG0": "get",
    "UNIT_THERMAL2_GET_TEMP_ALARM_STATUS_MSG1": "temperature alarm status (return 0 ~ 255)",
    "UNIT_THERMAL2_GET_DEVICE_DETAIL_MSG0": "get",
    "UNIT_THERMAL2_GET_DEVICE_DETAIL_MSG1": "device",
    "UNIT_THERMAL2_GET_DEVICE_DETAIL_MSG2": "detail (return int)",
    "UNIT_THERMAL2_GET_I2C_ADDR_MSG0": "get",
    "UNIT_THERMAL2_GET_I2C_ADDR_MSG1": "I2C address",
    "UNIT_THERMAL2_GET_I2C_ADDR_MSG2": "(return int)",
    "UNIT_THERMAL2_GET_FUNC_CTRL_MSG0": "get",
    "UNIT_THERMAL2_GET_FUNC_CTRL_MSG1": "function control (return 0 ~ 7)",
    "UNIT_THERMAL2_GET_REFRESH_RATE_MSG0": "get",
    "UNIT_THERMAL2_GET_REFRESH_RATE_MSG1": "refresh rate in Hz (return 0 ~ 7)",
    "UNIT_THERMAL2_GET_NOISE_FILTER_MSG0": "get",
    "UNIT_THERMAL2_GET_NOISE_FILTER_MSG1": "noise filter range (return 0 ~ 15)",
    "UNIT_THERMAL2_GET_TEMP_MONITOR_MSG0": "get",
    "UNIT_THERMAL2_GET_TEMP_MONITOR_MSG1": "temperature monitor",
    "UNIT_THERMAL2_GET_TEMP_MONITOR_MSG2": "size (return 0 ~ 15)",
    "UNIT_THERMAL2_GET_BUZZER_FREQ_MSG0": "get",
    "UNIT_THERMAL2_GET_BUZZER_FREQ_MSG1": "buzzer frequency in Hz (return 20 ~ 20000)",
    "UNIT_THERMAL2_GET_BUZZER_DUTY_MSG0": "get",
    "UNIT_THERMAL2_GET_BUZZER_DUTY_MSG1": "buzzer dutycycle (return 0 ~ 255)",
    "UNIT_THERMAL2_GET_TEMP_THRESHOLD_MSG0": "get",
    "UNIT_THERMAL2_GET_TEMP_THRESHOLD_MSG1": "temperature threshold value (return int)",
    "UNIT_THERMAL2_GET_TEMP_ALARM_BUZZER_FREQ_MSG0": "get",
    "UNIT_THERMAL2_GET_TEMP_ALARM_BUZZER_FREQ_MSG1": "temperature alarm buzzer frequency (return int)",
    "UNIT_THERMAL2_GET_TEMP_ALARM_INTERVAL_MSG0": "get",
    "UNIT_THERMAL2_GET_TEMP_ALARM_INTERVAL_MSG1": "temperature alarm interval in ms (return int)",
    "UNIT_THERMAL2_GET_TEMP_ALARM_LED_MSG0": "get",
    "UNIT_THERMAL2_GET_TEMP_ALARM_LED_MSG1": "temperature alarm RGB LED color (return list)",
    "UNIT_THERMAL2_GET_DATA_REFRESH_CTRL_MSG0": "get",
    "UNIT_THERMAL2_GET_DATA_REFRESH_CTRL_MSG1": "data refresh control (return 0 or 1)",
    "UNIT_THERMAL2_GET_TEMP_MEASURE_MSG0": "get",
    "UNIT_THERMAL2_GET_TEMP_MEASURE_MSG1": "temperature value in °C (return float)",
    "UNIT_THERMAL2_GET_DIFFERENTIAL_TEMP_MEASURE_MSG0": "get",
    "UNIT_THERMAL2_GET_DIFFERENTIAL_TEMP_MEASURE_MSG1": "differential temperature value in °C (return float)",
    "UNIT_THERMAL2_GET_TEMP_DIFFERENTIAL_MSG0": "get",
    "UNIT_THERMAL2_GET_TEMP_DIFFERENTIAL_MSG1": "differential",
    "UNIT_THERMAL2_GET_TEMP_DIFFERENTIAL_MSG2": "position value (return int)",
    "UNIT_THERMAL2_SET_FUNC_CTRL_MSG0": "set function",
    "UNIT_THERMAL2_SET_FUNC_CTRL_MSG1": "control",
    "UNIT_THERMAL2_SET_REFRESH_RATE_MSG0": "set refresh rate",
    "UNIT_THERMAL2_SET_REFRESH_RATE_MSG1": "in Hz",
    "UNIT_THERMAL2_SET_NOISE_FILTER_MSG0": "set noise filter range",
    "UNIT_THERMAL2_SET_NOISE_FILTER_MSG1": "(0 ~ 15)",
    "UNIT_THERMAL2_SET_TEMP_MONITOR_MSG0": "set temperature monitor width",
    "UNIT_THERMAL2_SET_TEMP_MONITOR_MSG1": "(0 ~ 15) height",
    "UNIT_THERMAL2_SET_TEMP_MONITOR_MSG2": "(0 ~ 15)",
    "UNIT_THERMAL2_SET_TEMP_ALARM_CTR_MSG0": "set temperature alarm",
    "UNIT_THERMAL2_SET_TEMP_ALARM_CTR_MSG1": "control",
    "UNIT_THERMAL2_SET_BUZZER_DUTY_MSG0": "set buzzer dutycycle",
    "UNIT_THERMAL2_SET_BUZZER_DUTY_MSG1": "(0 ~ 255)",
    "UNIT_THERMAL2_SET_BUZZER_FREQ_MSG0": "set buzzer frequency in Hz",
    "UNIT_THERMAL2_SET_BUZZER_FREQ_MSG1": "(20 ~ 20000)",
    "UNIT_THERMAL2_SET_RGB_LED_MSG1": "set RGB LED Color",
    "UNIT_THERMAL2_SET_TEMP_THRESHOLD_MSG0": "set",
    "UNIT_THERMAL2_SET_TEMP_THRESHOLD_MSG1": "temperature threshold value",
    "UNIT_THERMAL2_SET_ALARM_BUZZER_FREQ_MSG0": "set",
    "UNIT_THERMAL2_SET_ALARM_BUZZER_FREQ_MSG1": "temperature alarm buzzer frequency",
    "UNIT_THERMAL2_SET_TEMP_ALARM_INTERVAL_MSG0": "set",
    "UNIT_THERMAL2_SET_TEMP_ALARM_INTERVAL_MSG1": "temperature alarm interval",
    "UNIT_THERMAL2_SET_TEMP_ALARM_INTERVAL_MSG2": "ms (10 ~ 2550)",
    "UNIT_THERMAL2_SET_TEMP_ALARM_LED_MSG0": "set",
    "UNIT_THERMAL2_SET_TEMP_ALARM_LED_MSG1": "temperature RGB LED Color",
    "UNIT_NCIR2_INIT_MSG0": "Init",
    "UNIT_NCIR2_INIT_MSG1": "I2C address",
    "UNIT_NCIR2_INIT_MSG2": "(0x01 ~ 0x7f)",
    "UNIT_NCIR2_GET_TEMPERATURE_MSG0": "get",
    "UNIT_NCIR2_GET_TEMPERATURE_MSG1": "temperature value in °C (return float)",
    "UNIT_NCIR2_GET_EMISSIVITY_MSG0": "get",
    "UNIT_NCIR2_GET_EMISSIVITY_MSG1": "emissivity value (return float)",
    "UNIT_NCIR2_GET_TEMPERATURE_THRESHOLD_MSG0": "get",
    "UNIT_NCIR2_GET_TEMPERATURE_THRESHOLD_MSG1": "temperature threshold value (return float)",
    "UNIT_NCIR2_GET_TEMP_ALARM_LED_MSG0": "get",
    "UNIT_NCIR2_GET_TEMP_ALARM_LED_MSG1": "temperature alarm RGB LED color (return list)",
    "UNIT_NCIR2_GET_TEMP_BUZZER_FREQ_MSG0": "get",
    "UNIT_NCIR2_GET_TEMP_BUZZER_FREQ_MSG1": "temperature alarm buzzer frequency (return int)",
    "UNIT_NCIR2_GET_TEMP_ALARM_INTERVAL_MSG0": "get",
    "UNIT_NCIR2_GET_TEMP_ALARM_INTERVAL_MSG1": "temperature alarm interval in ms (return int)",
    "UNIT_NCIR2_GET_TEMP_BUZZER_DUTY_MSG0": "get",
    "UNIT_NCIR2_GET_TEMP_BUZZER_DUTY_MSG1": "temperature buzzer dutycycle (return 0 ~ 255)",
    "UNIT_NCIR2_GET_BUZZER_FREQ_MSG0": "get",
    "UNIT_NCIR2_GET_BUZZER_FREQ_MSG1": "buzzer frequency in Hz (return 20 ~ 20000)",
    "UNIT_NCIR2_GET_BUZZER_DUTY_MSG0": "get",
    "UNIT_NCIR2_GET_BUZZER_DUTY_MSG1": "buzzer dutycycle (return 0 ~ 255)",
    "UNIT_NCIR2_GET_BUZZER_CONTROL_MSG0": "get",
    "UNIT_NCIR2_GET_BUZZER_CONTROL_MSG1": "buzzer ON/OFF status (return True or False)",
    "UNIT_NCIR2_GET_RGB_LED_MSG0": "get",
    "UNIT_NCIR2_GET_RGB_LED_MSG1": "RGB LED color (return list)",
    "UNIT_NCIR2_GET_BUTTON_STATUS_MSG0": "get",
    "UNIT_NCIR2_GET_BUTTON_STATUS_MSG1": "button status (return True or False)",
    "UNIT_NCIR2_GET_CHIP_TEMPERATURE_MSG0": "get",
    "UNIT_NCIR2_GET_CHIP_TEMPERATURE_MSG1": "chip temperature value in °C (return float)",
    "UNIT_NCIR2_GET_DEVICE_SPEC_MSG0": "get",
    "UNIT_NCIR2_GET_DEVICE_SPEC_MSG1": "spec detail (return int)",
    "UNIT_NCIR2_SET_EMISSIVITY_VALUE_MSG0": "set emissivity",
    "UNIT_NCIR2_SET_EMISSIVITY_VALUE_MSG1": "(0.1 ~ 0.95)",
    "UNIT_NCIR2_SET_TEMP_THRESHOLD_MSG0": "set",
    "UNIT_NCIR2_SET_TEMP_THRESHOLD_MSG1": "temperature threshold",
    "UNIT_NCIR2_SET_TEMP_ALARM_LED_MSG0": "set",
    "UNIT_NCIR2_SET_TEMP_ALARM_LED_MSG1": "temperature alarm RGB LED color",
    "UNIT_NCIR2_SET_TEMP_BUZZER_FREQ_MSG0": "set",
    "UNIT_NCIR2_SET_TEMP_BUZZER_FREQ_MSG1": "temperature alarm buzzer frequency",
    "UNIT_NCIR2_SET_TEMP_BUZZER_FREQ_MSG2": "Hz",
    "UNIT_NCIR2_SET_TEMP_ALARM_INTERVAL_MSG0": "set",
    "UNIT_NCIR2_SET_TEMP_ALARM_INTERVAL_MSG1": "temperature alarm interval",
    "UNIT_NCIR2_SET_TEMP_ALARM_INTERVAL_MSG2": "ms",
    "UNIT_NCIR2_SET_TEMP_BUZZER_DUTY_MSG0": "set",
    "UNIT_NCIR2_SET_TEMP_BUZZER_DUTY_MSG1": "temperature buzzer dutycycle",
    "UNIT_NCIR2_SET_BUZZER_FREQ_MSG0": "set buzzer frequency",
    "UNIT_NCIR2_SET_BUZZER_FREQ_MSG1": "Hz",
    "UNIT_NCIR2_SET_BUZZER_DUTY_MSG0": "set buzzer dutycycle",
    "UNIT_NCIR2_SET_BUZZER_CONTROL_MSG0": "set buzzer control",
    "UNIT_NCIR2_SET_RGB_LED_MSG0": "set RGB LED Color",
    "UNIT_NCIR2_SAVE_CONFIG_SETTING_MSG0": "save current configure settings",
    "UNIT_NCIR2_SET_I2C_ADDR_MSG0": "set I2C address",
    "UNIT_NCIR2_SET_I2C_ADDR_MSG1": "(0x01 ~ 0x7f)",
    "UNIT_TOF4M_INIT_MSG0": "Init",
    "UNIT_TOF4M_INIT_MSG1": "I2C address",
    "UNIT_TOF4M_INIT_MSG2": "(0x01 ~ 0x7f)",
    "UNIT_TOF4M_GET_DISTANCE_MSG0": "get",
    "UNIT_TOF4M_GET_DISTANCE_MSG1": "target distance in mm (return int)",
    "UNIT_TOF4M_GET_MEASUREMENT_TIMING_BUDGET_MSG0": "get",
    "UNIT_TOF4M_GET_MEASUREMENT_TIMING_BUDGET_MSG1": "measurement timing budget (return int)",
    "UNIT_TOF4M_GET_DISTANCE_MODE_MSG0": "get",
    "UNIT_TOF4M_GET_DISTANCE_MODE_MSG1": "distance mode (return int)",
    "UNIT_TOF4M_GET_DATA_READY_MSG0": "get",
    "UNIT_TOF4M_GET_DATA_READY_MSG1": "data ready (return int)",
    "UNIT_TOF4M_SET_CONTINUOUS_START_MEASUREMENT_MSG0": "set continuous start measurement",
    "UNIT_TOF4M_SET_CONTINUOUS_STOP_MEASUREMENT_MSG0": "set continuous stop measurement",
    "UNIT_TOF4M_SET_MEASUREMENT_TIMING_BUDGET_MSG0": "set measurement timing budget",
    "UNIT_TOF4M_SET_DISTANCE_MODE_MSG0": "set distance",
    "UNIT_TOF4M_SET_DISTANCE_MODE_MSG1": "mode",
    "UNIT_TOF4M_SET_I2C_ADDRESS_MSG0": "set I2C address",
    "UNIT_TOF4M_SET_I2C_ADDRESS_MSG1": "(0x01 ~ 0x7f)",
    "UNIT_ANGLE8_INIT_MSG0": "Init",
    "UNIT_ANGLE8_INIT_MSG1": "I2C address",
    "UNIT_ANGLE8_INIT_MSG2": "(0x01 ~ 0x7f)",
    "UNIT_ANGLE8_GET_SWITCH_STATUS_MSG0": "get",
    "UNIT_ANGLE8_GET_SWITCH_STATUS_MSG1": "switch status (return True or False)",
    "UNIT_ANGLE8_GET_ADC12_RAW_MSG0": "get",
    "UNIT_ANGLE8_GET_ADC12_RAW_MSG1": "channel",
    "UNIT_ANGLE8_GET_ADC12_RAW_MSG2": "12 bit adc value (return int)",
    "UNIT_ANGLE8_GET_ADC8_RAW_MSG0": "get",
    "UNIT_ANGLE8_GET_ADC8_RAW_MSG1": "channel",
    "UNIT_ANGLE8_GET_ADC8_RAW_MSG2": "8 bit adc value (return int)",
    "UNIT_ANGLE8_GET_DEVICE_SPEC_DETAIL_MSG0": "get",
    "UNIT_ANGLE8_GET_DEVICE_SPEC_DETAIL_MSG1": "spec detail (return int)",
    "UNIT_ANGLE8_SET_I2C_ADDR_MSG0": "Set",
    "UNIT_ANGLE8_SET_I2C_ADDR_MSG1": "I2C address",
    "UNIT_ANGLE8_SET_I2C_ADDR_MSG2": "(0x01 ~ 0x7f)",
    "UNIT_ANGLE8_SET_RGB_LED_MSG0": "Set",
    "UNIT_ANGLE8_SET_RGB_LED_MSG1": "channel",
    "UNIT_ANGLE8_SET_RGB_LED_MSG2": "RGB LED color",
    "UNIT_ANGLE8_SET_RGB_LED_MSG3": "brightness (0 ~ 100)",
    "UNIT_ANGLE8_FROM_TO_CHANNEL_MSG0": "begin",
    "UNIT_ANGLE8_FROM_TO_CHANNEL_MSG1": "to end",
    "UNIT_ANGLE8_SET_RGB_LED_FROM_MSG0": "Set",
    "UNIT_ANGLE8_SET_RGB_LED_FROM_MSG1": "channel",
    "UNIT_ANGLE8_SET_RGB_LED_FROM_MSG2": "RGB LED color",
    "UNIT_ANGLE8_SET_RGB_LED_FROM_MSG3": "brightness (0 ~ 100)",
    "UNIT_ANGLE8_SET_RGB_LED_FROM_MSG4": "delay (ms)",
    "UNIT_ANGLE8_SET_ANGLE_SYNC_BRIGHT_MSG0": "Set",
    "UNIT_ANGLE8_SET_ANGLE_SYNC_BRIGHT_MSG1": "angle control brightness",
    "UNIT_ANGLE8_SET_ANGLE_SYNC_BRIGHT_MSG2": "channel",
    "UNIT_ANGLE8_SET_ANGLE_SYNC_BRIGHT_MSG3": "RGB LED color",
    "UNIT_CO2_INIT_MSG0": "Init",
    "UNIT_CO2_IS_DATA_READY_MSG0": "is sensor data ready (return True or False)",
    "UNIT_CO2_GET_VALUE_MSG0": "get",
    "UNIT_CO2_GET_VALUE_MSG1": "value in ppm (return int, 400 ~ 2000)",
    "UNIT_CO2_GET_TEMPERATURE_MSG0": "get",
    "UNIT_CO2_GET_TEMPERATURE_MSG1": "temperature in °C (return float, -10 ~ 60)",
    "UNIT_CO2_GET_HUMIDITY_MSG0": "get",
    "UNIT_CO2_GET_HUMIDITY_MSG1": "humidity in RH% (return float, 0 ~ 100)",
    "UNIT_CO2_GET_TEMPERATURE_OFFSET_MSG0": "get",
    "UNIT_CO2_GET_TEMPERATURE_OFFSET_MSG1": "temperature offset in °C (return float)",
    "UNIT_CO2_GET_SENSOR_ALTITUDE_MSG0": "get",
    "UNIT_CO2_GET_SENSOR_ALTITUDE_MSG1": "sensor altitude in meters (return int)",
    "UNIT_CO2_GET_CALIBRATION_ENABLED_MSG0": "get",
    "UNIT_CO2_GET_CALIBRATION_ENABLED_MSG1": "automatic self calibration enabled (return True or False)",
    "UNIT_CO2_GET_SERIAL_NUMBER_MSG0": "get",
    "UNIT_CO2_GET_SERIAL_NUMBER_MSG1": "serial number (return tuple)",
    "UNIT_CO2_SET_START_PERIODIC_MEASUREMENT_MSG0": "set start periodic measurement",
    "UNIT_CO2_SET_STOP_PERIODIC_MEASUREMENT_MSG0": "set stop periodic measurement",
    "UNIT_CO2_SET_TEMPERATURE_OFFSET_MSG0": "set temperature offset",
    "UNIT_CO2_SET_TEMPERATURE_OFFSET_MSG1": "in °C",
    "UNIT_CO2_SET_SENSOR_ALTITUDE_MSG0": "set sensor altitude",
    "UNIT_CO2_SET_SENSOR_ALTITUDE_MSG1": "in meters",
    "UNIT_CO2_SET_AMBIENT_PRESSURE_MSG0": "set ambient pressure",
    "UNIT_CO2_SET_AMBIENT_PRESSURE_MSG1": "in hPa",
    "UNIT_CO2_SET_FORCE_CALIBRATION_MSG0": "set perform force calibration in co2 value",
    "UNIT_CO2_SET_CALIBRATION_ENABLED_MSG0": "set automatic self calibration",
    "UNIT_CO2_SET_START_LOW_PERIODIC_MEASUREMENT_MSG0": "set start low periodic measurement",
    "UNIT_CO2_SAVE_TO_EEPROM_MSG0": "save current configure settings to eeprom",
    "UNIT_CO2_SET_SELF_TEST_MSG0": "set perform self test",
    "UNIT_CO2_SET_FACTORY_RESET_MSG0": "set perform factory reset",
    "UNIT_CO2_REINIT_MSG0": "set sensor reinitializes",
    "UNIT_CO2L_INIT_MSG0": "Init",
    "UNIT_CO2L_IS_DATA_READY_MSG0": "is sensor data ready (return True or False)",
    "UNIT_CO2L_GET_VALUE_MSG0": "get",
    "UNIT_CO2L_GET_VALUE_MSG1": "value in ppm (return int, 400 ~ 2000)",
    "UNIT_CO2L_GET_TEMPERATURE_MSG0": "get",
    "UNIT_CO2L_GET_TEMPERATURE_MSG1": "temperature in °C (return float, -10 ~ 60)",
    "UNIT_CO2L_GET_HUMIDITY_MSG0": "get",
    "UNIT_CO2L_GET_HUMIDITY_MSG1": "humidity in RH% (return float, 0 ~ 100)",
    "UNIT_CO2L_GET_TEMPERATURE_OFFSET_MSG0": "get",
    "UNIT_CO2L_GET_TEMPERATURE_OFFSET_MSG1": "temperature offset in °C (return float)",
    "UNIT_CO2L_GET_SENSOR_ALTITUDE_MSG0": "get",
    "UNIT_CO2L_GET_SENSOR_ALTITUDE_MSG1": "sensor altitude in meters (return int)",
    "UNIT_CO2L_GET_CALIBRATION_ENABLED_MSG0": "get",
    "UNIT_CO2L_GET_CALIBRATION_ENABLED_MSG1": "automatic self calibration enabled (return True or False)",
    "UNIT_CO2L_GET_SERIAL_NUMBER_MSG0": "get",
    "UNIT_CO2L_GET_SERIAL_NUMBER_MSG1": "serial number (return tuple)",
    "UNIT_CO2L_SET_START_PERIODIC_MEASUREMENT_MSG0": "set start periodic measurement",
    "UNIT_CO2L_SET_STOP_PERIODIC_MEASUREMENT_MSG0": "set stop periodic measurement",
    "UNIT_CO2L_SET_TEMPERATURE_OFFSET_MSG0": "set temperature offset",
    "UNIT_CO2L_SET_TEMPERATURE_OFFSET_MSG1": "in °C",
    "UNIT_CO2L_SET_SENSOR_ALTITUDE_MSG0": "set sensor altitude",
    "UNIT_CO2L_SET_SENSOR_ALTITUDE_MSG1": "in meters",
    "UNIT_CO2L_SET_AMBIENT_PRESSURE_MSG0": "set ambient pressure",
    "UNIT_CO2L_SET_AMBIENT_PRESSURE_MSG1": "in hPa",
    "UNIT_CO2L_SET_FORCE_CALIBRATION_MSG0": "set perform force calibration in co2 value",
    "UNIT_CO2L_SET_CALIBRATION_ENABLED_MSG0": "set automatic self calibration",
    "UNIT_CO2L_SET_START_LOW_PERIODIC_MEASUREMENT_MSG0": "set start low periodic measurement",
    "UNIT_CO2L_SAVE_TO_EEPROM_MSG0": "save current configure settings to eeprom",
    "UNIT_CO2L_SET_SELF_TEST_MSG0": "set perform self test",
    "UNIT_CO2L_SET_FACTORY_RESET_MSG0": "set perform factory reset",
    "UNIT_CO2L_REINIT_MSG0": "set sensor reinitializes",
    "UNIT_CO2L_SET_SINGLE_SHOT_MEASUREMENT_ALL_MSG0": "set single shot in all measurements",
    "UNIT_CO2L_SET_SINGLE_SHOT_MEASUREMENT_HT_MSG0": "set single shot in temperature and humidity measurements",
    "UNIT_CO2L_SET_SLEEP_MODE_MSG0": "set sensor sleep mode",
    "UNIT_CO2L_SET_WAKE_UP_MSG0": "set sensor wake up",
    "UNIT_CAN_INIT_MSG0": "Init",
    "UNIT_CAN_INIT_MSG1": "mode",
    "UNIT_CAN_INIT_MSG2": "baudrate",
    "UNIT_CAN_DEINIT_MSG0": "deinit",
    "UNIT_CAN_RESTART_MSG0": "restart",
    "UNIT_CAN_GET_STATE_MSG0": "get state (return int)",
    "UNIT_CAN_GET_INFO_MSG0": "get error status information",
    "UNIT_CAN_ANY_MSG0": "count of available (return True or False)",
    "UNIT_CAN_RECV_MESSAGE_MSG0": "read message timeout",
    "UNIT_CAN_RECV_MESSAGE_MSG1": "(return tuple)",
    "UNIT_CAN_RECV_MESSAGE_INFO_MSG0": "read message into",
    "UNIT_CAN_RECV_MESSAGE_INFO_MSG1": "timeout",
    "UNIT_CAN_SEND_DATA_MSG0": "send",
    "UNIT_CAN_SEND_DATA_MSG1": "id",
    "UNIT_CAN_SEND_DATA_MSG2": "timeout",
    "UNIT_CAN_SEND_DATA_MSG3": "rtr",
    "UNIT_CAN_SEND_DATA_MSG4": "extframe",
    "UNIT_MINICAN_INIT_MSG0": "Init",
    "UNIT_MINICAN_INIT_MSG1": "mode",
    "UNIT_MINICAN_INIT_MSG2": "baudrate",
    "UNIT_MINICAN_DEINIT_MSG0": "deinit",
    "UNIT_MINICAN_RESTART_MSG0": "restart",
    "UNIT_MINICAN_GET_STATE_MSG0": "get state (return int)",
    "UNIT_MINICAN_GET_INFO_MSG0": "get error status information",
    "UNIT_MINICAN_ANY_MSG0": "count of available (return True or False)",
    "UNIT_MINICAN_RECV_MESSAGE_MSG0": "read message timeout",
    "UNIT_MINICAN_RECV_MESSAGE_MSG1": "(return tuple)",
    "UNIT_MINICAN_RECV_MESSAGE_INFO_MSG0": "read message into",
    "UNIT_MINICAN_RECV_MESSAGE_INFO_MSG1": "timeout",
    "UNIT_MINICAN_SEND_DATA_MSG0": "send",
    "UNIT_MINICAN_SEND_DATA_MSG1": "id",
    "UNIT_MINICAN_SEND_DATA_MSG2": "timeout",
    "UNIT_MINICAN_SEND_DATA_MSG3": "rtr",
    "UNIT_MINICAN_SEND_DATA_MSG4": "extframe",
    "UNIT_FADER_INIT_MSG0": "初期化 %1",
    "UNIT_FADER_SET_BRIGHTNESS_MSG0": "%1 輝度(0 ~ 100)を %2 に設定",
    "UNIT_FADER_FILL_COLOR_MSG0": "%1 RGB LEDを全て色 %2 に設定",
    "UNIT_FADER_SET_COLOR_MSG0": "%1 %2 番目のRGB LEDを色 %3 で設定",
    "UNIT_FAN_INIT_MSG0": "%1 初期化",
    "UNIT_FAN_SET_SPEED_CTRL_MSG0": "%1 スピード %2 (0 ~ 100)を設定",
    "UNIT_FAN_SET_PWM_FREQ_MSG0": "%1 PWMの周期を %2 (1 ~ 40000000)に設定",
    "UNIT_LASERRX_INIT_MSG0": "Init %1 with mode",
    "UNIT_LASERRX_INIT_MSG1": "id",
    "UNIT_LASERRX_CONFIGURE_UART_MSG0": "init uart with",
    "UNIT_LASERRX_CONFIGURE_UART_MSG1": "baudrate",
    "UNIT_LASERRX_CONFIGURE_UART_MSG2": "bits",
    "UNIT_LASERRX_CONFIGURE_UART_MSG3": "parity",
    "UNIT_LASERRX_CONFIGURE_UART_MSG4": "stop",
    "UNIT_LASERRX_UART_READ_BYTES_MSG0": "%1 read bytes (return bytes)",
    "UNIT_LASERRX_UART_ANY_MSG0": "%1 number of data available (return int)",
    "UNIT_LASERRX_GPIO_GET_VALUE_MSG0": "%1 get value (return 0 or 1)",
    "UNIT_LASERTX_INIT_MSG0": "Init %1 with mode",
    "UNIT_LASERTX_INIT_MSG1": "id",
    "UNIT_LASERTX_CONFIGURE_UART_MSG0": "init uart with",
    "UNIT_LASERTX_CONFIGURE_UART_MSG1": "baudrate",
    "UNIT_LASERTX_CONFIGURE_UART_MSG2": "bits",
    "UNIT_LASERTX_CONFIGURE_UART_MSG3": "parity",
    "UNIT_LASERTX_CONFIGURE_UART_MSG4": "stop",
    "UNIT_LASERTX_GPIO_ON_MSG0": "%1 on",
    "UNIT_LASERTX_GPIO_OFF_MSG0": "%1 off",
    "UNIT_LASERTX_GPIO_SET_VALUE_MSG0": "%1 set value %2 (0 ~ 1)",
    "UNIT_LASERTX_UART_WRITE_MESSAGE_MSG0": "%1 write message %2 in string",
    "UNIT_LASERTX_UART_WRITE_LIST_MSG0": "%1 write data in list %2",
    "UNIT_SSR_INIT_MSG0": "Init %1",
    "UNIT_SSR_ON_MSG0": "%1 on",
    "UNIT_SSR_OFF_MSG0": "%1 off",
    "UNIT_SSR_SET_STATE_MSG0": "%1 set state %2",
    "UNIT_ENCODER_INIT_MSG0": "初期化 %1 I2Cアドレス %2 (0x01 ~ 0x7f)",
    "UNIT_ENCODER_GET_ROTARY_STATUS_MSG0": "%1 は回っているか(True or False)",
    "UNIT_ENCODER_GET_ROTARY_VALUE_MSG0": "%1 の回転数(int)",
    "UNIT_ENCODER_GET_BUTTON_STATUS_MSG0": "%1 ボタンの状態(True or False)",
    "UNIT_ENCODER_FILL_COLOR_MSG0": "%1 RGB LEDを全て色 %2 に設定",
    "UNIT_ENCODER_SET_COLOR_MSG0": "%1 %2 番目のRGB LEDを色 %3 で設定",
    "UNIT_ENCODER_GET_INCREMENTS_MSG0": "%1 ロータリの増減値(int)",
    "UNIT_ENCODER_RESET_VALUE_MSG0": "%1 ロータリ値をリセット",
    "UNIT_ENCODER_SET_VALUE_MSG0": "%1 ロータリ値を %2 に設定",
    "UNIT_BUTTON_INIT_MSG0": "Init %1 active low %2 type %3",
    "UNIT_BUTTON_GET_COUNTER_VALUE_MSG0": "get %1 counter value (return int)",
    "UNIT_BUTTON_RESET_COUNTER_VALUE_MSG0": "Reset %1 counter value",
    "UNIT_BUTTON_TICK_MSG0": "%1 update in loop",
    "UNIT_BUTTON_CALLBACK_MSG0": "When %1 %2",
    "UNIT_BLDCDRIVER_INIT_MSG0": "Init %1 I2C address %2 (0x01 ~ 0x7f)",
    "UNIT_BLDCDRIVER_GET_CURRENT_MODE_MSG0": "get %1 current mode (return 0 or 1)",
    "UNIT_BLDCDRIVER_GET_MOTOR_CURRENT_DIRECTION_MSG0": "get %1 motor current direction (return 0 or 1)",
    "UNIT_BLDCDRIVER_GET_MOTOR_CURRENT_MODEL_MSG0": "get %1 motor current model (return 0 or 1)",
    "UNIT_BLDCDRIVER_GET_MOTOR_POLE_PAIRS_MSG0": "get %1 motor number of pole pairs (return int)",
    "UNIT_BLDCDRIVER_GET_MOTOR_STATUS_MSG0": "get %1 motor status (return int)",
    "UNIT_BLDCDRIVER_GET_OPEN_LOOP_PWM_MSG0": "get %1 open loop PWM value (return int)",
    "UNIT_BLDCDRIVER_GET_READ_BACK_RPM_FLOAT_MSG0": "get %1 read back rpm value in float (return float)",
    "UNIT_BLDCDRIVER_GET_READ_BACK_RPM_INT_MSG0": "get %1 read back rpm value in int (x100, return int)",
    "UNIT_BLDCDRIVER_GET_READ_BACK_RPM_STR_MSG0": "get %1 read back rpm value (return string)",
    "UNIT_BLDCDRIVER_GET_READ_BACK_FREQ_FLOAT_MSG0": "get %1 read back freq value in float (return float)",
    "UNIT_BLDCDRIVER_GET_READ_BACK_FREQ_INT_MSG0": "get %1 read back freq value in int (x100, return int)",
    "UNIT_BLDCDRIVER_GET_READ_BACK_FREQ_STR_MSG0": "get %1 read back freq value (return string)",
    "UNIT_BLDCDRIVER_GET_RPM_FLOAT_MSG0": "get %1 rpm value (return float)",
    "UNIT_BLDCDRIVER_GET_RPM_INT_MSG0": "get %1 rpm value (return int)",
    "UNIT_BLDCDRIVER_GET_PID_VALUE_MSG0": "get %1 PID value (return tuple)",
    "UNIT_BLDCDRIVER_GET_DEVICE_SPEC_MSG0": "get %1 %2 spec detail (return int)",
    "UNIT_BLDCDRIVER_SET_MODE_MSG0": "Set %1 %2 mode",
    "UNIT_BLDCDRIVER_SET_DIRECTION_MSG0": "Set %1 motor %2 direction",
    "UNIT_BLDCDRIVER_SET_MOTOR_MODEL_MSG0": "Set %1 motor %2 model",
    "UNIT_BLDCDRIVER_SAVE_DATA_IN_FLASH_MSG0": "%1 save current motor data in flash",
    "UNIT_BLDCDRIVER_SET_ADDRESS_MSG0": "Set %1 I2C address %2 (0x01 ~ 0x7f)",
    "UNIT_BLDCDRIVER_SET_POLE_PAIRS_MSG0": "Set %1 %2 number of pole pairs",
    "UNIT_BLDCDRIVER_SET_OPEN_LOOP_PWM_MSG0": "Set %1 open loop PWM %2 (0 ~ 2047)",
    "UNIT_BLDCDRIVER_SET_RPM_FLOAT_MSG0": "Set %1 motor rpm %2 in float",
    "UNIT_BLDCDRIVER_SET_RPM_INT_MSG0": "Set %1 motor rpm %2 in int",
    "UNIT_BLDCDRIVER_SET_PID_VALUE_MSG0": "Set %1 P %2 I %3 D %4",
    "UNIT_REFLECTIVEIR_INIT_MSG0": "Init %1",
    "UNIT_REFLECTIVEIR_GET_ANALOG_VALUE_MSG0": "get %1 analog value (return 0 ~ 65535)",
    "UNIT_REFLECTIVEIR_GET_DIGITAL_VALUE_MSG0": "get %1 digital value (return 0 or 1)",
    "UNIT_REFLECTIVEIR_ENABLE_IRQ_MSG0": "%1 enable detect event",
    "UNIT_REFLECTIVEIR_DISABLE_IRQ_MSG0": "%1 disable detect event",
    "UNIT_REFLECTIVEIR_CALLBACK_MSG0": "When %1 %2",
    "UNIT_HALLEFFECT_INIT_MSG0": "%1 初期化",
    "UNIT_HALLEFFECT_ENABLE_IRQ_MSG0": "%1 イベント検出を有効化",
    "UNIT_HALLEFFECT_DISABLE_IRQ_MSG0": "%1 イベント検出を無効化",
    "UNIT_HALLEFFECT_GET_STATUS_MSG0": "%1 状態を取得(True or False)",
    "UNIT_HALLEFFECT_CALLBACK_MSG0": "%1 が %2 の時",
    "UNIT_HALLEFFECT_IRQ_ACTIVE_MSG0": "%1 IRQを有効化",
    "UNIT_HALLEFFECT_IRQ_NEGACTIVE_MSG0": "%1 IRQを無効化",
    "UNIT_BUZZER_INIT_MSG0": "Init %1",
    "UNIT_BUZZER_DEINIT_MSG0": "%1 deinit",
    "UNIT_BUZZER_TURN_OFF_MSG0": "%1 turn off",
    "UNIT_BUZZER_SET_FREQ_MSG0": "%1 set freq %2 Hz(100 ~ 10000)",
    "UNIT_BUZZER_SET_DUTY_MSG0": "%1 set duty %2 %",
    "UNIT_BUZZER_SET_ONCE_MSG0": "play once with",
    "UNIT_BUZZER_SET_ONCE_MSG1": "freq (100 ~ 10000 Hz)",
    "UNIT_BUZZER_SET_ONCE_MSG2": "duty (%)",
    "UNIT_BUZZER_SET_ONCE_MSG3": "duration (ms)",
    "UNIT_EXTENCODER_INIT_MSG0": "Init %1 I2C address %2 (0x01 ~ 0x7f)",
    "UNIT_EXTENCODER_GET_ROTARY_STATUS_MSG0": "%1 had rotated (return True or False)",
    "UNIT_EXTENCODER_GET_ROTARY_VALUE_MSG0": "get %1 rotary value (return int)",
    "UNIT_EXTENCODER_GET_INCREMENTS_MSG0": "get %1 rotary increments (return int)",
    "UNIT_EXTENCODER_RESET_VALUE_MSG0": "Reset %1 rotary value",
    "UNIT_EXTENCODER_SET_VALUE_MSG0": "Set %1 rotary value %2",
    "UNIT_EXTENCODER_GET_PERIMETER_MSG0": "get %1 perimeter (return int)",
    "UNIT_EXTENCODER_GET_PULSE_MSG0": "get %1 pulse (return int)",
    "UNIT_EXTENCODER_GET_ZERO_MODE_MSG0": "get %1 zero mode (return int)",
    "UNIT_EXTENCODER_GET_METER_VALUE_MSG0": "get %1 meter value (return int)",
    "UNIT_EXTENCODER_GET_ZERO_PULSE_MSG0": "get %1 zero pulse value (return int)",
    "UNIT_EXTENCODER_SET_PERIMETER_MSG0": "Set %1 perimeter %2",
    "UNIT_EXTENCODER_SET_PULSE_MSG0": "Set %1 pulse %2",
    "UNIT_EXTENCODER_SET_ZERO_MODE_MSG0": "Set %1 zero mode %2",
    "UNIT_EXTENCODER_SET_ZERO_PULSE_MSG0": "Set %1 zero pulse %2",
    "UNIT_EXTENCODER_GET_FW_VERSION_MSG0": "get %1 firmware version (return string)",
    "UNIT_EXTENCODER_SET_ADDRESS_MSG0": "Set %1 I2C address %2 (0x01 ~ 0x7f)",
    "HAT_DAC2_INIT_MSG0": "Init",
    "hat_DAC2_INIT_MSG1": "I2C address",
    "hat_DAC2_INIT_MSG2": "(0x0 ~ 0x7f)",
    "hat_DAC2_SET_VOLTAGE_RANGE_MSG0": "Set",
    "hat_DAC2_SET_VOLTAGE_RANGE_MSG1": "output voltage range",
    "hat_DAC2_SET_VOLTAGE_MSG0": "Set",
    "hat_DAC2_SET_VOLTAGE_MSG1": "channel",
    "hat_DAC2_SET_VOLTAGE_MSG2": "output voltage",
    "hat_DAC2_SET_VOLTAGE_MSG3": "(V)",
    "hat_DAC2_SET_VOLTAGE_BOTH_MSG0": "Set",
    "hat_DAC2_SET_VOLTAGE_BOTH_MSG1": "channel0 output voltage",
    "hat_DAC2_SET_VOLTAGE_BOTH_MSG2": "(V)",
    "hat_DAC2_SET_VOLTAGE_BOTH_MSG3": "channel1 output voltage",
    "hat_DAC2_SET_VOLTAGE_BOTH_MSG4": "(V)",
    "HAT_DAC_INIT_MSG0": "Init %1",
    "HAT_DAC_GET_VALUE_MSG0": "get %1 DAC value (return int)",
    "HAT_DAC_GET_VOLTAGE_MSG0": "get %1 voltage (return float)",
    "HAT_DAC_GET_RAW_VALUE_MSG0": "get %1 raw value (return int)",
    "HAT_DAC_GET_NORMALIZED_VALUE_MSG0": "get %1 normalized value (return 0.0 ~ 1.0)",
    "HAT_DAC_SET_VALUE_MSG0": "%1 DAC value %2 (0 ~ 65535)",
    "HAT_DAC_SET_VOLTAGE_MSG0": "%1 voltage %2 (0 ~ 3.3)",
    "HAT_DAC_SET_RAW_VALUE_MSG0": "%1 raw value %2 (0 ~ 4095)",
    "HAT_DAC_SET_NORMALIZED_VALUE_MSG0": "%1 normalized value %2 (0.0 ~ 1.0)",
    "HAT_DAC_SAVE_TO_EEPROM_MSG0": "%1 save to eeprom",
    "HAT_ADC_INIT_MSG0": "Init %1",
    "HAT_ADC_GET_VALUE_MSG0": "get %1 value (return int)",
    "HAT_ADC_GET_VOLTAGE_MSG0": "get %1 voltage (return float)",
    "HAT_ADC_GET_RAW_VALUE_MSG0": "get %1 raw value (return int)",
    "HAT_ADC_GET_OPERATING_MODE_MSG0": "get %1 operating mode (return 0 or 1)",
    "HAT_ADC_GET_DATA_RATE_MSG0": "get %1 data rate (return int)",
    "HAT_ADC_GET_GAIN_MSG0": "get %1 gain (return int)",
    "HAT_ADC_SET_OPERATING_MODE_MSG0": "%1 operating mode %2",
    "HAT_ADC_SET_DATA_RATE_MSG0": "%1 data rate %2",
    "HAT_ADC_SET_GAIN_MSG0": "%1 gain %2",
    "HAT_DLIGHT_INIT_MSG0": "%1 初期化",
    "HAT_DLIGHT_GET_LUX_MSG0": "%1 LUX値(float)",
    "HAT_DLIGHT_CONFIGURE_MSG0": "%1 モード %2 解像度 %3 に設定",
    "HAT_NCIR_INIT_MSG0": "Init %1",
    "HAT_NCIR_GET_AMBIENT_TEMPERATURE_MSG0": "get %1 ambient temperature (°C, return float)",
    "HAT_NCIR_GET_OBJECT_TEMPERATURE_MSG0": "get %1 object temperature (°C, return float)",
    "HAT_TOF_INIT_MSG0": "%1 初期化",
    "HAT_TOF_GET_DATA_STATUS_MSG0": "%1 データ取得可能状態(True or False)",
    "HAT_TOF_GET_DISTANCE_MSG0": "%1 距離(cm:float)",
    "HAT_TOF_GET_RANGE_MSG0": "%1 範囲(mm:int)",
    "HAT_TOF_GET_CONTINUOUS_MODE_MSG0": "%1 連続モードか(True or False)",
    "HAT_TOF_GET_MEASUREMENT_TIMING_BUDGET_MSG0": "%1 measurement timing budget(int)",
    "HAT_TOF_SET_MEASUREMENT_TIMING_BUDGET_MSG0": "%1 measurement timing budgetを %2 に設定",
    "HAT_TOF_SET_ADDRESS_MSG0": "%1 アドレスを %2 に設定",
    "HAT_TOF_GET_SIGNAL_RATE_LIMIT_MSG0": "get %1 signal rate limit (return float)",
    "HAT_TOF_SET_SIGNAL_RATE_LIMIT_MSG0": "%1 signal rate limit %2 MCPS (0.0 ~ 511.99)",
    "HAT_TOF_START_CONTINUOUS_MSG0": "%1 start continuous",
    "HAT_TOF_STOP_CONTINUOUS_MSG0": "%1 stop continuous",
    "HAT_RS485_INIT_MSG0": "Init",
    "HAT_RS485_CONFIGURE_MSG0": "Configure",
    "HAT_RS485_CONFIGURE_MSG1": "UART",
    "HAT_RS485_CONFIGURE_MSG2": "baudrate",
    "HAT_RS485_CONFIGURE_MSG3": "data bits",
    "HAT_RS485_CONFIGURE_MSG4": "stop bits",
    "HAT_RS485_CONFIGURE_MSG5": "parity",
    "HAT_RS485_CONFIGURE_MSG6": "TX pin",
    "HAT_RS485_CONFIGURE_MSG7": "RX pin",
    "HAT_RS485_CONFIGURE_MSG8": "ctrl pin",
    "HAT_RS485_READ_ALL_BYTES_MSG0": "read all bytes (return bytes)",
    "HAT_RS485_READ_BYTES_MSG0": "read",
    "HAT_RS485_READ_BYTES_MSG1": "bytes (return bytes)",
    "HAT_RS485_READ_LINE_MSG0": "read line (return bytes)",
    "HAT_RS485_REMAIN_CACHE_MSG0": "number of bytes available",
    "HAT_RS485_WRITE_MSG0": "write",
    "HAT_RS485_WRITE_LINE_MSG0": "write a line",
    "HAT_RS485_WRITE_LIST_BYTES_MSG0": "write list of bytes",
    "HAT_RS485_READ_COILS_MSG0": "read coils",
    "HAT_RS485_READ_COILS_MSG1": "slave address (0 ~ 247)",
    "HAT_RS485_READ_COILS_MSG2": "starting address (0 ~ 9999)",
    "HAT_RS485_READ_COILS_MSG3": "coil qty",
    "HAT_RS485_READ_COILS_MSG4": "timeout",
    "HAT_RS485_READ_COILS_MSG5": "(return list)",
    "HAT_RS485_READ_DISCRETE_INPUTS_MSG0": "read discrete inputs",
    "HAT_RS485_READ_DISCRETE_INPUTS_MSG1": "slave address (0 ~ 247)",
    "HAT_RS485_READ_DISCRETE_INPUTS_MSG2": "starting address (0 ~ 9999)",
    "HAT_RS485_READ_DISCRETE_INPUTS_MSG3": "input qty",
    "HAT_RS485_READ_DISCRETE_INPUTS_MSG4": "timeout",
    "HAT_RS485_READ_DISCRETE_INPUTS_MSG5": "(return list)",
    "HAT_RS485_READ_HOLDING_REGISTERS_MSG0": "read holding registers",
    "HAT_RS485_READ_HOLDING_REGISTERS_MSG1": "slave address (0 ~ 247)",
    "HAT_RS485_READ_HOLDING_REGISTERS_MSG2": "starting address (0 ~ 9999)",
    "HAT_RS485_READ_HOLDING_REGISTERS_MSG3": "register qty",
    "HAT_RS485_READ_HOLDING_REGISTERS_MSG4": "signed",
    "HAT_RS485_READ_HOLDING_REGISTERS_MSG5": "timeout",
    "HAT_RS485_READ_HOLDING_REGISTERS_MSG6": "(return list)",
    "HAT_RS485_READ_INPUT_REGISTERS_MSG0": "read input registers",
    "HAT_RS485_READ_INPUT_REGISTERS_MSG1": "slave address (0 ~ 247)",
    "HAT_RS485_READ_INPUT_REGISTERS_MSG2": "starting address (0 ~ 9999)",
    "HAT_RS485_READ_INPUT_REGISTERS_MSG3": "register qty",
    "HAT_RS485_READ_INPUT_REGISTERS_MSG4": "signed",
    "HAT_RS485_READ_INPUT_REGISTERS_MSG5": "timeout",
    "HAT_RS485_READ_INPUT_REGISTERS_MSG6": "(return list)",
    "HAT_RS485_WRITE_SINGLE_COIL_MSG0": "write single coil",
    "HAT_RS485_WRITE_SINGLE_COIL_MSG1": "slave address (0 ~ 247)",
    "HAT_RS485_WRITE_SINGLE_COIL_MSG2": "output address (0 ~ 9999)",
    "HAT_RS485_WRITE_SINGLE_COIL_MSG3": "output",
    "HAT_RS485_WRITE_SINGLE_COIL_MSG4": "timeout",
    "HAT_RS485_WRITE_SINGLE_REGISTER_MSG0": "write single register",
    "HAT_RS485_WRITE_SINGLE_REGISTER_MSG1": "slave address (0 ~ 247)",
    "HAT_RS485_WRITE_SINGLE_REGISTER_MSG2": "register address (0 ~ 9999)",
    "HAT_RS485_WRITE_SINGLE_REGISTER_MSG3": "register value",
    "HAT_RS485_WRITE_SINGLE_REGISTER_MSG4": "signed",
    "HAT_RS485_WRITE_SINGLE_REGISTER_MSG5": "timeout",
    "HAT_RS485_WRITE_MULTIPLE_COILS_MSG0": "write multiple coils",
    "HAT_RS485_WRITE_MULTIPLE_COILS_MSG1": "slave address (0 ~ 247)",
    "HAT_RS485_WRITE_MULTIPLE_COILS_MSG2": "starting address (0 ~ 9999)",
    "HAT_RS485_WRITE_MULTIPLE_COILS_MSG3": "output value",
    "HAT_RS485_WRITE_MULTIPLE_COILS_MSG4": "timeout",
    "HAT_RS485_WRITE_MULTIPLE_REGISTER_MSG0": "write multiple register",
    "HAT_RS485_WRITE_MULTIPLE_REGISTER_MSG1": "slave address (0 ~ 247)",
    "HAT_RS485_WRITE_MULTIPLE_REGISTER_MSG2": "starting address (0 ~ 9999)",
    "HAT_RS485_WRITE_MULTIPLE_REGISTER_MSG3": "register value",
    "HAT_RS485_WRITE_MULTIPLE_REGISTER_MSG4": "signed",
    "HAT_RS485_WRITE_MULTIPLE_REGISTER_MSG5": "timeout",
    "HAT_VIBRATOR_INIT_MSG0": "%1 初期化",
    "HAT_VIBRATOR_DEINIT_MSG0": "%1 deinit",
    "HAT_VIBRATOR_TURN_OFF_MSG0": "%1 振動を停止",
    "HAT_VIBRATOR_SET_FREQ_MSG0": "%1 周波数(10 ~ 55)を %2 に設定",
    "HAT_VIBRATOR_SET_DUTY_MSG0": "%1 デューティ比を %2 %に設定",
    "HAT_VIBRATOR_SET_ONCE_MSG0": "一度だけ実行",
    "HAT_VIBRATOR_SET_ONCE_MSG1": "周波数(10 ~ 55 Hz)",
    "HAT_VIBRATOR_SET_ONCE_MSG2": "デューティ比 (%)",
    "HAT_VIBRATOR_SET_ONCE_MSG3": "期間 (ms)",
    "HAT_YUN_INIT_MSG0": "%1 初期化",
    "HAT_YUN_GET_BMP280_TEMPERATURE_MSG0": "%1 BMP280の温度(°C:float)を取得",
    "HAT_YUN_GET_SHT20_TEMPERATURE_MSG0": "%1 SHT20の温度(°C:float)を取得",
    "HAT_YUN_GET_PRESSURE_MSG0": "%1 気圧(hPa:float)を取得",
    "HAT_YUN_GET_HUMIDITY_MSG0": "%1 湿度(%:float)を取得",
    "HAT_YUN_GET_LIGHT_BRIGHTNESS_MSG0": "%1 光センサー(ADC)の値(int)を取得",
    "HAT_YUN_FILL_COLOR_MSG0": "%1 RGB LEDを全て色 %2 に設定",
    "HAT_YUN_SET_COLOR_MSG0": "%1 %2 番目のRGB LEDを色 %3 で設定",
    "HAT_SERVOS8V11_INIT_MSG0": "Init %1 I2C address %2 (0x0 ~ 0x7f)",
    "HAT_SERVOS8V11_GET_POWER_STATE_MSG0": "get %1 power state",
    "HAT_SERVOS8V11_POWER_CTRL_MSG0": "%1 set power state %2",
    "HAT_SERVOS8V11_ON_MSG0": "%1 power on",
    "HAT_SERVOS8V11_OFF_MSG0": "%1 power off",
    "HAT_SERVOS8V11_WRITE_ANGLE_MSG0": "%1 set channel %2 servo angle %3 (0 ~ 180)",
    "HAT_SERVOS8V11_WRITE_PULSE_MSG0": "%1 set channel %2 servo pulse %3 (500 ~ 2500)",
    "HAT_SERVOS8V11_READ_ANGLE_MSG0": "read %1 channel %2 servo angle (return 0 ~ 180)",
    "HAT_SERVOS8V11_READ_PULSE_MSG0": "read %1 channel %2 servo pulse (return 500 ~ 2500)",
    "HAT_MINIENCODERC_INIT_MSG0": "%1 I2Cアドレス(0x0 ~ 0x7f) %2 で初期化",
    "HAT_MINIENCODERC_GET_ROTARY_STATUS_MSG0": "%1 ロータリーの状態(True or False)",
    "HAT_MINIENCODERC_GET_ROTARY_VALUE_MSG0": "%1 ロータリーの値(int)",
    "HAT_MINIENCODERC_GET_INCREMENTS_MSG0": "%1 ロータリーの増減値(int)",
    "HAT_MINIENCODERC_GET_BUTTON_STATUS_MSG0": "%1 ボタンスイッチの状態(int)",
    "HAT_MINIENCODERC_RESET_VALUE_MSG0": "%1 値をリセット",
    "HAT_MINIENCODERC_FILL_COLOR_MSG0": "%1 RGB LEDを色 %2 で設定",
    "HAT_MINIENCODERC_SET_ADDRESS_MSG0": "%1 I2Cアドレス(0x0 ~ 0x7f)を %2 に設定",
    "HAT_MINIENCODERC_SET_ROTARY_VALUE_MSG0": "%1 ロータリーの値を設定",
    "HAT_MINIENCODERC_READ_FW_VERSION_MSG0": "%1 ファームウエアのバージョン(string)",
    "CLICK_CONFIRGURE_SELECT": "Click the configure button for firmware select."
}
